%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: -777816280, guid: 0ee6dcaabb37145ba9f3967369d67ecb, type: 3}
  m_Name: SVC_Luna
  m_EditorClassIdentifier: 
  _svcLunaVersion: 3
  _shaderVariants:
  - shaderCompilerPlatform: 5
    shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
    - _ALPHATEST_ON
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
    - _ALPHATEST_ON
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _ALPHATEST_ON
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - POINT
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - POINT
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - POINT
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - POINT
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _ALPHATEST_ON
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - POINT
    - _ALPHATEST_ON
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - POINT
    - _ALPHATEST_ON
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 9
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 5
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 2
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    passType: 2
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 202, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 202, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 200, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 200, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - PIXELSNAP_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - PIXELSNAP_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 203, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 203, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 9
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 5
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 9
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 5
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 9
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 5
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 9
    shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 5
    shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 9
    shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 5
    shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 9
    shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 5
    shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
    passType: 2
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
    passType: 2
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 9
    shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 5
    shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
    passType: 2
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
    passType: 2
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - POINT
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - POINT
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - DIRECTIONAL
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - POINT
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 5
    passId: 1
    subShaderIndex: 1
    upToDate: 0
    keywords:
    - POINT
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 5
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_NONE
  - shaderCompilerPlatform: 9
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_NONE
  - shaderCompilerPlatform: 5
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_SIMPLE
  - shaderCompilerPlatform: 9
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_SIMPLE
  - shaderCompilerPlatform: 5
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_HIGH_QUALITY
  - shaderCompilerPlatform: 9
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_HIGH_QUALITY
  - shaderCompilerPlatform: 5
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_NONE
    - _SUNDISK_SIMPLE
  - shaderCompilerPlatform: 9
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_NONE
    - _SUNDISK_SIMPLE
  - shaderCompilerPlatform: 5
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_HIGH_QUALITY
    - _SUNDISK_SIMPLE
  - shaderCompilerPlatform: 9
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_HIGH_QUALITY
    - _SUNDISK_SIMPLE
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
  _usedByLunaBuild:
  - shaderCompilerPlatform: 5
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 9
    shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _NORMALMAP
    - _SPECGLOSSMAP
  - shaderCompilerPlatform: 5
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _SPECULARHIGHLIGHTS_OFF
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _EMISSION
  - shaderCompilerPlatform: 5
    shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
    passType: 1
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_SIMPLE
  - shaderCompilerPlatform: 9
    shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - _SUNDISK_SIMPLE
  - shaderCompilerPlatform: 5
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 202, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 202, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 200, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 200, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 203, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 203, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 9
    shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
  - shaderCompilerPlatform: 5
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 9
    shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    passType: 0
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords: []
  - shaderCompilerPlatform: 5
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
  - shaderCompilerPlatform: 9
    shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    passType: 4
    passId: 0
    subShaderIndex: 0
    upToDate: 0
    keywords:
    - DIRECTIONAL
    - LIGHTPROBE_SH
    - _ALPHATEST_ON
  _includedShaderVariants: []
  _excludedShaderVariants: []
  version: 208
  _shaderParsedShaders:
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nvarying
            highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _Color;\nuniform highp sampler2D _MainTex;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvoid
            main()\n{\n    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0
            = u_xlat0 * _Color;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags: []
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec2 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _Color;\nUNITY_LOCATION(0) uniform
            highp sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvoid main()\n{\n   
            u_xlat0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat0
            * _Color;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags: []
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags: []
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
      Tags: []
    Shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 66, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords: []
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags: []
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: 512
      - Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords: []
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: DepthNormalsOnly
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: 512
      - Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords: []
        KeywordGroups: []
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: DepthOnly
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: 512
      Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
      Tags: []
    Shader: {fileID: 17, guid: 0000000000000000e000000000000000, type: 0}
    ShaderPath: Library/unity default resources
    ShaderDefinedKeywords: []
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp
            vec4 in_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nvoid main()\n{\n    u_xlat0 =
            in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    vs_TEXCOORD1.w
            = u_xlat0.x;\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx
            * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx *
            u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;\n    u_xlat3.xyz
            = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);\n    u_xlat0.x = in_TANGENT0.w
            * unity_WorldTransformParams.w;\n    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;\n   
            vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.x = u_xlat2.z;\n    vs_TEXCOORD1.z
            = u_xlat1.y;\n    vs_TEXCOORD2.x = u_xlat2.x;\n    vs_TEXCOORD3.x = u_xlat2.y;\n   
            vs_TEXCOORD2.z = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat1.x;\n    vs_TEXCOORD2.w
            = u_xlat0.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD2.y = u_xlat3.y;\n   
            vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _BumpMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nmediump float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.x
            = vs_TEXCOORD1.w;\n    u_xlat0.y = vs_TEXCOORD2.w;\n    u_xlat0.z = vs_TEXCOORD3.w;\n   
            u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat12
            = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 =
            inversesqrt(u_xlat16_13);\n    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n   
            u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy
            = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_13
            = dot(u_xlat16_2.xy, u_xlat16_2.xy);\n    u_xlat16_13 = min(u_xlat16_13,
            1.0);\n    u_xlat16_13 = (-u_xlat16_13) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_13);\n   
            u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y
            = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz,
            u_xlat16_2.xyz);\n    u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, u_xlat16_1.xyz);\n   
            u_xlat16_1.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_1.xy
            = max(u_xlat16_1.xy, vec2(0.0, 0.0));\n    u_xlat0.x = log2(u_xlat16_1.x);\n   
            u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.x = u_xlat0.x * u_xlat10_2.w;\n    u_xlat16_1.xzw = u_xlat10_2.xyz
            * _Color.xyz;\n    u_xlat16_1.xzw = u_xlat16_1.xzw * _LightColor0.xyz;\n   
            u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat0.xyz
            = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat0.xyz = u_xlat16_1.xzw * u_xlat16_1.yyy
            + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec4 in_TANGENT0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD6;\nout
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec3
            u_xlat3;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    vs_TEXCOORD1.w
            = u_xlat0.x;\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx
            * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx *
            u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;\n    u_xlat3.xyz
            = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);\n    u_xlat0.x = in_TANGENT0.w
            * unity_WorldTransformParams.w;\n    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;\n   
            vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.x = u_xlat2.z;\n    vs_TEXCOORD1.z
            = u_xlat1.y;\n    vs_TEXCOORD2.x = u_xlat2.x;\n    vs_TEXCOORD3.x = u_xlat2.y;\n   
            vs_TEXCOORD2.z = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat1.x;\n    vs_TEXCOORD2.w
            = u_xlat0.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD2.y = u_xlat3.y;\n   
            vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _BumpMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec2 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nmediump
            vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nmediump
            float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.x = vs_TEXCOORD1.w;\n   
            u_xlat0.y = vs_TEXCOORD2.w;\n    u_xlat0.z = vs_TEXCOORD3.w;\n    u_xlat0.xyz
            = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz
            = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13
            = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n   
            u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat16_0.xy
            = texture(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy = u_xlat16_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_13 = dot(u_xlat16_2.xy,
            u_xlat16_2.xy);\n    u_xlat16_13 = min(u_xlat16_13, 1.0);\n    u_xlat16_13
            = (-u_xlat16_13) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_13);\n    u_xlat16_3.x
            = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y = dot(vs_TEXCOORD2.xyz,
            u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);\n   
            u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));\n    u_xlat0.x =
            log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat16_2
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.x = u_xlat0.x * u_xlat16_2.w;\n   
            u_xlat16_1.xzw = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_1.xzw = u_xlat16_1.xzw
            * _LightColor0.xyz;\n    u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat0.xyz = u_xlat16_1.xzw
            * u_xlat16_1.yyy + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp
            vec4 in_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            mediump vec3 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD6;\nvarying
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump float u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    vs_TEXCOORD1.w
            = u_xlat0.x;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat1.xyz = u_xlat0.xxx *
            u_xlat1.xyz;\n    vs_TEXCOORD1.x = u_xlat1.z;\n    u_xlat2.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat0.x = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2 =
            u_xlat0.xxxx * u_xlat2.xyzz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;\n   
            u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);\n    u_xlat0.x
            = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat3.xyz = u_xlat0.xxx
            * u_xlat3.xyz;\n    vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.z =
            u_xlat2.x;\n    vs_TEXCOORD2.x = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat1.y;\n   
            vs_TEXCOORD2.w = u_xlat0.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD2.y
            = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD2.z = u_xlat2.y;\n   
            vs_TEXCOORD3.z = u_xlat2.w;\n    u_xlat16_4 = u_xlat2.y * u_xlat2.y;\n   
            u_xlat16_4 = u_xlat2.x * u_xlat2.x + (-u_xlat16_4);\n    u_xlat16_0 =
            u_xlat2.ywzx * u_xlat2;\n    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_5.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_4)
            + u_xlat16_5.xyz;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump
            vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform \tmediump
            vec4 _Color;\nuniform \tmediump float _Shininess;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _BumpMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying mediump vec3 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3
            u_xlat4;\nfloat u_xlat15;\nmediump float u_xlat16_16;\nmediump float
            u_xlat16_17;\nvoid main()\n{\n    u_xlat0.x = vs_TEXCOORD1.w;\n    u_xlat0.y
            = vs_TEXCOORD2.w;\n    u_xlat0.z = vs_TEXCOORD3.w;\n    u_xlat0.xyz =
            (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat15 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat16_1.xyz
            = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_16
            = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_16 = inversesqrt(u_xlat16_16);\n   
            u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;\n    u_xlat10_0.xy
            = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy = u_xlat10_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_16 = dot(u_xlat16_2.xy,
            u_xlat16_2.xy);\n    u_xlat16_16 = min(u_xlat16_16, 1.0);\n    u_xlat16_16
            = (-u_xlat16_16) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_16);\n    u_xlat16_3.x
            = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y = dot(vs_TEXCOORD2.xyz,
            u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);\n   
            u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat4.x
            = log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat4.x
            = u_xlat4.x * u_xlat16_1.x;\n    u_xlat4.x = exp2(u_xlat4.x);\n    u_xlat10_1
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat4.x = u_xlat10_1.w
            * u_xlat4.x;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * _Color.xyz;\n   
            u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat4.xyz
            = u_xlat4.xxx * u_xlat16_3.xyz;\n    u_xlat16_17 = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_17 = max(u_xlat16_17, 0.0);\n    u_xlat16_3.xyz = u_xlat16_2.xyz
            * _LightColor0.xyz;\n    u_xlat4.xyz = u_xlat16_3.xyz * vec3(u_xlat16_17)
            + u_xlat4.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr,
            u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_3.z
            = dot(unity_SHAb, u_xlat0);\n    u_xlat16_3.xyz = u_xlat16_3.xyz + vs_TEXCOORD4.xyz;\n   
            u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz
            = log2(u_xlat16_3.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657,
            0.416666657, 0.416666657);\n    u_xlat0.xyz = exp2(u_xlat0.xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995)
            + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat0.xyz
            = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    SV_Target0.xyz = u_xlat16_2.xyz
            * u_xlat0.xyz + u_xlat4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec4 in_TANGENT0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout mediump vec3 vs_TEXCOORD4;\nout
            highp vec4 vs_TEXCOORD6;\nout highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump
            float u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    vs_TEXCOORD1.w
            = u_xlat0.x;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat1.xyz = u_xlat0.xxx *
            u_xlat1.xyz;\n    vs_TEXCOORD1.x = u_xlat1.z;\n    u_xlat2.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat0.x = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2 =
            u_xlat0.xxxx * u_xlat2.xyzz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;\n   
            u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);\n    u_xlat0.x
            = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat3.xyz = u_xlat0.xxx
            * u_xlat3.xyz;\n    vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.z =
            u_xlat2.x;\n    vs_TEXCOORD2.x = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat1.y;\n   
            vs_TEXCOORD2.w = u_xlat0.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD2.y
            = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD2.z = u_xlat2.y;\n   
            vs_TEXCOORD3.z = u_xlat2.w;\n    u_xlat16_4 = u_xlat2.y * u_xlat2.y;\n   
            u_xlat16_4 = u_xlat2.x * u_xlat2.x + (-u_xlat16_4);\n    u_xlat16_0 =
            u_xlat2.ywzx * u_xlat2;\n    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_5.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_4)
            + u_xlat16_5.xyz;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Shininess;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _BumpMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin mediump vec3
            vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec2 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nfloat u_xlat15;\nmediump
            float u_xlat16_16;\nmediump float u_xlat16_17;\nvoid main()\n{\n    u_xlat0.x
            = vs_TEXCOORD1.w;\n    u_xlat0.y = vs_TEXCOORD2.w;\n    u_xlat0.z = vs_TEXCOORD3.w;\n   
            u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat15
            = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_16 =
            inversesqrt(u_xlat16_16);\n    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;\n   
            u_xlat16_0.xy = texture(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy
            = u_xlat16_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_16
            = dot(u_xlat16_2.xy, u_xlat16_2.xy);\n    u_xlat16_16 = min(u_xlat16_16,
            1.0);\n    u_xlat16_16 = (-u_xlat16_16) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_16);\n   
            u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y
            = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz,
            u_xlat16_2.xyz);\n    u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, u_xlat16_1.xyz);\n   
            u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat4.x = log2(u_xlat16_1.x);\n   
            u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat4.x = u_xlat4.x * u_xlat16_1.x;\n   
            u_xlat4.x = exp2(u_xlat4.x);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat4.x = u_xlat16_1.w * u_xlat4.x;\n    u_xlat16_2.xyz = u_xlat16_1.xyz
            * _Color.xyz;\n    u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n   
            u_xlat4.xyz = u_xlat4.xxx * u_xlat16_3.xyz;\n    u_xlat16_17 = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_17 = max(u_xlat16_17, 0.0);\n   
            u_xlat16_3.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n    u_xlat4.xyz
            = u_xlat16_3.xyz * vec3(u_xlat16_17) + u_xlat4.xyz;\n    u_xlat0.w =
            1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y
            = dot(unity_SHAg, u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz + vs_TEXCOORD4.xyz;\n    u_xlat16_3.xyz
            = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_3.xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat0.xyz = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    SV_Target0.xyz
            = u_xlat16_2.xyz * u_xlat0.xyz + u_xlat4.xyz;\n    SV_Target0.w = 1.0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp
            vec4 in_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nvoid main()\n{\n    u_xlat0 =
            in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    vs_TEXCOORD1.w
            = u_xlat0.x;\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx
            * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx *
            u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;\n    u_xlat3.xyz
            = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);\n    u_xlat0.x = in_TANGENT0.w
            * unity_WorldTransformParams.w;\n    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;\n   
            vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.x = u_xlat2.z;\n    vs_TEXCOORD1.z
            = u_xlat1.y;\n    vs_TEXCOORD2.x = u_xlat2.x;\n    vs_TEXCOORD3.x = u_xlat2.y;\n   
            vs_TEXCOORD2.z = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat1.x;\n    vs_TEXCOORD2.w
            = u_xlat0.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD2.y = u_xlat3.y;\n   
            vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _BumpMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nmediump float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.x
            = vs_TEXCOORD1.w;\n    u_xlat0.y = vs_TEXCOORD2.w;\n    u_xlat0.z = vs_TEXCOORD3.w;\n   
            u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat12
            = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 =
            inversesqrt(u_xlat16_13);\n    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n   
            u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy
            = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_13
            = dot(u_xlat16_2.xy, u_xlat16_2.xy);\n    u_xlat16_13 = min(u_xlat16_13,
            1.0);\n    u_xlat16_13 = (-u_xlat16_13) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_13);\n   
            u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y
            = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz,
            u_xlat16_2.xyz);\n    u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, u_xlat16_1.xyz);\n   
            u_xlat16_1.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_1.xy
            = max(u_xlat16_1.xy, vec2(0.0, 0.0));\n    u_xlat0.x = log2(u_xlat16_1.x);\n   
            u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.x = u_xlat0.x * u_xlat10_2.w;\n    u_xlat16_1.xzw = u_xlat10_2.xyz
            * _Color.xyz;\n    u_xlat16_1.xzw = u_xlat16_1.xzw * _LightColor0.xyz;\n   
            u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat0.xyz
            = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat0.xyz = u_xlat16_1.xzw * u_xlat16_1.yyy
            + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec4 in_TANGENT0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD6;\nout
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec3
            u_xlat3;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    vs_TEXCOORD1.w
            = u_xlat0.x;\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx
            * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx *
            u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;\n    u_xlat3.xyz
            = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);\n    u_xlat0.x = in_TANGENT0.w
            * unity_WorldTransformParams.w;\n    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;\n   
            vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.x = u_xlat2.z;\n    vs_TEXCOORD1.z
            = u_xlat1.y;\n    vs_TEXCOORD2.x = u_xlat2.x;\n    vs_TEXCOORD3.x = u_xlat2.y;\n   
            vs_TEXCOORD2.z = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat1.x;\n    vs_TEXCOORD2.w
            = u_xlat0.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD2.y = u_xlat3.y;\n   
            vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _BumpMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec2 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nmediump
            vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nmediump
            float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.x = vs_TEXCOORD1.w;\n   
            u_xlat0.y = vs_TEXCOORD2.w;\n    u_xlat0.z = vs_TEXCOORD3.w;\n    u_xlat0.xyz
            = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz
            = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13
            = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n   
            u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat16_0.xy
            = texture(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy = u_xlat16_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_13 = dot(u_xlat16_2.xy,
            u_xlat16_2.xy);\n    u_xlat16_13 = min(u_xlat16_13, 1.0);\n    u_xlat16_13
            = (-u_xlat16_13) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_13);\n    u_xlat16_3.x
            = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y = dot(vs_TEXCOORD2.xyz,
            u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);\n   
            u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));\n    u_xlat0.x =
            log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat16_2
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.x = u_xlat0.x * u_xlat16_2.w;\n   
            u_xlat16_1.xzw = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_1.xzw = u_xlat16_1.xzw
            * _LightColor0.xyz;\n    u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat0.xyz = u_xlat16_1.xzw
            * u_xlat16_1.yyy + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nattribute highp vec4
            in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3
            in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying mediump vec3 vs_TEXCOORD4;\nvarying highp
            vec4 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nvec4
            u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nfloat
            u_xlat22;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat1.xyz
            = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz
            + u_xlat1.xyz;\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21
            = inversesqrt(u_xlat21);\n    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n   
            vs_TEXCOORD1.x = u_xlat1.z;\n    u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat22 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat22 = inversesqrt(u_xlat22);\n   
            u_xlat2 = vec4(u_xlat22) * u_xlat2.xyzz;\n    u_xlat3.xyz = u_xlat1.xyz
            * u_xlat2.wxy;\n    u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);\n   
            u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;\n    vs_TEXCOORD1.y = u_xlat3.x;\n   
            vs_TEXCOORD1.w = u_xlat0.x;\n    vs_TEXCOORD1.z = u_xlat2.x;\n    vs_TEXCOORD2.x
            = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat1.y;\n    vs_TEXCOORD2.y = u_xlat3.y;\n   
            vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD2.w = u_xlat0.y;\n    vs_TEXCOORD2.z
            = u_xlat2.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD3.z = u_xlat2.w;\n   
            u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n   
            u_xlat4 = u_xlat2.yyyy * u_xlat3;\n    u_xlat3 = u_xlat3 * u_xlat3;\n   
            u_xlat3 = u_xlat1 * u_xlat1 + u_xlat3;\n    u_xlat1 = u_xlat1 * u_xlat2.xxxx
            + u_xlat4;\n    u_xlat1 = u_xlat0 * u_xlat2.wwzw + u_xlat1;\n    u_xlat0
            = u_xlat0 * u_xlat0 + u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07,
            9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat0);\n   
            u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;\n    u_xlat1 = u_xlat1
            * u_xlat3;\n    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat0 * u_xlat1;\n    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat1.xyz = u_xlat0.xyz
            * u_xlat1.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_5.x = u_xlat2.x *
            u_xlat2.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat2.ywzx * u_xlat2;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD4.xyz
            = u_xlat0.xyz * u_xlat1.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD6 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump
            vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform \tmediump
            vec4 _Color;\nuniform \tmediump float _Shininess;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _BumpMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying mediump vec3 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3
            u_xlat4;\nfloat u_xlat15;\nmediump float u_xlat16_16;\nmediump float
            u_xlat16_17;\nvoid main()\n{\n    u_xlat0.x = vs_TEXCOORD1.w;\n    u_xlat0.y
            = vs_TEXCOORD2.w;\n    u_xlat0.z = vs_TEXCOORD3.w;\n    u_xlat0.xyz =
            (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat15 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat16_1.xyz
            = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_16
            = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_16 = inversesqrt(u_xlat16_16);\n   
            u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;\n    u_xlat10_0.xy
            = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy = u_xlat10_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_16 = dot(u_xlat16_2.xy,
            u_xlat16_2.xy);\n    u_xlat16_16 = min(u_xlat16_16, 1.0);\n    u_xlat16_16
            = (-u_xlat16_16) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_16);\n    u_xlat16_3.x
            = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y = dot(vs_TEXCOORD2.xyz,
            u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);\n   
            u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat4.x
            = log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat4.x
            = u_xlat4.x * u_xlat16_1.x;\n    u_xlat4.x = exp2(u_xlat4.x);\n    u_xlat10_1
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat4.x = u_xlat10_1.w
            * u_xlat4.x;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * _Color.xyz;\n   
            u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat4.xyz
            = u_xlat4.xxx * u_xlat16_3.xyz;\n    u_xlat16_17 = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_17 = max(u_xlat16_17, 0.0);\n    u_xlat16_3.xyz = u_xlat16_2.xyz
            * _LightColor0.xyz;\n    u_xlat4.xyz = u_xlat16_3.xyz * vec3(u_xlat16_17)
            + u_xlat4.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr,
            u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_3.z
            = dot(unity_SHAb, u_xlat0);\n    u_xlat16_3.xyz = u_xlat16_3.xyz + vs_TEXCOORD4.xyz;\n   
            u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz
            = log2(u_xlat16_3.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657,
            0.416666657, 0.416666657);\n    u_xlat0.xyz = exp2(u_xlat0.xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995)
            + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat0.xyz
            = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    SV_Target0.xyz = u_xlat16_2.xyz
            * u_xlat0.xyz + u_xlat4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin highp vec4 in_TANGENT0;\nin
            highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4 vs_TEXCOORD0;\nout
            highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4
            vs_TEXCOORD3;\nout mediump vec3 vs_TEXCOORD4;\nout highp vec4 vs_TEXCOORD6;\nout
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump
            vec4 u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nfloat u_xlat21;\nfloat u_xlat22;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat1.xyz
            = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz
            + u_xlat1.xyz;\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21
            = inversesqrt(u_xlat21);\n    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n   
            vs_TEXCOORD1.x = u_xlat1.z;\n    u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat22 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat22 = inversesqrt(u_xlat22);\n   
            u_xlat2 = vec4(u_xlat22) * u_xlat2.xyzz;\n    u_xlat3.xyz = u_xlat1.xyz
            * u_xlat2.wxy;\n    u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);\n   
            u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;\n    vs_TEXCOORD1.y = u_xlat3.x;\n   
            vs_TEXCOORD1.w = u_xlat0.x;\n    vs_TEXCOORD1.z = u_xlat2.x;\n    vs_TEXCOORD2.x
            = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat1.y;\n    vs_TEXCOORD2.y = u_xlat3.y;\n   
            vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD2.w = u_xlat0.y;\n    vs_TEXCOORD2.z
            = u_xlat2.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD3.z = u_xlat2.w;\n   
            u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n   
            u_xlat4 = u_xlat2.yyyy * u_xlat3;\n    u_xlat3 = u_xlat3 * u_xlat3;\n   
            u_xlat3 = u_xlat1 * u_xlat1 + u_xlat3;\n    u_xlat1 = u_xlat1 * u_xlat2.xxxx
            + u_xlat4;\n    u_xlat1 = u_xlat0 * u_xlat2.wwzw + u_xlat1;\n    u_xlat0
            = u_xlat0 * u_xlat0 + u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07,
            9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat0);\n   
            u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;\n    u_xlat1 = u_xlat1
            * u_xlat3;\n    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat0 * u_xlat1;\n    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat1.xyz = u_xlat0.xyz
            * u_xlat1.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_5.x = u_xlat2.x *
            u_xlat2.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat2.ywzx * u_xlat2;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD4.xyz
            = u_xlat0.xyz * u_xlat1.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD6 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Shininess;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _BumpMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin mediump vec3
            vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec2 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nfloat u_xlat15;\nmediump
            float u_xlat16_16;\nmediump float u_xlat16_17;\nvoid main()\n{\n    u_xlat0.x
            = vs_TEXCOORD1.w;\n    u_xlat0.y = vs_TEXCOORD2.w;\n    u_xlat0.z = vs_TEXCOORD3.w;\n   
            u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat15
            = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_16 =
            inversesqrt(u_xlat16_16);\n    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;\n   
            u_xlat16_0.xy = texture(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy
            = u_xlat16_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_16
            = dot(u_xlat16_2.xy, u_xlat16_2.xy);\n    u_xlat16_16 = min(u_xlat16_16,
            1.0);\n    u_xlat16_16 = (-u_xlat16_16) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_16);\n   
            u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y
            = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz,
            u_xlat16_2.xyz);\n    u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, u_xlat16_1.xyz);\n   
            u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat4.x = log2(u_xlat16_1.x);\n   
            u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat4.x = u_xlat4.x * u_xlat16_1.x;\n   
            u_xlat4.x = exp2(u_xlat4.x);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat4.x = u_xlat16_1.w * u_xlat4.x;\n    u_xlat16_2.xyz = u_xlat16_1.xyz
            * _Color.xyz;\n    u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n   
            u_xlat4.xyz = u_xlat4.xxx * u_xlat16_3.xyz;\n    u_xlat16_17 = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_17 = max(u_xlat16_17, 0.0);\n   
            u_xlat16_3.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n    u_xlat4.xyz
            = u_xlat16_3.xyz * vec3(u_xlat16_17) + u_xlat4.xyz;\n    u_xlat0.w =
            1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y
            = dot(unity_SHAg, u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz + vs_TEXCOORD4.xyz;\n    u_xlat16_3.xyz
            = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_3.xyz);\n   
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat0.xyz = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    SV_Target0.xyz
            = u_xlat16_2.xyz * u_xlat0.xyz + u_xlat4.xyz;\n    SV_Target0.w = 1.0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 83
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 5
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nattribute highp vec4
            in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3
            in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp
            vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp vec3
            vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nfloat u_xlat13;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy
            + _BumpMap_ST.zw;\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat13 = inversesqrt(u_xlat13);\n   
            u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;\n    u_xlat2.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx
            * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat13 = inversesqrt(u_xlat13);\n    u_xlat2.xyz = vec3(u_xlat13) *
            u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;\n    u_xlat3.xyz
            = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);\n    u_xlat13 = in_TANGENT0.w
            * unity_WorldTransformParams.w;\n    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;\n   
            vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.x = u_xlat2.z;\n    vs_TEXCOORD1.z
            = u_xlat1.y;\n    vs_TEXCOORD2.x = u_xlat2.x;\n    vs_TEXCOORD3.x = u_xlat2.y;\n   
            vs_TEXCOORD2.z = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat1.x;\n    vs_TEXCOORD2.y
            = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD4.xyz =
            hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD5.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Shininess;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _BumpMap;\nuniform highp sampler2D _LightTexture0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3
            vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nvec3 u_xlat7;\nfloat u_xlat21;\nmediump float u_xlat16_22;\nvoid
            main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n   
            u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_22 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_22 = min(u_xlat16_22,
            1.0);\n    u_xlat16_22 = (-u_xlat16_22) + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_22);\n   
            u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.y
            = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.z = dot(vs_TEXCOORD3.xyz,
            u_xlat16_1.xyz);\n    u_xlat0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            u_xlat16_2.xyz;\n    u_xlat3.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat21 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;\n    u_xlat4.xyz = (-vs_TEXCOORD4.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat21 = dot(u_xlat4.xyz, u_xlat4.xyz);\n   
            u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat16_1.xyz = u_xlat4.xyz *
            vec3(u_xlat21) + u_xlat3.xyz;\n    u_xlat16_1.w = dot(u_xlat0.xyz, u_xlat3.xyz);\n   
            u_xlat16_2.x = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.x
            = inversesqrt(u_xlat16_2.x);\n    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xxx;\n   
            u_xlat16_1.x = dot(u_xlat0.xyz, u_xlat16_1.xyz);\n    u_xlat16_1.xw =
            max(u_xlat16_1.xw, vec2(0.0, 0.0));\n    u_xlat0.x = log2(u_xlat16_1.x);\n   
            u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.x = u_xlat0.x * u_xlat10_2.w;\n    u_xlat16_1.xyz = u_xlat10_2.xyz
            * _Color.xyz;\n    u_xlat7.xyz = vs_TEXCOORD4.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx
            + u_xlat7.xyz;\n    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD4.zzz + u_xlat7.xyz;\n    u_xlat7.xyz = u_xlat7.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat7.x = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat7.x = texture2D(_LightTexture0,
            u_xlat7.xx).x;\n    u_xlat16_5.xyz = u_xlat7.xxx * _LightColor0.xyz;\n   
            u_xlat16_6.xyz = u_xlat16_5.xyz * _SpecColor.xyz;\n    u_xlat16_1.xyz
            = u_xlat16_1.xyz * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_1.www + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin highp vec4 in_TANGENT0;\nin
            highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4 vs_TEXCOORD0;\nout
            highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3
            vs_TEXCOORD3;\nout highp vec3 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout
            highp vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec3
            u_xlat3;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat1.y =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.z
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat13 = inversesqrt(u_xlat13);\n   
            u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;\n    u_xlat2.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx
            * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat13 = inversesqrt(u_xlat13);\n    u_xlat2.xyz = vec3(u_xlat13) *
            u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;\n    u_xlat3.xyz
            = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);\n    u_xlat13 = in_TANGENT0.w
            * unity_WorldTransformParams.w;\n    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;\n   
            vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.x = u_xlat2.z;\n    vs_TEXCOORD1.z
            = u_xlat1.y;\n    vs_TEXCOORD2.x = u_xlat2.x;\n    vs_TEXCOORD3.x = u_xlat2.y;\n   
            vs_TEXCOORD2.z = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat1.x;\n    vs_TEXCOORD2.y
            = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD4.xyz =
            hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD5.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Shininess;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _BumpMap;\nUNITY_LOCATION(2) uniform highp sampler2D _LightTexture0;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3
            vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD3;\nin highp vec3 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec2 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nfloat u_xlat21;\nmediump
            float u_xlat16_22;\nvoid main()\n{\n    u_xlat16_0.xy = texture(_BumpMap,
            vs_TEXCOORD0.zw).yw;\n    u_xlat16_1.xy = u_xlat16_0.yx * vec2(2.0, 2.0)
            + vec2(-1.0, -1.0);\n    u_xlat16_22 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n   
            u_xlat16_22 = min(u_xlat16_22, 1.0);\n    u_xlat16_22 = (-u_xlat16_22)
            + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_22);\n    u_xlat16_2.x = dot(vs_TEXCOORD1.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);\n   
            u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);\n    u_xlat0.x
            = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    u_xlat3.xyz = (-vs_TEXCOORD4.xyz)
            + _WorldSpaceLightPos0.xyz;\n    u_xlat21 = dot(u_xlat3.xyz, u_xlat3.xyz);\n   
            u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat3.xyz = vec3(u_xlat21) *
            u_xlat3.xyz;\n    u_xlat4.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat21 = dot(u_xlat4.xyz, u_xlat4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat16_1.xyz = u_xlat4.xyz * vec3(u_xlat21) + u_xlat3.xyz;\n    u_xlat16_1.w
            = dot(u_xlat0.xyz, u_xlat3.xyz);\n    u_xlat16_2.x = dot(u_xlat16_1.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_2.x = inversesqrt(u_xlat16_2.x);\n   
            u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xxx;\n    u_xlat16_1.x =
            dot(u_xlat0.xyz, u_xlat16_1.xyz);\n    u_xlat16_1.xw = max(u_xlat16_1.xw,
            vec2(0.0, 0.0));\n    u_xlat0.x = log2(u_xlat16_1.x);\n    u_xlat16_1.x
            = _Shininess * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.x = u_xlat0.x * u_xlat16_2.w;\n    u_xlat16_1.xyz = u_xlat16_2.xyz
            * _Color.xyz;\n    u_xlat7.xyz = vs_TEXCOORD4.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx
            + u_xlat7.xyz;\n    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD4.zzz + u_xlat7.xyz;\n    u_xlat7.xyz = u_xlat7.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat7.x = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat7.x = texture(_LightTexture0,
            u_xlat7.xx).x;\n    u_xlat16_5.xyz = u_xlat7.xxx * _LightColor0.xyz;\n   
            u_xlat16_6.xyz = u_xlat16_5.xyz * _SpecColor.xyz;\n    u_xlat16_1.xyz
            = u_xlat16_1.xyz * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_1.www + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp
            vec4 in_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3
            vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying
            highp vec3 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD4.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat0.y =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.z
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n   
            u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    u_xlat1.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx
            * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.zxy
            * u_xlat1.yzx + (-u_xlat2.xyz);\n    u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;\n    vs_TEXCOORD1.y = u_xlat2.x;\n   
            vs_TEXCOORD1.x = u_xlat1.z;\n    vs_TEXCOORD1.z = u_xlat0.y;\n    vs_TEXCOORD2.x
            = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat1.y;\n    vs_TEXCOORD2.z = u_xlat0.z;\n   
            vs_TEXCOORD3.z = u_xlat0.x;\n    vs_TEXCOORD2.y = u_xlat2.y;\n    vs_TEXCOORD3.y
            = u_xlat2.z;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _BumpMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying
            highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp
            vec3 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nmediump
            float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD4.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz = u_xlat0.xyz *
            vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13 = dot(u_xlat16_1.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n    u_xlat16_1.xyz
            = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat10_0.xy = texture2D(_BumpMap,
            vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy = u_xlat10_0.yx * vec2(2.0, 2.0)
            + vec2(-1.0, -1.0);\n    u_xlat16_13 = dot(u_xlat16_2.xy, u_xlat16_2.xy);\n   
            u_xlat16_13 = min(u_xlat16_13, 1.0);\n    u_xlat16_13 = (-u_xlat16_13)
            + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_13);\n    u_xlat16_3.x = dot(vs_TEXCOORD1.xyz,
            u_xlat16_2.xyz);\n    u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);\n   
            u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);\n    u_xlat0.x
            = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));\n    u_xlat0.x =
            log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat10_2
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.x = u_xlat0.x *
            u_xlat10_2.w;\n    u_xlat16_1.xzw = u_xlat10_2.xyz * _Color.xyz;\n   
            u_xlat16_1.xzw = u_xlat16_1.xzw * _LightColor0.xyz;\n    u_xlat16_3.xyz
            = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat0.xyz = u_xlat0.xxx *
            u_xlat16_3.xyz;\n    u_xlat0.xyz = u_xlat16_1.xzw * u_xlat16_1.yyy +
            u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec4 in_TANGENT0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec4 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nout highp vec3 vs_TEXCOORD4;\nout
            highp vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nfloat
            u_xlat9;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD4.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat0.y =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.z
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n   
            u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    u_xlat1.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx
            * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.zxy
            * u_xlat1.yzx + (-u_xlat2.xyz);\n    u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;\n    vs_TEXCOORD1.y = u_xlat2.x;\n   
            vs_TEXCOORD1.x = u_xlat1.z;\n    vs_TEXCOORD1.z = u_xlat0.y;\n    vs_TEXCOORD2.x
            = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat1.y;\n    vs_TEXCOORD2.z = u_xlat0.z;\n   
            vs_TEXCOORD3.z = u_xlat0.x;\n    vs_TEXCOORD2.y = u_xlat2.y;\n    vs_TEXCOORD3.y
            = u_xlat2.z;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _BumpMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nin highp vec3
            vs_TEXCOORD3;\nin highp vec3 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec2 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nmediump float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.xyz
            = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz
            = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13
            = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n   
            u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat16_0.xy
            = texture(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy = u_xlat16_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_13 = dot(u_xlat16_2.xy,
            u_xlat16_2.xy);\n    u_xlat16_13 = min(u_xlat16_13, 1.0);\n    u_xlat16_13
            = (-u_xlat16_13) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_13);\n    u_xlat16_3.x
            = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y = dot(vs_TEXCOORD2.xyz,
            u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);\n   
            u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));\n    u_xlat0.x =
            log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat16_2
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.x = u_xlat0.x * u_xlat16_2.w;\n   
            u_xlat16_1.xzw = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_1.xzw = u_xlat16_1.xzw
            * _LightColor0.xyz;\n    u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat0.xyz = u_xlat16_1.xzw
            * u_xlat16_1.yyy + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - POINT_COOKIE
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - POINT
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - SPOT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          hasDiscard: 0
        KeywordsMinimalCardinality: 5
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 9
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 5
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: RenderType
        Value: Opaque
    - Index: 1
      Passes:
      - Shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp
            vec4 in_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec3
            u_xlat3;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    vs_TEXCOORD1.w
            = u_xlat0.x;\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx
            * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx *
            u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;\n    u_xlat3.xyz
            = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);\n    u_xlat0.x = in_TANGENT0.w
            * unity_WorldTransformParams.w;\n    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;\n   
            vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.x = u_xlat2.z;\n    vs_TEXCOORD1.z
            = u_xlat1.y;\n    vs_TEXCOORD2.x = u_xlat2.x;\n    vs_TEXCOORD3.x = u_xlat2.y;\n   
            vs_TEXCOORD2.z = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat1.x;\n    vs_TEXCOORD2.w
            = u_xlat0.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD2.y = u_xlat3.y;\n   
            vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _BumpMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nmediump float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.x
            = vs_TEXCOORD1.w;\n    u_xlat0.y = vs_TEXCOORD2.w;\n    u_xlat0.z = vs_TEXCOORD3.w;\n   
            u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat12
            = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 =
            inversesqrt(u_xlat16_13);\n    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n   
            u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy
            = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_13
            = dot(u_xlat16_2.xy, u_xlat16_2.xy);\n    u_xlat16_13 = min(u_xlat16_13,
            1.0);\n    u_xlat16_13 = (-u_xlat16_13) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_13);\n   
            u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y
            = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz,
            u_xlat16_2.xyz);\n    u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, u_xlat16_1.xyz);\n   
            u_xlat16_1.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_1.xy
            = max(u_xlat16_1.xy, vec2(0.0, 0.0));\n    u_xlat0.x = log2(u_xlat16_1.x);\n   
            u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.x = u_xlat0.x * u_xlat10_2.w;\n    u_xlat16_1.xzw = u_xlat10_2.xyz
            * _Color.xyz;\n    u_xlat16_1.xzw = u_xlat16_1.xzw * _LightColor0.xyz;\n   
            u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat0.xyz
            = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat0.xyz = u_xlat16_1.xzw * u_xlat16_1.yyy
            + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec4 in_TANGENT0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD6;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    vs_TEXCOORD1.w
            = u_xlat0.x;\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx
            * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx *
            u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;\n    u_xlat3.xyz
            = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);\n    u_xlat0.x = in_TANGENT0.w
            * unity_WorldTransformParams.w;\n    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;\n   
            vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.x = u_xlat2.z;\n    vs_TEXCOORD1.z
            = u_xlat1.y;\n    vs_TEXCOORD2.x = u_xlat2.x;\n    vs_TEXCOORD3.x = u_xlat2.y;\n   
            vs_TEXCOORD2.z = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat1.x;\n    vs_TEXCOORD2.w
            = u_xlat0.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD2.y = u_xlat3.y;\n   
            vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _BumpMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec2 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nmediump
            vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nmediump
            float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.x = vs_TEXCOORD1.w;\n   
            u_xlat0.y = vs_TEXCOORD2.w;\n    u_xlat0.z = vs_TEXCOORD3.w;\n    u_xlat0.xyz
            = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz
            = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13
            = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n   
            u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat16_0.xy
            = texture(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy = u_xlat16_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_13 = dot(u_xlat16_2.xy,
            u_xlat16_2.xy);\n    u_xlat16_13 = min(u_xlat16_13, 1.0);\n    u_xlat16_13
            = (-u_xlat16_13) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_13);\n    u_xlat16_3.x
            = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y = dot(vs_TEXCOORD2.xyz,
            u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);\n   
            u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));\n    u_xlat0.x =
            log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat16_2
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.x = u_xlat0.x * u_xlat16_2.w;\n   
            u_xlat16_1.xzw = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_1.xzw = u_xlat16_1.xzw
            * _LightColor0.xyz;\n    u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat0.xyz = u_xlat16_1.xzw
            * u_xlat16_1.yyy + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nattribute highp vec4
            in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3
            in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying mediump vec3 vs_TEXCOORD4;\nvarying highp
            vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nvec4
            u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat
            u_xlat18;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    vs_TEXCOORD1.w
            = u_xlat0.x;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.xyz = vec3(u_xlat18) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n   
            u_xlat2 = vec4(u_xlat18) * u_xlat2.xyzz;\n    u_xlat3.xyz = u_xlat1.xyz
            * u_xlat2.zxy;\n    u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);\n   
            u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;\n    vs_TEXCOORD1.y = u_xlat3.x;\n   
            vs_TEXCOORD1.x = u_xlat1.z;\n    vs_TEXCOORD1.z = u_xlat2.x;\n    vs_TEXCOORD2.x
            = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat1.y;\n    vs_TEXCOORD2.w = u_xlat0.y;\n   
            vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD2.y = u_xlat3.y;\n    vs_TEXCOORD3.y
            = u_xlat3.z;\n    vs_TEXCOORD2.z = u_xlat2.y;\n    vs_TEXCOORD3.z = u_xlat2.z;\n   
            u_xlat16_4.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_4.x = u_xlat2.x *
            u_xlat2.x + (-u_xlat16_4.x);\n    u_xlat16_0 = u_xlat2.yzwx * u_xlat2.xywz;\n   
            u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_5.y = dot(unity_SHBg,
            u_xlat16_0);\n    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);\n    u_xlat16_4.xyz
            = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;\n    u_xlat2.w = 1.0;\n   
            u_xlat16_5.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_5.y = dot(unity_SHAg,
            u_xlat2);\n    u_xlat16_5.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz + u_xlat16_5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_4.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD4.xyz
            = u_xlat1.xyz;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _BumpMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying mediump
            vec3 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nmediump
            float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.x = vs_TEXCOORD1.w;\n   
            u_xlat0.y = vs_TEXCOORD2.w;\n    u_xlat0.z = vs_TEXCOORD3.w;\n    u_xlat0.xyz
            = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz
            = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13
            = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n   
            u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat10_0.xy
            = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy = u_xlat10_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_13 = dot(u_xlat16_2.xy,
            u_xlat16_2.xy);\n    u_xlat16_13 = min(u_xlat16_13, 1.0);\n    u_xlat16_13
            = (-u_xlat16_13) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_13);\n    u_xlat16_3.x
            = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y = dot(vs_TEXCOORD2.xyz,
            u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);\n   
            u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));\n    u_xlat0.x =
            log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat10_2
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.x = u_xlat0.x *
            u_xlat10_2.w;\n    u_xlat16_1.xzw = u_xlat10_2.xyz * _Color.xyz;\n   
            u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat0.xyz
            = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_3.xyz = u_xlat16_1.xzw
            * _LightColor0.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_1.yyy
            + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat16_1.xzw * vs_TEXCOORD4.xyz
            + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin highp vec4 in_TANGENT0;\nin
            highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4 vs_TEXCOORD0;\nout
            highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4
            vs_TEXCOORD3;\nout mediump vec3 vs_TEXCOORD4;\nout highp vec4 vs_TEXCOORD6;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat u_xlat18;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    vs_TEXCOORD1.w
            = u_xlat0.x;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.xyz = vec3(u_xlat18) *
            u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n   
            u_xlat2 = vec4(u_xlat18) * u_xlat2.xyzz;\n    u_xlat3.xyz = u_xlat1.xyz
            * u_xlat2.zxy;\n    u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);\n   
            u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;\n    vs_TEXCOORD1.y = u_xlat3.x;\n   
            vs_TEXCOORD1.x = u_xlat1.z;\n    vs_TEXCOORD1.z = u_xlat2.x;\n    vs_TEXCOORD2.x
            = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat1.y;\n    vs_TEXCOORD2.w = u_xlat0.y;\n   
            vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD2.y = u_xlat3.y;\n    vs_TEXCOORD3.y
            = u_xlat3.z;\n    vs_TEXCOORD2.z = u_xlat2.y;\n    vs_TEXCOORD3.z = u_xlat2.z;\n   
            u_xlat16_4.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_4.x = u_xlat2.x *
            u_xlat2.x + (-u_xlat16_4.x);\n    u_xlat16_0 = u_xlat2.yzwx * u_xlat2.xywz;\n   
            u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_5.y = dot(unity_SHBg,
            u_xlat16_0);\n    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);\n    u_xlat16_4.xyz
            = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;\n    u_xlat2.w = 1.0;\n   
            u_xlat16_5.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_5.y = dot(unity_SHAg,
            u_xlat2);\n    u_xlat16_5.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz + u_xlat16_5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_4.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD4.xyz
            = u_xlat1.xyz;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _BumpMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin mediump vec3 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec2 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nmediump float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.x
            = vs_TEXCOORD1.w;\n    u_xlat0.y = vs_TEXCOORD2.w;\n    u_xlat0.z = vs_TEXCOORD3.w;\n   
            u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat12
            = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 =
            inversesqrt(u_xlat16_13);\n    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n   
            u_xlat16_0.xy = texture(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy
            = u_xlat16_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_13
            = dot(u_xlat16_2.xy, u_xlat16_2.xy);\n    u_xlat16_13 = min(u_xlat16_13,
            1.0);\n    u_xlat16_13 = (-u_xlat16_13) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_13);\n   
            u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y
            = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz,
            u_xlat16_2.xyz);\n    u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, u_xlat16_1.xyz);\n   
            u_xlat16_1.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_1.xy
            = max(u_xlat16_1.xy, vec2(0.0, 0.0));\n    u_xlat0.x = log2(u_xlat16_1.x);\n   
            u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.x = u_xlat0.x * u_xlat16_2.w;\n    u_xlat16_1.xzw = u_xlat16_2.xyz
            * _Color.xyz;\n    u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_3.xyz = u_xlat16_1.xzw
            * _LightColor0.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_1.yyy
            + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat16_1.xzw * vs_TEXCOORD4.xyz
            + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp
            vec4 in_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec3
            u_xlat3;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    vs_TEXCOORD1.w
            = u_xlat0.x;\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx
            * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx *
            u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;\n    u_xlat3.xyz
            = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);\n    u_xlat0.x = in_TANGENT0.w
            * unity_WorldTransformParams.w;\n    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;\n   
            vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.x = u_xlat2.z;\n    vs_TEXCOORD1.z
            = u_xlat1.y;\n    vs_TEXCOORD2.x = u_xlat2.x;\n    vs_TEXCOORD3.x = u_xlat2.y;\n   
            vs_TEXCOORD2.z = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat1.x;\n    vs_TEXCOORD2.w
            = u_xlat0.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD2.y = u_xlat3.y;\n   
            vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _BumpMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nmediump float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.x
            = vs_TEXCOORD1.w;\n    u_xlat0.y = vs_TEXCOORD2.w;\n    u_xlat0.z = vs_TEXCOORD3.w;\n   
            u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat12
            = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 =
            inversesqrt(u_xlat16_13);\n    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n   
            u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy
            = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_13
            = dot(u_xlat16_2.xy, u_xlat16_2.xy);\n    u_xlat16_13 = min(u_xlat16_13,
            1.0);\n    u_xlat16_13 = (-u_xlat16_13) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_13);\n   
            u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y
            = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz,
            u_xlat16_2.xyz);\n    u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, u_xlat16_1.xyz);\n   
            u_xlat16_1.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_1.xy
            = max(u_xlat16_1.xy, vec2(0.0, 0.0));\n    u_xlat0.x = log2(u_xlat16_1.x);\n   
            u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.x = u_xlat0.x * u_xlat10_2.w;\n    u_xlat16_1.xzw = u_xlat10_2.xyz
            * _Color.xyz;\n    u_xlat16_1.xzw = u_xlat16_1.xzw * _LightColor0.xyz;\n   
            u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat0.xyz
            = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat0.xyz = u_xlat16_1.xzw * u_xlat16_1.yyy
            + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec4 in_TANGENT0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD6;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    vs_TEXCOORD1.w
            = u_xlat0.x;\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx
            * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx *
            u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;\n    u_xlat3.xyz
            = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);\n    u_xlat0.x = in_TANGENT0.w
            * unity_WorldTransformParams.w;\n    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;\n   
            vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.x = u_xlat2.z;\n    vs_TEXCOORD1.z
            = u_xlat1.y;\n    vs_TEXCOORD2.x = u_xlat2.x;\n    vs_TEXCOORD3.x = u_xlat2.y;\n   
            vs_TEXCOORD2.z = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat1.x;\n    vs_TEXCOORD2.w
            = u_xlat0.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD2.y = u_xlat3.y;\n   
            vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _BumpMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec2 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nmediump
            vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nmediump
            float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.x = vs_TEXCOORD1.w;\n   
            u_xlat0.y = vs_TEXCOORD2.w;\n    u_xlat0.z = vs_TEXCOORD3.w;\n    u_xlat0.xyz
            = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz
            = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13
            = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n   
            u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat16_0.xy
            = texture(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy = u_xlat16_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_13 = dot(u_xlat16_2.xy,
            u_xlat16_2.xy);\n    u_xlat16_13 = min(u_xlat16_13, 1.0);\n    u_xlat16_13
            = (-u_xlat16_13) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_13);\n    u_xlat16_3.x
            = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y = dot(vs_TEXCOORD2.xyz,
            u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);\n   
            u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));\n    u_xlat0.x =
            log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat16_2
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.x = u_xlat0.x * u_xlat16_2.w;\n   
            u_xlat16_1.xzw = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_1.xzw = u_xlat16_1.xzw
            * _LightColor0.xyz;\n    u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat0.xyz = u_xlat16_1.xzw
            * u_xlat16_1.yyy + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp
            vec4 in_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            mediump vec3 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nvec4
            u_xlat4;\nvec4 u_xlat5;\nmediump vec3 u_xlat16_5;\nvec4 u_xlat6;\nmediump
            vec3 u_xlat16_6;\nfloat u_xlat21;\nfloat u_xlat22;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat1.xyz
            = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz
            + u_xlat1.xyz;\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21
            = inversesqrt(u_xlat21);\n    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n   
            vs_TEXCOORD1.x = u_xlat1.z;\n    u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat22 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat22 = inversesqrt(u_xlat22);\n   
            u_xlat2 = vec4(u_xlat22) * u_xlat2.xyzz;\n    u_xlat3.xyz = u_xlat1.xyz
            * u_xlat2.wxy;\n    u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);\n   
            u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;\n    vs_TEXCOORD1.y = u_xlat3.x;\n   
            vs_TEXCOORD1.w = u_xlat0.x;\n    u_xlat4.xyz = u_xlat2.xyw;\n    vs_TEXCOORD1.z
            = u_xlat4.x;\n    vs_TEXCOORD2.x = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat1.y;\n   
            vs_TEXCOORD2.y = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD2.w
            = u_xlat0.y;\n    vs_TEXCOORD2.z = u_xlat4.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n   
            vs_TEXCOORD3.z = u_xlat4.z;\n    u_xlat16_5.x = u_xlat4.y * u_xlat4.y;\n   
            u_xlat16_5.x = u_xlat4.x * u_xlat4.x + (-u_xlat16_5.x);\n    u_xlat16_1
            = u_xlat2.ywzx * u_xlat2;\n    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n   
            u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb,
            u_xlat16_1);\n    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n   
            u_xlat4.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat4);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat4);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat4);\n   
            u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz
            = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat3.xyz = log2(u_xlat16_5.xyz);\n   
            u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat3.xyz = exp2(u_xlat3.xyz);\n    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat5 = u_xlat4.yyyy * u_xlat1;\n    u_xlat1
            = u_xlat1 * u_xlat1;\n    u_xlat6 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n   
            u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n    u_xlat4 = u_xlat6
            * u_xlat4.xxxx + u_xlat5;\n    u_xlat2 = u_xlat0 * u_xlat2.wwzw + u_xlat4;\n   
            u_xlat1 = u_xlat6 * u_xlat6 + u_xlat1;\n    u_xlat0 = u_xlat0 * u_xlat0
            + u_xlat1;\n    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat1 = inversesqrt(u_xlat0);\n   
            u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;\n    u_xlat1 = u_xlat1
            * u_xlat2;\n    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat0 * u_xlat1;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            vs_TEXCOORD4.xyz = u_xlat3.xyz + u_xlat0.xyz;\n    vs_TEXCOORD6 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _BumpMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying mediump
            vec3 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nmediump
            float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.x = vs_TEXCOORD1.w;\n   
            u_xlat0.y = vs_TEXCOORD2.w;\n    u_xlat0.z = vs_TEXCOORD3.w;\n    u_xlat0.xyz
            = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz
            = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13
            = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n   
            u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat10_0.xy
            = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy = u_xlat10_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_13 = dot(u_xlat16_2.xy,
            u_xlat16_2.xy);\n    u_xlat16_13 = min(u_xlat16_13, 1.0);\n    u_xlat16_13
            = (-u_xlat16_13) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_13);\n    u_xlat16_3.x
            = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y = dot(vs_TEXCOORD2.xyz,
            u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);\n   
            u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));\n    u_xlat0.x =
            log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat10_2
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.x = u_xlat0.x *
            u_xlat10_2.w;\n    u_xlat16_1.xzw = u_xlat10_2.xyz * _Color.xyz;\n   
            u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat0.xyz
            = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_3.xyz = u_xlat16_1.xzw
            * _LightColor0.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_1.yyy
            + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat16_1.xzw * vs_TEXCOORD4.xyz
            + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec4 in_TANGENT0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout mediump vec3 vs_TEXCOORD4;\nout
            highp vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4
            u_xlat16_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nvec4 u_xlat4;\nvec4 u_xlat5;\nmediump
            vec3 u_xlat16_5;\nvec4 u_xlat6;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nfloat
            u_xlat22;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat1.xyz
            = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz
            + u_xlat1.xyz;\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21
            = inversesqrt(u_xlat21);\n    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n   
            vs_TEXCOORD1.x = u_xlat1.z;\n    u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat22 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat22 = inversesqrt(u_xlat22);\n   
            u_xlat2 = vec4(u_xlat22) * u_xlat2.xyzz;\n    u_xlat3.xyz = u_xlat1.xyz
            * u_xlat2.wxy;\n    u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);\n   
            u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;\n    vs_TEXCOORD1.y = u_xlat3.x;\n   
            vs_TEXCOORD1.w = u_xlat0.x;\n    u_xlat4.xyz = u_xlat2.xyw;\n    vs_TEXCOORD1.z
            = u_xlat4.x;\n    vs_TEXCOORD2.x = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat1.y;\n   
            vs_TEXCOORD2.y = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD2.w
            = u_xlat0.y;\n    vs_TEXCOORD2.z = u_xlat4.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n   
            vs_TEXCOORD3.z = u_xlat4.z;\n    u_xlat16_5.x = u_xlat4.y * u_xlat4.y;\n   
            u_xlat16_5.x = u_xlat4.x * u_xlat4.x + (-u_xlat16_5.x);\n    u_xlat16_1
            = u_xlat2.ywzx * u_xlat2;\n    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n   
            u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb,
            u_xlat16_1);\n    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n   
            u_xlat4.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat4);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat4);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat4);\n   
            u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz
            = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat3.xyz = log2(u_xlat16_5.xyz);\n   
            u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat3.xyz = exp2(u_xlat3.xyz);\n    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat5 = u_xlat4.yyyy * u_xlat1;\n    u_xlat1
            = u_xlat1 * u_xlat1;\n    u_xlat6 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n   
            u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n    u_xlat4 = u_xlat6
            * u_xlat4.xxxx + u_xlat5;\n    u_xlat2 = u_xlat0 * u_xlat2.wwzw + u_xlat4;\n   
            u_xlat1 = u_xlat6 * u_xlat6 + u_xlat1;\n    u_xlat0 = u_xlat0 * u_xlat0
            + u_xlat1;\n    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat1 = inversesqrt(u_xlat0);\n   
            u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;\n    u_xlat1 = u_xlat1
            * u_xlat2;\n    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat0 * u_xlat1;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            vs_TEXCOORD4.xyz = u_xlat3.xyz + u_xlat0.xyz;\n    vs_TEXCOORD6 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _BumpMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin mediump vec3 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec2 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nmediump float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.x
            = vs_TEXCOORD1.w;\n    u_xlat0.y = vs_TEXCOORD2.w;\n    u_xlat0.z = vs_TEXCOORD3.w;\n   
            u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat12
            = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 =
            inversesqrt(u_xlat16_13);\n    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n   
            u_xlat16_0.xy = texture(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy
            = u_xlat16_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_13
            = dot(u_xlat16_2.xy, u_xlat16_2.xy);\n    u_xlat16_13 = min(u_xlat16_13,
            1.0);\n    u_xlat16_13 = (-u_xlat16_13) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_13);\n   
            u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y
            = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz,
            u_xlat16_2.xyz);\n    u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, u_xlat16_1.xyz);\n   
            u_xlat16_1.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_1.xy
            = max(u_xlat16_1.xy, vec2(0.0, 0.0));\n    u_xlat0.x = log2(u_xlat16_1.x);\n   
            u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.x = u_xlat0.x * u_xlat16_2.w;\n    u_xlat16_1.xzw = u_xlat16_2.xyz
            * _Color.xyz;\n    u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_3.xyz = u_xlat16_1.xzw
            * _LightColor0.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_1.yyy
            + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat16_1.xzw * vs_TEXCOORD4.xyz
            + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        KeywordsMinimalCardinality: 50
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 5
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 1
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nattribute highp vec4
            in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3
            in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp
            vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp vec3
            vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nfloat u_xlat13;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy
            + _BumpMap_ST.zw;\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat13 = inversesqrt(u_xlat13);\n   
            u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;\n    u_xlat2.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx
            * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat13 = inversesqrt(u_xlat13);\n    u_xlat2.xyz = vec3(u_xlat13) *
            u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;\n    u_xlat3.xyz
            = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);\n    u_xlat13 = in_TANGENT0.w
            * unity_WorldTransformParams.w;\n    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;\n   
            vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.x = u_xlat2.z;\n    vs_TEXCOORD1.z
            = u_xlat1.y;\n    vs_TEXCOORD2.x = u_xlat2.x;\n    vs_TEXCOORD3.x = u_xlat2.y;\n   
            vs_TEXCOORD2.z = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat1.x;\n    vs_TEXCOORD2.y
            = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD4.xyz =
            hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD5.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Shininess;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _BumpMap;\nuniform highp sampler2D _LightTexture0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp
            vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3
            vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nvec3 u_xlat7;\nfloat u_xlat21;\nmediump float u_xlat16_22;\nvoid
            main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n   
            u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_22 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_22 = min(u_xlat16_22,
            1.0);\n    u_xlat16_22 = (-u_xlat16_22) + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_22);\n   
            u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.y
            = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.z = dot(vs_TEXCOORD3.xyz,
            u_xlat16_1.xyz);\n    u_xlat0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            u_xlat16_2.xyz;\n    u_xlat3.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat21 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;\n    u_xlat4.xyz = (-vs_TEXCOORD4.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat21 = dot(u_xlat4.xyz, u_xlat4.xyz);\n   
            u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat16_1.xyz = u_xlat4.xyz *
            vec3(u_xlat21) + u_xlat3.xyz;\n    u_xlat16_1.w = dot(u_xlat0.xyz, u_xlat3.xyz);\n   
            u_xlat16_2.x = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.x
            = inversesqrt(u_xlat16_2.x);\n    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xxx;\n   
            u_xlat16_1.x = dot(u_xlat0.xyz, u_xlat16_1.xyz);\n    u_xlat16_1.xw =
            max(u_xlat16_1.xw, vec2(0.0, 0.0));\n    u_xlat0.x = log2(u_xlat16_1.x);\n   
            u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.x = u_xlat0.x * u_xlat10_2.w;\n    u_xlat16_1.xyz = u_xlat10_2.xyz
            * _Color.xyz;\n    u_xlat7.xyz = vs_TEXCOORD4.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx
            + u_xlat7.xyz;\n    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD4.zzz + u_xlat7.xyz;\n    u_xlat7.xyz = u_xlat7.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat7.x = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat7.x = texture2D(_LightTexture0,
            u_xlat7.xx).x;\n    u_xlat16_5.xyz = u_xlat7.xxx * _LightColor0.xyz;\n   
            u_xlat16_6.xyz = u_xlat16_5.xyz * _SpecColor.xyz;\n    u_xlat16_1.xyz
            = u_xlat16_1.xyz * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_1.www + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin highp vec4 in_TANGENT0;\nin
            highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4 vs_TEXCOORD0;\nout
            highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3
            vs_TEXCOORD3;\nout highp vec3 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout
            highp vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec3
            u_xlat3;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat1.y =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.z
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat13 = inversesqrt(u_xlat13);\n   
            u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;\n    u_xlat2.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx
            * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat13 = inversesqrt(u_xlat13);\n    u_xlat2.xyz = vec3(u_xlat13) *
            u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;\n    u_xlat3.xyz
            = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);\n    u_xlat13 = in_TANGENT0.w
            * unity_WorldTransformParams.w;\n    u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;\n   
            vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.x = u_xlat2.z;\n    vs_TEXCOORD1.z
            = u_xlat1.y;\n    vs_TEXCOORD2.x = u_xlat2.x;\n    vs_TEXCOORD3.x = u_xlat2.y;\n   
            vs_TEXCOORD2.z = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat1.x;\n    vs_TEXCOORD2.y
            = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD4.xyz =
            hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD5.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Shininess;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _BumpMap;\nUNITY_LOCATION(2) uniform highp sampler2D _LightTexture0;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3
            vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD3;\nin highp vec3 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec2 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nfloat u_xlat21;\nmediump
            float u_xlat16_22;\nvoid main()\n{\n    u_xlat16_0.xy = texture(_BumpMap,
            vs_TEXCOORD0.zw).yw;\n    u_xlat16_1.xy = u_xlat16_0.yx * vec2(2.0, 2.0)
            + vec2(-1.0, -1.0);\n    u_xlat16_22 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n   
            u_xlat16_22 = min(u_xlat16_22, 1.0);\n    u_xlat16_22 = (-u_xlat16_22)
            + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_22);\n    u_xlat16_2.x = dot(vs_TEXCOORD1.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);\n   
            u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);\n    u_xlat0.x
            = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    u_xlat3.xyz = (-vs_TEXCOORD4.xyz)
            + _WorldSpaceLightPos0.xyz;\n    u_xlat21 = dot(u_xlat3.xyz, u_xlat3.xyz);\n   
            u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat3.xyz = vec3(u_xlat21) *
            u_xlat3.xyz;\n    u_xlat4.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat21 = dot(u_xlat4.xyz, u_xlat4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat16_1.xyz = u_xlat4.xyz * vec3(u_xlat21) + u_xlat3.xyz;\n    u_xlat16_1.w
            = dot(u_xlat0.xyz, u_xlat3.xyz);\n    u_xlat16_2.x = dot(u_xlat16_1.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_2.x = inversesqrt(u_xlat16_2.x);\n   
            u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xxx;\n    u_xlat16_1.x =
            dot(u_xlat0.xyz, u_xlat16_1.xyz);\n    u_xlat16_1.xw = max(u_xlat16_1.xw,
            vec2(0.0, 0.0));\n    u_xlat0.x = log2(u_xlat16_1.x);\n    u_xlat16_1.x
            = _Shininess * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.x = u_xlat0.x * u_xlat16_2.w;\n    u_xlat16_1.xyz = u_xlat16_2.xyz
            * _Color.xyz;\n    u_xlat7.xyz = vs_TEXCOORD4.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx
            + u_xlat7.xyz;\n    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD4.zzz + u_xlat7.xyz;\n    u_xlat7.xyz = u_xlat7.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat7.x = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat7.x = texture(_LightTexture0,
            u_xlat7.xx).x;\n    u_xlat16_5.xyz = u_xlat7.xxx * _LightColor0.xyz;\n   
            u_xlat16_6.xyz = u_xlat16_5.xyz * _SpecColor.xyz;\n    u_xlat16_1.xyz
            = u_xlat16_1.xyz * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_1.www + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp
            vec4 in_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3
            vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying
            highp vec3 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD4.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat0.y =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.z
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n   
            u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    u_xlat1.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx
            * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.zxy
            * u_xlat1.yzx + (-u_xlat2.xyz);\n    u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;\n    vs_TEXCOORD1.y = u_xlat2.x;\n   
            vs_TEXCOORD1.x = u_xlat1.z;\n    vs_TEXCOORD1.z = u_xlat0.y;\n    vs_TEXCOORD2.x
            = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat1.y;\n    vs_TEXCOORD2.z = u_xlat0.z;\n   
            vs_TEXCOORD3.z = u_xlat0.x;\n    vs_TEXCOORD2.y = u_xlat2.y;\n    vs_TEXCOORD3.y
            = u_xlat2.z;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _BumpMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying
            highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp
            vec3 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nmediump
            float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD4.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz = u_xlat0.xyz *
            vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13 = dot(u_xlat16_1.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n    u_xlat16_1.xyz
            = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat10_0.xy = texture2D(_BumpMap,
            vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy = u_xlat10_0.yx * vec2(2.0, 2.0)
            + vec2(-1.0, -1.0);\n    u_xlat16_13 = dot(u_xlat16_2.xy, u_xlat16_2.xy);\n   
            u_xlat16_13 = min(u_xlat16_13, 1.0);\n    u_xlat16_13 = (-u_xlat16_13)
            + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_13);\n    u_xlat16_3.x = dot(vs_TEXCOORD1.xyz,
            u_xlat16_2.xyz);\n    u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);\n   
            u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);\n    u_xlat0.x
            = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));\n    u_xlat0.x =
            log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat10_2
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.x = u_xlat0.x *
            u_xlat10_2.w;\n    u_xlat16_1.xzw = u_xlat10_2.xyz * _Color.xyz;\n   
            u_xlat16_1.xzw = u_xlat16_1.xzw * _LightColor0.xyz;\n    u_xlat16_3.xyz
            = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat0.xyz = u_xlat0.xxx *
            u_xlat16_3.xyz;\n    u_xlat0.xyz = u_xlat16_1.xzw * u_xlat16_1.yyy +
            u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin
            highp vec4 in_TANGENT0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec4 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nout highp vec3 vs_TEXCOORD4;\nout
            highp vec4 vs_TEXCOORD6;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nfloat
            u_xlat9;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD4.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw
            = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat0.y =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.z
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n   
            u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    u_xlat1.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx
            * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx
            * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.zxy
            * u_xlat1.yzx + (-u_xlat2.xyz);\n    u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;\n    vs_TEXCOORD1.y = u_xlat2.x;\n   
            vs_TEXCOORD1.x = u_xlat1.z;\n    vs_TEXCOORD1.z = u_xlat0.y;\n    vs_TEXCOORD2.x
            = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat1.y;\n    vs_TEXCOORD2.z = u_xlat0.z;\n   
            vs_TEXCOORD3.z = u_xlat0.x;\n    vs_TEXCOORD2.y = u_xlat2.y;\n    vs_TEXCOORD3.y
            = u_xlat2.z;\n    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _BumpMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nin highp vec3
            vs_TEXCOORD3;\nin highp vec3 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec2 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nmediump float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.xyz
            = (-vs_TEXCOORD4.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz
            = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13
            = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n   
            u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat16_0.xy
            = texture(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_2.xy = u_xlat16_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_13 = dot(u_xlat16_2.xy,
            u_xlat16_2.xy);\n    u_xlat16_13 = min(u_xlat16_13, 1.0);\n    u_xlat16_13
            = (-u_xlat16_13) + 1.0;\n    u_xlat16_2.z = sqrt(u_xlat16_13);\n    u_xlat16_3.x
            = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_3.y = dot(vs_TEXCOORD2.xyz,
            u_xlat16_2.xyz);\n    u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);\n   
            u_xlat0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));\n    u_xlat0.x =
            log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat16_2
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.x = u_xlat0.x * u_xlat16_2.w;\n   
            u_xlat16_1.xzw = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_1.xzw = u_xlat16_1.xzw
            * _LightColor0.xyz;\n    u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat0.xyz = u_xlat16_1.xzw
            * u_xlat16_1.yyy + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - POINT_COOKIE
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - POINT
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - SPOT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          hasDiscard: 0
        KeywordsMinimalCardinality: 5
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 9
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 5
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 1
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - SHADOWS_SCREEN
    - SHADOWS_SHADOWMASK
    - VERTEXLIGHT_ON
    - DIRECTIONAL_COOKIE
    - POINT
    - POINT_COOKIE
    - SPOT
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 9
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 5
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 9
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 5
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 4, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D
            _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump
            vec3 u_xlat16_1;\nmediump float u_xlat16_7;\nvoid main()\n{\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz
            * _Color.xyz;\n    u_xlat16_1.xyz = u_xlat0.xyz * _LightColor0.xyz;\n   
            u_xlat16_7 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_7
            = max(u_xlat16_7, 0.0);\n    SV_Target0.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump
            float u_xlat16_7;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_1.xyz = u_xlat0.xyz * _LightColor0.xyz;\n    u_xlat16_7 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_7 = max(u_xlat16_7, 0.0);\n   
            SV_Target0.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute
            highp vec4 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp
            vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying mediump
            vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www
            + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n   
            gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD3.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D
            _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying
            mediump vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nmediump
            float u_xlat16_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump vec3
            u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n    u_xlat16_0
            = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_0 =
            max(u_xlat16_0, 0.0);\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = u_xlat1.xyz
            * _LightColor0.xyz;\n    u_xlat16_2.xyz = u_xlat1.xyz * vs_TEXCOORD3.xyz;\n   
            SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_0) + u_xlat16_2.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            highp vec4 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4
            u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD3.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nin mediump vec3 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump float u_xlat16_0;\nvec3 u_xlat1;\nmediump
            vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvoid
            main()\n{\n    u_xlat16_0 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_0 = max(u_xlat16_0, 0.0);\n    u_xlat16_1.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n   
            u_xlat16_3.xyz = u_xlat1.xyz * _LightColor0.xyz;\n    u_xlat16_2.xyz
            = u_xlat1.xyz * vs_TEXCOORD3.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz
            * vec3(u_xlat16_0) + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D
            _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump
            vec3 u_xlat16_1;\nmediump float u_xlat16_7;\nvoid main()\n{\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz
            * _Color.xyz;\n    u_xlat16_1.xyz = u_xlat0.xyz * _LightColor0.xyz;\n   
            u_xlat16_7 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_7
            = max(u_xlat16_7, 0.0);\n    SV_Target0.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump
            float u_xlat16_7;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_1.xyz = u_xlat0.xyz * _LightColor0.xyz;\n    u_xlat16_7 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_7 = max(u_xlat16_7, 0.0);\n   
            SV_Target0.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            mediump vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nvec4
            u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n   
            u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat0 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat2 = u_xlat0 *
            u_xlat1.zzzz + u_xlat2;\n    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;\n   
            u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07,
            9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat0);\n    u_xlat0 =
            u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat0
            = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;\n    u_xlat2 = u_xlat2 * u_xlat3;\n   
            u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat0
            * u_xlat2;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD3.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D
            _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying
            mediump vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nmediump
            float u_xlat16_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump vec3
            u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n    u_xlat16_0
            = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_0 =
            max(u_xlat16_0, 0.0);\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = u_xlat1.xyz
            * _LightColor0.xyz;\n    u_xlat16_2.xyz = u_xlat1.xyz * vs_TEXCOORD3.xyz;\n   
            SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_0) + u_xlat16_2.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD5;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n   
            u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat0 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat2 = u_xlat0 *
            u_xlat1.zzzz + u_xlat2;\n    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;\n   
            u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07,
            9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat0);\n    u_xlat0 =
            u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat0
            = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;\n    u_xlat2 = u_xlat2 * u_xlat3;\n   
            u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat0
            * u_xlat2;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD3.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nin mediump vec3 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump float u_xlat16_0;\nvec3 u_xlat1;\nmediump
            vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvoid
            main()\n{\n    u_xlat16_0 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_0 = max(u_xlat16_0, 0.0);\n    u_xlat16_1.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n   
            u_xlat16_3.xyz = u_xlat1.xyz * _LightColor0.xyz;\n    u_xlat16_2.xyz
            = u_xlat1.xyz * vs_TEXCOORD3.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz
            * vec3(u_xlat16_0) + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 83
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 5
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute
            highp vec4 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp
            vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3
            vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4
            _LightColor0;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform
            \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform highp
            sampler2D _LightTexture0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying
            highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nfloat
            u_xlat6;\nmediump float u_xlat16_7;\nvoid main()\n{\n    u_xlat0.xyz
            = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx + u_xlat0.xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD2.zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat0.x = texture2D(_LightTexture0,
            u_xlat0.xx).x;\n    u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz
            = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_1.xyz = u_xlat16_1.xyz *
            u_xlat0.xyz;\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    u_xlat16_7 = dot(vs_TEXCOORD1.xyz,
            u_xlat0.xyz);\n    u_xlat16_7 = max(u_xlat16_7, 0.0);\n    SV_Target0.xyz
            = vec3(u_xlat16_7) * u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            highp vec4 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat
            u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform
            \tmediump vec4 _Color;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform highp sampler2D _LightTexture0;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nfloat u_xlat6;\nmediump float u_xlat16_7;\nvoid main()\n{\n   
            u_xlat0.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD2.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat0.x = texture(_LightTexture0,
            u_xlat0.xx).x;\n    u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_1.xyz = u_xlat16_1.xyz *
            u_xlat0.xyz;\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    u_xlat16_7 = dot(vs_TEXCOORD1.xyz,
            u_xlat0.xyz);\n    u_xlat16_7 = max(u_xlat16_7, 0.0);\n    SV_Target0.xyz
            = vec3(u_xlat16_7) * u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            highp vec4 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D
            _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump
            vec3 u_xlat16_1;\nmediump float u_xlat16_7;\nvoid main()\n{\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz
            * _Color.xyz;\n    u_xlat16_1.xyz = u_xlat0.xyz * _LightColor0.xyz;\n   
            u_xlat16_7 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_7
            = max(u_xlat16_7, 0.0);\n    SV_Target0.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump
            float u_xlat16_7;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_1.xyz = u_xlat0.xyz * _LightColor0.xyz;\n    u_xlat16_7 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_7 = max(u_xlat16_7, 0.0);\n   
            SV_Target0.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - POINT_COOKIE
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - POINT
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - SPOT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          hasDiscard: 0
        KeywordsMinimalCardinality: 5
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 9
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 5
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - SHADOWS_SCREEN
    - SHADOWS_SHADOWMASK
    - VERTEXLIGHT_ON
    - DIRECTIONAL_COOKIE
    - POINT
    - POINT_COOKIE
    - SPOT
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 9
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 5
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 200, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TintColor;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_1;\nvoid
            main()\n{\n    u_xlat0 = vs_COLOR0 + vs_COLOR0;\n    u_xlat0 = u_xlat0
            * _TintColor;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat0 * u_xlat10_1;\n    SV_Target0.w = u_xlat0.w;\n    SV_Target0.w
            = clamp(SV_Target0.w, 0.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TintColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_1;\nvoid main()\n{\n    u_xlat0 = vs_COLOR0
            + vs_COLOR0;\n    u_xlat0 = u_xlat0 * _TintColor;\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat0 * u_xlat16_1;\n    SV_Target0.w
            = u_xlat0.w;\n    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);\n   
            SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - SOFTPARTICLES_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - SOFTPARTICLES_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 200, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 200, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 200, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 200, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - SOFTPARTICLES_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 200, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 200, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 202, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute
            highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp
            vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 * vs_COLOR0;\n    SV_Target0.xyz
            = u_xlat0.www * u_xlat0.xyz;\n    SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0 = u_xlat16_0 * vs_COLOR0;\n    SV_Target0.xyz = u_xlat0.www *
            u_xlat0.xyz;\n    SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - SOFTPARTICLES_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - SOFTPARTICLES_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 202, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 202, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 202, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 202, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - SOFTPARTICLES_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 202, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 202, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 203, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _TintColor;\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0 * _TintColor;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec4 u_xlat10_1;\nvoid main()\n{\n    u_xlat0 = vs_COLOR0 + vs_COLOR0;\n   
            u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat0
            * u_xlat10_1;\n    SV_Target0.w = u_xlat0.w;\n    SV_Target0.w = clamp(SV_Target0.w,
            0.0, 1.0);\n    SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _TintColor;\nuniform \tvec4 _MainTex_ST;\nin highp vec4
            in_POSITION0;\nin mediump vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0 * _TintColor;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat0 = vs_COLOR0 + vs_COLOR0;\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat0 * u_xlat16_1;\n    SV_Target0.w
            = u_xlat0.w;\n    SV_Target0.w = clamp(SV_Target0.w, 0.0, 1.0);\n   
            SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - SOFTPARTICLES_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - SOFTPARTICLES_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 203, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 203, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 203, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 203, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - SOFTPARTICLES_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 203, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 203, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\n#define
            SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nmediump vec3 u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nmediump float u_xlat16_13;\nmediump float u_xlat16_14;\nvoid
            main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 =
            inversesqrt(u_xlat16_13);\n    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n   
            u_xlat16_1.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_1.x
            = max(u_xlat16_1.x, 0.0);\n    u_xlat0.x = log2(u_xlat16_1.x);\n    u_xlat16_1.x
            = _Shininess * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.x = u_xlat0.x * u_xlat10_1.w;\n    u_xlat16_2.xyz = u_xlat10_1.xyz
            * _Color.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n   
            u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat0.xyz
            = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_14 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_14 = max(u_xlat16_14, 0.0);\n   
            u_xlat0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_14) + u_xlat0.xyz;\n   
            SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec2 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3
            vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nmediump float u_xlat16_13;\nmediump
            float u_xlat16_14;\nvoid main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz = u_xlat0.xyz *
            vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13 = dot(u_xlat16_1.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n    u_xlat16_1.xyz
            = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat16_1.x = dot(vs_TEXCOORD1.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat0.x
            = log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.w;\n   
            u_xlat16_2.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz
            * _LightColor0.xyz;\n    u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_14 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_14 = max(u_xlat16_14, 0.0);\n   
            u_xlat0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_14) + u_xlat0.xyz;\n   
            SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute
            highp vec4 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp
            vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying mediump
            vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www
            + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n   
            gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD3.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            mediump vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nmediump
            vec3 u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nmediump float u_xlat16_13;\nmediump
            float u_xlat16_14;\nvoid main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz = u_xlat0.xyz *
            vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13 = dot(u_xlat16_1.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n    u_xlat16_1.xyz
            = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat16_1.x = dot(vs_TEXCOORD1.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat0.x
            = log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat10_1
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.x = u_xlat0.x *
            u_xlat10_1.w;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * _Color.xyz;\n   
            u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat0.xyz
            = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_14 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_14 = max(u_xlat16_14, 0.0);\n   
            u_xlat16_3.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n    u_xlat0.xyz
            = u_xlat16_3.xyz * vec3(u_xlat16_14) + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat16_2.xyz * vs_TEXCOORD3.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            highp vec4 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4
            u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD3.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec2 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3
            vs_TEXCOORD2;\nin mediump vec3 vs_TEXCOORD3;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nmediump
            float u_xlat16_13;\nmediump float u_xlat16_14;\nvoid main()\n{\n    u_xlat0.xyz
            = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz
            = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13
            = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n   
            u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat16_1.x
            = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x,
            0.0);\n    u_xlat0.x = log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess
            * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x =
            exp2(u_xlat0.x);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.x = u_xlat0.x * u_xlat16_1.w;\n    u_xlat16_2.xyz = u_xlat16_1.xyz
            * _Color.xyz;\n    u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_14 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_14 = max(u_xlat16_14, 0.0);\n   
            u_xlat16_3.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n    u_xlat0.xyz
            = u_xlat16_3.xyz * vec3(u_xlat16_14) + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat16_2.xyz * vs_TEXCOORD3.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\n#define
            SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nmediump vec3 u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nmediump float u_xlat16_13;\nmediump float u_xlat16_14;\nvoid
            main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 =
            inversesqrt(u_xlat16_13);\n    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n   
            u_xlat16_1.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_1.x
            = max(u_xlat16_1.x, 0.0);\n    u_xlat0.x = log2(u_xlat16_1.x);\n    u_xlat16_1.x
            = _Shininess * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.x = u_xlat0.x * u_xlat10_1.w;\n    u_xlat16_2.xyz = u_xlat10_1.xyz
            * _Color.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n   
            u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat0.xyz
            = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_14 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_14 = max(u_xlat16_14, 0.0);\n   
            u_xlat0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_14) + u_xlat0.xyz;\n   
            SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD5 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec2 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3
            vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nmediump float u_xlat16_13;\nmediump
            float u_xlat16_14;\nvoid main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz = u_xlat0.xyz *
            vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13 = dot(u_xlat16_1.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n    u_xlat16_1.xyz
            = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat16_1.x = dot(vs_TEXCOORD1.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat0.x
            = log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.w;\n   
            u_xlat16_2.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz
            * _LightColor0.xyz;\n    u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_14 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_14 = max(u_xlat16_14, 0.0);\n   
            u_xlat0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_14) + u_xlat0.xyz;\n   
            SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            mediump vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nvec4
            u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n   
            u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat0 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat2 = u_xlat0 *
            u_xlat1.zzzz + u_xlat2;\n    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;\n   
            u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07,
            9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat0);\n    u_xlat0 =
            u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat0
            = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;\n    u_xlat2 = u_xlat2 * u_xlat3;\n   
            u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat0
            * u_xlat2;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD3.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            mediump vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nmediump
            vec3 u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nmediump float u_xlat16_13;\nmediump
            float u_xlat16_14;\nvoid main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz = u_xlat0.xyz *
            vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13 = dot(u_xlat16_1.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n    u_xlat16_1.xyz
            = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat16_1.x = dot(vs_TEXCOORD1.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat0.x
            = log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat10_1
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.x = u_xlat0.x *
            u_xlat10_1.w;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * _Color.xyz;\n   
            u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat0.xyz
            = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_14 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_14 = max(u_xlat16_14, 0.0);\n   
            u_xlat16_3.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n    u_xlat0.xyz
            = u_xlat16_3.xyz * vec3(u_xlat16_14) + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat16_2.xyz * vs_TEXCOORD3.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD5;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n   
            u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat0 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat2 = u_xlat0 *
            u_xlat1.zzzz + u_xlat2;\n    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;\n   
            u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07,
            9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat0);\n    u_xlat0 =
            u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat0
            = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;\n    u_xlat2 = u_xlat2 * u_xlat3;\n   
            u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat0
            * u_xlat2;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD3.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec2 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3
            vs_TEXCOORD2;\nin mediump vec3 vs_TEXCOORD3;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nmediump
            float u_xlat16_13;\nmediump float u_xlat16_14;\nvoid main()\n{\n    u_xlat0.xyz
            = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz
            = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13
            = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n   
            u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat16_1.x
            = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x,
            0.0);\n    u_xlat0.x = log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess
            * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x =
            exp2(u_xlat0.x);\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.x = u_xlat0.x * u_xlat16_1.w;\n    u_xlat16_2.xyz = u_xlat16_1.xyz
            * _Color.xyz;\n    u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_14 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_14 = max(u_xlat16_14, 0.0);\n   
            u_xlat16_3.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n    u_xlat0.xyz
            = u_xlat16_3.xyz * vec3(u_xlat16_14) + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat16_2.xyz * vs_TEXCOORD3.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 83
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 5
          shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute
            highp vec4 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp
            vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3
            vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Shininess;\nuniform lowp sampler2D _MainTex;\nuniform
            highp sampler2D _LightTexture0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying
            highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nvec3 u_xlat1;\nlowp vec4 u_xlat10_1;\nmediump
            vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nfloat u_xlat15;\nvoid main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceLightPos0.xyz;\n    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat0.xyz = vec3(u_xlat15) *
            u_xlat0.xyz;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat16_2.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;\n    u_xlat16_2.w
            = dot(vs_TEXCOORD1.xyz, u_xlat0.xyz);\n    u_xlat16_3.x = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlat16_3.x = inversesqrt(u_xlat16_3.x);\n   
            u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_3.xxx;\n    u_xlat16_2.x =
            dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n    u_xlat16_2.xw = max(u_xlat16_2.xw,
            vec2(0.0, 0.0));\n    u_xlat0.x = log2(u_xlat16_2.x);\n    u_xlat16_2.x
            = _Shininess * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_2.x;\n   
            u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.x = u_xlat0.x * u_xlat10_1.w;\n    u_xlat16_2.xyz = u_xlat10_1.xyz
            * _Color.xyz;\n    u_xlat5.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD2.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat5.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat5.x = texture2D(_LightTexture0,
            u_xlat5.xx).x;\n    u_xlat16_3.xyz = u_xlat5.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_3.xyz * _SpecColor.xyz;\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz * u_xlat16_3.xyz;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n   
            u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_2.www + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            highp vec4 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat
            u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Shininess;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform highp
            sampler2D _LightTexture0;\nin highp vec2 vs_TEXCOORD0;\nin highp vec3
            vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec3 u_xlat1;\nmediump vec4
            u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nvec3 u_xlat5;\nfloat u_xlat15;\nvoid main()\n{\n   
            u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;\n    u_xlat15
            = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;\n    u_xlat1.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat16_2.xyz = u_xlat1.xyz *
            vec3(u_xlat15) + u_xlat0.xyz;\n    u_xlat16_2.w = dot(vs_TEXCOORD1.xyz,
            u_xlat0.xyz);\n    u_xlat16_3.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n   
            u_xlat16_3.x = inversesqrt(u_xlat16_3.x);\n    u_xlat16_2.xyz = u_xlat16_2.xyz
            * u_xlat16_3.xxx;\n    u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);\n   
            u_xlat16_2.xw = max(u_xlat16_2.xw, vec2(0.0, 0.0));\n    u_xlat0.x =
            log2(u_xlat16_2.x);\n    u_xlat16_2.x = _Shininess * 128.0;\n    u_xlat0.x
            = u_xlat0.x * u_xlat16_2.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.w;\n   
            u_xlat16_2.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat5.xyz = vs_TEXCOORD2.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * vs_TEXCOORD2.xxx + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD2.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat5.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat5.x = texture(_LightTexture0,
            u_xlat5.xx).x;\n    u_xlat16_3.xyz = u_xlat5.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_3.xyz * _SpecColor.xyz;\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz * u_xlat16_3.xyz;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n   
            u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_2.www + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            highp vec4 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4
            _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\n#define
            SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nmediump vec3 u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nmediump float u_xlat16_13;\nmediump float u_xlat16_14;\nvoid
            main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_13 =
            inversesqrt(u_xlat16_13);\n    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n   
            u_xlat16_1.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_1.x
            = max(u_xlat16_1.x, 0.0);\n    u_xlat0.x = log2(u_xlat16_1.x);\n    u_xlat16_1.x
            = _Shininess * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat0.x = u_xlat0.x * u_xlat10_1.w;\n    u_xlat16_2.xyz = u_xlat10_1.xyz
            * _Color.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;\n   
            u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat0.xyz
            = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_14 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_14 = max(u_xlat16_14, 0.0);\n   
            u_xlat0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_14) + u_xlat0.xyz;\n   
            SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tmediump
            float _Shininess;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec2 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3
            vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nmediump float u_xlat16_13;\nmediump
            float u_xlat16_14;\nvoid main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceCameraPos.xyz;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat16_1.xyz = u_xlat0.xyz *
            vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_13 = dot(u_xlat16_1.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_13 = inversesqrt(u_xlat16_13);\n    u_xlat16_1.xyz
            = vec3(u_xlat16_13) * u_xlat16_1.xyz;\n    u_xlat16_1.x = dot(vs_TEXCOORD1.xyz,
            u_xlat16_1.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat0.x
            = log2(u_xlat16_1.x);\n    u_xlat16_1.x = _Shininess * 128.0;\n    u_xlat0.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat16_1
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0.x = u_xlat0.x * u_xlat16_1.w;\n   
            u_xlat16_2.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz
            * _LightColor0.xyz;\n    u_xlat16_3.xyz = _LightColor0.xyz * _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_14 = dot(vs_TEXCOORD1.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat16_14 = max(u_xlat16_14, 0.0);\n   
            u_xlat0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_14) + u_xlat0.xyz;\n   
            SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - POINT_COOKIE
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - POINT
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - SPOT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          hasDiscard: 0
        KeywordsMinimalCardinality: 5
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 9
          shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 5
          shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - SHADOWS_SCREEN
    - SHADOWS_SHADOWMASK
    - VERTEXLIGHT_ON
    - DIRECTIONAL_COOKIE
    - POINT
    - POINT_COOKIE
    - SPOT
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 9
      shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 5
      shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 3, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tvec4 unity_LightPosition[8];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tmediump vec4 glstate_lightmodel_ambient;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Emission;\nuniform
            \tmediump float _Shininess;\nuniform \tvec4 _MainTex_ST;\nattribute highp
            vec3 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute highp
            vec3 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec3 vs_COLOR1;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nvec3
            u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump
            vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nfloat
            u_xlat36;\nint u_xlati37;\nmediump float u_xlat16_43;\nmediump float
            u_xlat16_44;\nvoid main()\n{\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].www + u_xlat0.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[1].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].www
            + u_xlat1.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].zzz
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].www + u_xlat2.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].zzz + u_xlat3.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].www
            + u_xlat3.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat4.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www
            + u_xlat5.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat6.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz
            + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat6.xyz;\n    u_xlat1.xyz
            = u_xlat1.xyz * in_POSITION0.yyy;\n    u_xlat0.xyz = u_xlat0.xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * in_POSITION0.zzz + u_xlat0.xyz;\n   
            u_xlat0.xyz = u_xlat3.xyz + u_xlat0.xyz;\n    u_xlat1.x = dot(u_xlat4.xyz,
            in_NORMAL0.xyz);\n    u_xlat1.y = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.z = dot(u_xlat6.xyz, in_NORMAL0.xyz);\n    u_xlat36 = dot(u_xlat1.xyz,
            u_xlat1.xyz);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz
            = vec3(u_xlat36) * u_xlat1.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat16_7.xyz = _Color.xyz *
            glstate_lightmodel_ambient.xyz + _Emission.xyz;\n    u_xlat16_43 = _Shininess
            * 128.0;\n    u_xlat16_8.xyz = u_xlat16_7.xyz;\n    u_xlat16_9.x = float(0.0);\n   
            u_xlat16_9.y = float(0.0);\n    u_xlat16_9.z = float(0.0);\n    for(int
            u_xlati_loop_1 = 0 ; u_xlati_loop_1<8 ; u_xlati_loop_1++)\n    {\n       
            u_xlat16_44 = dot(u_xlat1.xyz, unity_LightPosition[u_xlati_loop_1].xyz);\n       
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n        u_xlat16_10.xyz = vec3(u_xlat16_44)
            * _Color.xyz;\n        u_xlat16_10.xyz = u_xlat16_10.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n       
            u_xlatb2 = 0.0<u_xlat16_44;\n        if(u_xlatb2){\n            u_xlat16_11.xyz
            = (-u_xlat0.xyz) * vec3(u_xlat36) + unity_LightPosition[u_xlati_loop_1].xyz;\n           
            u_xlat16_44 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n            u_xlat16_44
            = inversesqrt(u_xlat16_44);\n            u_xlat16_11.xyz = vec3(u_xlat16_44)
            * u_xlat16_11.xyz;\n            u_xlat16_44 = dot(u_xlat1.xyz, u_xlat16_11.xyz);\n           
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n            u_xlat16_44 = log2(u_xlat16_44);\n           
            u_xlat16_44 = u_xlat16_43 * u_xlat16_44;\n            u_xlat16_44 = exp2(u_xlat16_44);\n           
            u_xlat16_44 = min(u_xlat16_44, 1.0);\n            u_xlat16_44 = u_xlat16_44
            * 0.5;\n            u_xlat16_9.xyz = vec3(u_xlat16_44) * unity_LightColor[u_xlati_loop_1].xyz
            + u_xlat16_9.xyz;\n        }\n        u_xlat16_10.xyz = u_xlat16_10.xyz
            * vec3(0.5, 0.5, 0.5);\n        u_xlat16_10.xyz = min(u_xlat16_10.xyz,
            vec3(1.0, 1.0, 1.0));\n        u_xlat16_8.xyz = u_xlat16_8.xyz + u_xlat16_10.xyz;\n   
            }\n    vs_COLOR1.xyz = u_xlat16_9.xyz * _SpecColor.xyz;\n    vs_COLOR1.xyz
            = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_COLOR0.xyz = u_xlat16_8.xyz;\n   
            vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n   
            vs_COLOR0.w = clamp(vs_COLOR0.w, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy *
            hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump float _Cutoff;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec3 vs_COLOR1;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nmediump
            vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nbool u_xlatb1;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 =
            u_xlat10_0 * vs_COLOR0;\n    u_xlatb1 = _Cutoff>=u_xlat16_0.w;\n    if(u_xlatb1){discard;}\n   
            SV_Target0.xyz = u_xlat16_0.xyz * vec3(2.0, 2.0, 2.0) + vs_COLOR1.xyz;\n   
            SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: Vertex
          - Key: QUEUE
            Value: AlphaTest
          - Key: RenderType
            Value: TransparentCutout
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tvec4 unity_LightPosition[8];\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 glstate_lightmodel_ambient;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump vec4 _SpecColor;\nuniform \tmediump
            vec4 _Emission;\nuniform \tmediump float _Shininess;\nuniform \tivec4
            unity_VertexLightParams;\nuniform \tvec4 _MainTex_ST;\nin highp vec3
            in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec3 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec3 vs_COLOR1;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3
            u_xlat3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat36;\nint u_xlati37;\nmediump float u_xlat16_43;\nmediump
            float u_xlat16_44;\nvoid main()\n{\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].www + u_xlat0.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[1].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].www
            + u_xlat1.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].zzz
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].www + u_xlat2.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].zzz + u_xlat3.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].www
            + u_xlat3.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat4.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www
            + u_xlat5.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat6.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz
            + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat6.xyz;\n    u_xlat1.xyz
            = u_xlat1.xyz * in_POSITION0.yyy;\n    u_xlat0.xyz = u_xlat0.xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * in_POSITION0.zzz + u_xlat0.xyz;\n   
            u_xlat0.xyz = u_xlat3.xyz + u_xlat0.xyz;\n    u_xlat1.x = dot(u_xlat4.xyz,
            in_NORMAL0.xyz);\n    u_xlat1.y = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.z = dot(u_xlat6.xyz, in_NORMAL0.xyz);\n    u_xlat36 = dot(u_xlat1.xyz,
            u_xlat1.xyz);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz
            = vec3(u_xlat36) * u_xlat1.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat16_7.xyz = _Color.xyz *
            glstate_lightmodel_ambient.xyz + _Emission.xyz;\n    u_xlat16_43 = _Shininess
            * 128.0;\n    u_xlat16_8.xyz = u_xlat16_7.xyz;\n    u_xlat16_9.x = float(0.0);\n   
            u_xlat16_9.y = float(0.0);\n    u_xlat16_9.z = float(0.0);\n    for(int
            u_xlati_loop_1 = 0 ; u_xlati_loop_1<unity_VertexLightParams.x ; u_xlati_loop_1++)\n   
            {\n        u_xlat16_44 = dot(u_xlat1.xyz, unity_LightPosition[u_xlati_loop_1].xyz);\n       
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n        u_xlat16_10.xyz = vec3(u_xlat16_44)
            * _Color.xyz;\n        u_xlat16_10.xyz = u_xlat16_10.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n       
            u_xlatb2 = 0.0<u_xlat16_44;\n        if(u_xlatb2){\n            u_xlat16_11.xyz
            = (-u_xlat0.xyz) * vec3(u_xlat36) + unity_LightPosition[u_xlati_loop_1].xyz;\n           
            u_xlat16_44 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n            u_xlat16_44
            = inversesqrt(u_xlat16_44);\n            u_xlat16_11.xyz = vec3(u_xlat16_44)
            * u_xlat16_11.xyz;\n            u_xlat16_44 = dot(u_xlat1.xyz, u_xlat16_11.xyz);\n           
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n            u_xlat16_44 = log2(u_xlat16_44);\n           
            u_xlat16_44 = u_xlat16_43 * u_xlat16_44;\n            u_xlat16_44 = exp2(u_xlat16_44);\n           
            u_xlat16_44 = min(u_xlat16_44, 1.0);\n            u_xlat16_44 = u_xlat16_44
            * 0.5;\n            u_xlat16_9.xyz = vec3(u_xlat16_44) * unity_LightColor[u_xlati_loop_1].xyz
            + u_xlat16_9.xyz;\n        }\n        u_xlat16_10.xyz = u_xlat16_10.xyz
            * vec3(0.5, 0.5, 0.5);\n        u_xlat16_10.xyz = min(u_xlat16_10.xyz,
            vec3(1.0, 1.0, 1.0));\n        u_xlat16_8.xyz = u_xlat16_8.xyz + u_xlat16_10.xyz;\n   
            }\n    vs_COLOR1.xyz = u_xlat16_9.xyz * _SpecColor.xyz;\n    vs_COLOR1.xyz
            = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_COLOR0.xyz = u_xlat16_8.xyz;\n   
            vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n   
            vs_COLOR0.w = clamp(vs_COLOR0.w, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy *
            hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump float _Cutoff;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin mediump
            vec3 vs_COLOR1;\nin highp vec2 vs_TEXCOORD0;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb1;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_0 = u_xlat16_0 * vs_COLOR0;\n    u_xlatb1 = _Cutoff>=u_xlat16_0.w;\n   
            if(u_xlatb1){discard;}\n    SV_Target0.xyz = u_xlat16_0.xyz * vec3(2.0,
            2.0, 2.0) + vs_COLOR1.xyz;\n    SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: Vertex
          - Key: QUEUE
            Value: AlphaTest
          - Key: RenderType
            Value: TransparentCutout
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tvec4 unity_LightPosition[8];\nuniform \tmediump vec4 unity_LightAtten[8];\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 glstate_lightmodel_ambient;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump vec4 _SpecColor;\nuniform \tmediump
            vec4 _Emission;\nuniform \tmediump float _Shininess;\nuniform \tvec4
            _MainTex_ST;\nattribute highp vec3 in_POSITION0;\nattribute highp vec3
            in_NORMAL0;\nattribute highp vec3 in_TEXCOORD0;\nvarying mediump vec4
            vs_COLOR0;\nvarying mediump vec3 vs_COLOR1;\nvarying highp vec2 vs_TEXCOORD0;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3 u_xlat3;\nvec3
            u_xlat4;\nvec3 u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_11;\nbool u_xlatb15;\nbool u_xlatb27;\nfloat u_xlat36;\nint
            u_xlati37;\nfloat u_xlat38;\nbool u_xlatb38;\nmediump float u_xlat16_43;\nmediump
            float u_xlat16_44;\nmediump float u_xlat16_45;\nvoid main()\n{\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].zzz + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].www
            + u_xlat0.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].zzz
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[1].www + u_xlat1.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].zzz + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].www
            + u_xlat2.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx + u_xlat3.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].zzz
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].www + u_xlat3.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n   
            u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].xxx
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].zzz + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].www
            + u_xlat4.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].xxx + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].zzz
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].www + u_xlat5.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n   
            u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].xxx
            + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].zzz + u_xlat6.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].www
            + u_xlat6.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * in_POSITION0.yyy;\n   
            u_xlat0.xyz = u_xlat0.xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz
            = u_xlat2.xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat3.xyz
            + u_xlat0.xyz;\n    u_xlat1.x = dot(u_xlat4.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.y = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n    u_xlat1.z = dot(u_xlat6.xyz,
            in_NORMAL0.xyz);\n    u_xlat36 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz = vec3(u_xlat36) *
            u_xlat1.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat36
            = inversesqrt(u_xlat36);\n    u_xlat16_7.xyz = _Color.xyz * glstate_lightmodel_ambient.xyz
            + _Emission.xyz;\n    u_xlat16_43 = _Shininess * 128.0;\n    u_xlat16_8.xyz
            = u_xlat16_7.xyz;\n    u_xlat16_9.x = float(0.0);\n    u_xlat16_9.y =
            float(0.0);\n    u_xlat16_9.z = float(0.0);\n    for(int u_xlati_loop_1
            = 0 ; u_xlati_loop_1<8 ; u_xlati_loop_1++)\n    {\n        u_xlat2.xyz
            = (-u_xlat0.xyz) * unity_LightPosition[u_xlati_loop_1].www + unity_LightPosition[u_xlati_loop_1].xyz;\n       
            u_xlat38 = dot(u_xlat2.xyz, u_xlat2.xyz);\n        u_xlat3.x = unity_LightAtten[u_xlati_loop_1].z
            * u_xlat38 + 1.0;\n        u_xlat3.x = float(1.0) / u_xlat3.x;\n       
            u_xlatb15 = 0.0!=unity_LightPosition[u_xlati_loop_1].w;\n        u_xlatb27
            = unity_LightAtten[u_xlati_loop_1].w<u_xlat38;\n        u_xlatb15 = u_xlatb27
            && u_xlatb15;\n        u_xlat38 = max(u_xlat38, 9.99999997e-07);\n       
            u_xlat38 = inversesqrt(u_xlat38);\n        u_xlat2.xyz = vec3(u_xlat38)
            * u_xlat2.xyz;\n        u_xlat38 = u_xlat3.x * 0.5;\n        u_xlat16_44
            = (u_xlatb15) ? 0.0 : u_xlat38;\n        u_xlat16_45 = dot(u_xlat1.xyz,
            u_xlat2.xyz);\n        u_xlat16_45 = max(u_xlat16_45, 0.0);\n       
            u_xlat16_10.xyz = vec3(u_xlat16_45) * _Color.xyz;\n        u_xlat16_10.xyz
            = u_xlat16_10.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n        u_xlatb38
            = 0.0<u_xlat16_45;\n        if(u_xlatb38){\n            u_xlat16_11.xyz
            = (-u_xlat0.xyz) * vec3(u_xlat36) + u_xlat2.xyz;\n            u_xlat16_45
            = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n            u_xlat16_45 = inversesqrt(u_xlat16_45);\n           
            u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_11.xyz;\n            u_xlat16_45
            = dot(u_xlat1.xyz, u_xlat16_11.xyz);\n            u_xlat16_45 = max(u_xlat16_45,
            0.0);\n            u_xlat16_45 = log2(u_xlat16_45);\n            u_xlat16_45
            = u_xlat16_43 * u_xlat16_45;\n            u_xlat16_45 = exp2(u_xlat16_45);\n           
            u_xlat16_45 = min(u_xlat16_45, 1.0);\n            u_xlat16_45 = u_xlat16_44
            * u_xlat16_45;\n            u_xlat16_9.xyz = vec3(u_xlat16_45) * unity_LightColor[u_xlati_loop_1].xyz
            + u_xlat16_9.xyz;\n        }\n        u_xlat16_10.xyz = vec3(u_xlat16_44)
            * u_xlat16_10.xyz;\n        u_xlat16_10.xyz = min(u_xlat16_10.xyz, vec3(1.0,
            1.0, 1.0));\n        u_xlat16_8.xyz = u_xlat16_8.xyz + u_xlat16_10.xyz;\n   
            }\n    vs_COLOR1.xyz = u_xlat16_9.xyz * _SpecColor.xyz;\n    vs_COLOR1.xyz
            = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_COLOR0.xyz = u_xlat16_8.xyz;\n   
            vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n   
            vs_COLOR0.w = clamp(vs_COLOR0.w, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy *
            hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump float _Cutoff;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec3 vs_COLOR1;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nmediump
            vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nbool u_xlatb1;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 =
            u_xlat10_0 * vs_COLOR0;\n    u_xlatb1 = _Cutoff>=u_xlat16_0.w;\n    if(u_xlatb1){discard;}\n   
            SV_Target0.xyz = u_xlat16_0.xyz * vec3(2.0, 2.0, 2.0) + vs_COLOR1.xyz;\n   
            SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: Vertex
          - Key: QUEUE
            Value: AlphaTest
          - Key: RenderType
            Value: TransparentCutout
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tvec4 unity_LightPosition[8];\nuniform
            \tmediump vec4 unity_LightAtten[8];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tmediump vec4 glstate_lightmodel_ambient;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Emission;\nuniform
            \tmediump float _Shininess;\nuniform \tivec4 unity_VertexLightParams;\nuniform
            \tvec4 _MainTex_ST;\nin highp vec3 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            highp vec3 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec3
            vs_COLOR1;\nout highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nmediump vec4 u_xlat16_3;\nvec3
            u_xlat4;\nvec3 u_xlat5;\nbool u_xlatb5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbool u_xlatb9;\nfloat
            u_xlat10;\nvec3 u_xlat11;\nvec3 u_xlat12;\nbool u_xlatb12;\nfloat u_xlat13;\nmediump
            vec3 u_xlat16_14;\nvec3 u_xlat15;\nvec3 u_xlat16;\nbool u_xlatb16;\nfloat
            u_xlat17;\nmediump vec3 u_xlat16_18;\nvec3 u_xlat19;\nvec3 u_xlat21;\nmediump
            vec3 u_xlat16_22;\nint u_xlati24;\nbool u_xlatb24;\nmediump vec3 u_xlat16_25;\nmediump
            vec3 u_xlat16_26;\nvec3 u_xlat28;\nvec3 u_xlat29;\nbool u_xlatb29;\nvec3
            u_xlat31;\nvec3 u_xlat32;\nbool u_xlatb32;\nvec3 u_xlat35;\nvec3 u_xlat36;\nbool
            u_xlatb36;\nmediump float u_xlat16_41;\nbool u_xlatb43;\nmediump float
            u_xlat16_44;\nmediump float u_xlat16_45;\nfloat u_xlat48;\nbool u_xlatb48;\nfloat
            u_xlat51;\nbool u_xlatb51;\nfloat u_xlat55;\nbool u_xlatb55;\nfloat u_xlat58;\nfloat
            u_xlat61;\nfloat u_xlat62;\nmediump float u_xlat16_63;\nmediump float
            u_xlat16_64;\nbool u_xlatb65;\nfloat u_xlat67;\nbool u_xlatb68;\nfloat
            u_xlat70;\nbool u_xlatb72;\nvoid main()\n{\n    u_xlatb0 = unity_LightPosition[1].w!=0.0;\n   
            u_xlat19.xyz = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat19.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx
            + u_xlat19.xyz;\n    u_xlat19.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[1].zzz + u_xlat19.xyz;\n    u_xlat19.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].www
            + u_xlat19.xyz;\n    u_xlat19.xyz = u_xlat19.xyz * in_POSITION0.yyy;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].www
            + u_xlat1.xyz;\n    u_xlat19.xyz = u_xlat1.xyz * in_POSITION0.xxx + u_xlat19.xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].www
            + u_xlat1.xyz;\n    u_xlat19.xyz = u_xlat1.xyz * in_POSITION0.zzz + u_xlat19.xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].www
            + u_xlat1.xyz;\n    u_xlat19.xyz = u_xlat19.xyz + u_xlat1.xyz;\n    u_xlat1.xyz
            = (-u_xlat19.xyz) * unity_LightPosition[1].www + unity_LightPosition[1].xyz;\n   
            u_xlat58 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlatb2 = unity_LightAtten[1].w<u_xlat58;\n   
            u_xlatb0 = u_xlatb0 && u_xlatb2;\n    u_xlat2.x = unity_LightAtten[1].z
            * u_xlat58 + 1.0;\n    u_xlat58 = max(u_xlat58, 9.99999997e-07);\n   
            u_xlat58 = inversesqrt(u_xlat58);\n    u_xlat2.x = float(1.0) / u_xlat2.x;\n   
            u_xlat2.x = u_xlat2.x * 0.5;\n    u_xlat16_3.x = (u_xlatb0) ? 0.0 : u_xlat2.x;\n   
            u_xlat2.xyz = vec3(u_xlat58) * u_xlat1.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat4.xyz;\n    u_xlat4.x
            = dot(u_xlat4.xyz, in_NORMAL0.xyz);\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].xxx + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].zzz
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].www + u_xlat5.xyz;\n    u_xlat4.y
            = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat5.xyz;\n    u_xlat4.z
            = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n    u_xlat0.x = dot(u_xlat4.xyz,
            u_xlat4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat4.xyz
            = u_xlat0.xxx * u_xlat4.xyz;\n    u_xlat16_22.x = dot(u_xlat4.xyz, u_xlat2.xyz);\n   
            u_xlat16_22.x = max(u_xlat16_22.x, 0.0);\n    u_xlat16_6.xyz = u_xlat16_22.xxx
            * _Color.xyz;\n    u_xlatb0 = 0.0<u_xlat16_22.x;\n    u_xlat16_22.xyz
            = u_xlat16_6.xyz * unity_LightColor[1].xyz;\n    u_xlat16_22.xyz = u_xlat16_3.xxx
            * u_xlat16_22.xyz;\n    u_xlat16_22.xyz = min(u_xlat16_22.xyz, vec3(1.0,
            1.0, 1.0));\n    u_xlatb2 = unity_LightPosition[0].w!=0.0;\n    u_xlat21.xyz
            = (-u_xlat19.xyz) * unity_LightPosition[0].www + unity_LightPosition[0].xyz;\n   
            u_xlat61 = dot(u_xlat21.xyz, u_xlat21.xyz);\n    u_xlatb5 = unity_LightAtten[0].w<u_xlat61;\n   
            u_xlatb2 = u_xlatb2 && u_xlatb5;\n    u_xlat5.x = unity_LightAtten[0].z
            * u_xlat61 + 1.0;\n    u_xlat61 = max(u_xlat61, 9.99999997e-07);\n   
            u_xlat61 = inversesqrt(u_xlat61);\n    u_xlat5.x = float(1.0) / u_xlat5.x;\n   
            u_xlat5.x = u_xlat5.x * 0.5;\n    u_xlat16_6.x = (u_xlatb2) ? 0.0 : u_xlat5.x;\n   
            u_xlat5.xyz = u_xlat21.xyz * vec3(u_xlat61);\n    u_xlat16_25.x = dot(u_xlat4.xyz,
            u_xlat5.xyz);\n    u_xlat16_25.x = max(u_xlat16_25.x, 0.0);\n    u_xlat16_7.xyz
            = u_xlat16_25.xxx * _Color.xyz;\n    u_xlatb2 = 0.0<u_xlat16_25.x;\n   
            u_xlat16_25.xyz = u_xlat16_7.xyz * unity_LightColor[0].xyz;\n    u_xlat16_25.xyz
            = u_xlat16_6.xxx * u_xlat16_25.xyz;\n    u_xlat16_25.xyz = min(u_xlat16_25.xyz,
            vec3(1.0, 1.0, 1.0));\n    u_xlat16_7.xyz = _Color.xyz * glstate_lightmodel_ambient.xyz
            + _Emission.xyz;\n    u_xlat16_25.xyz = u_xlat16_25.xyz + u_xlat16_7.xyz;\n   
            u_xlatb5 = 0<unity_VertexLightParams.x;\n    u_xlat16_25.xyz = (bool(u_xlatb5))
            ? u_xlat16_25.xyz : u_xlat16_7.xyz;\n    u_xlat16_22.xyz = u_xlat16_22.xyz
            + u_xlat16_25.xyz;\n    u_xlati24 = u_xlatb5 ? 1 : int(0);\n    u_xlatb43
            = u_xlati24<unity_VertexLightParams.x;\n    u_xlati24 = (u_xlatb43) ?
            2 : u_xlati24;\n    u_xlat16_22.xyz = (bool(u_xlatb43)) ? u_xlat16_22.xyz
            : u_xlat16_25.xyz;\n    u_xlat8.xyz = (-u_xlat19.xyz) * unity_LightPosition[2].www
            + unity_LightPosition[2].xyz;\n    u_xlat62 = dot(u_xlat8.xyz, u_xlat8.xyz);\n   
            u_xlatb65 = unity_LightAtten[2].w<u_xlat62;\n    u_xlatb9 = unity_LightPosition[2].w!=0.0;\n   
            u_xlatb65 = u_xlatb65 && u_xlatb9;\n    u_xlat9.x = unity_LightAtten[2].z
            * u_xlat62 + 1.0;\n    u_xlat62 = max(u_xlat62, 9.99999997e-07);\n   
            u_xlat62 = inversesqrt(u_xlat62);\n    u_xlat9.x = float(1.0) / u_xlat9.x;\n   
            u_xlat9.x = u_xlat9.x * 0.5;\n    u_xlat16_25.x = (u_xlatb65) ? 0.0 :
            u_xlat9.x;\n    u_xlat9.xyz = vec3(u_xlat62) * u_xlat8.xyz;\n    u_xlat16_44
            = dot(u_xlat4.xyz, u_xlat9.xyz);\n    u_xlat16_44 = max(u_xlat16_44,
            0.0);\n    u_xlat16_7.xyz = vec3(u_xlat16_44) * _Color.xyz;\n    u_xlatb65
            = 0.0<u_xlat16_44;\n    u_xlat16_7.xyz = u_xlat16_7.xyz * unity_LightColor[2].xyz;\n   
            u_xlat16_7.xyz = u_xlat16_25.xxx * u_xlat16_7.xyz;\n    u_xlat16_7.xyz
            = min(u_xlat16_7.xyz, vec3(1.0, 1.0, 1.0));\n    u_xlat16_7.xyz = u_xlat16_22.xyz
            + u_xlat16_7.xyz;\n    u_xlatb9 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb9 = u_xlatb43 && u_xlatb9;\n    u_xlat16_22.xyz = (bool(u_xlatb9))
            ? u_xlat16_7.xyz : u_xlat16_22.xyz;\n    u_xlat28.xyz = (-u_xlat19.xyz)
            * unity_LightPosition[3].www + unity_LightPosition[3].xyz;\n    u_xlat10
            = dot(u_xlat28.xyz, u_xlat28.xyz);\n    u_xlatb29 = unity_LightAtten[3].w<u_xlat10;\n   
            u_xlatb48 = unity_LightPosition[3].w!=0.0;\n    u_xlatb29 = u_xlatb29
            && u_xlatb48;\n    u_xlat48 = unity_LightAtten[3].z * u_xlat10 + 1.0;\n   
            u_xlat10 = max(u_xlat10, 9.99999997e-07);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat48 = float(1.0) / u_xlat48;\n    u_xlat48 = u_xlat48 * 0.5;\n   
            u_xlat16_44 = (u_xlatb29) ? 0.0 : u_xlat48;\n    u_xlat29.xyz = u_xlat28.xyz
            * vec3(u_xlat10);\n    u_xlat16_63 = dot(u_xlat4.xyz, u_xlat29.xyz);\n   
            u_xlat16_63 = max(u_xlat16_63, 0.0);\n    u_xlat16_7.xyz = vec3(u_xlat16_63)
            * _Color.xyz;\n    u_xlatb29 = 0.0<u_xlat16_63;\n    u_xlat16_7.xyz =
            u_xlat16_7.xyz * unity_LightColor[3].xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_44)
            * u_xlat16_7.xyz;\n    u_xlat16_7.xyz = min(u_xlat16_7.xyz, vec3(1.0,
            1.0, 1.0));\n    u_xlat16_7.xyz = u_xlat16_22.xyz + u_xlat16_7.xyz;\n   
            u_xlati24 = (u_xlatb9) ? 3 : u_xlati24;\n    u_xlatb48 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb48 = u_xlatb9 && u_xlatb48;\n    u_xlat16_22.xyz = (bool(u_xlatb48))
            ? u_xlat16_7.xyz : u_xlat16_22.xyz;\n    u_xlat11.xyz = (-u_xlat19.xyz)
            * unity_LightPosition[4].www + unity_LightPosition[4].xyz;\n    u_xlat67
            = dot(u_xlat11.xyz, u_xlat11.xyz);\n    u_xlatb68 = unity_LightAtten[4].w<u_xlat67;\n   
            u_xlatb12 = unity_LightPosition[4].w!=0.0;\n    u_xlatb68 = u_xlatb68
            && u_xlatb12;\n    u_xlat12.x = unity_LightAtten[4].z * u_xlat67 + 1.0;\n   
            u_xlat67 = max(u_xlat67, 9.99999997e-07);\n    u_xlat67 = inversesqrt(u_xlat67);\n   
            u_xlat12.x = float(1.0) / u_xlat12.x;\n    u_xlat12.x = u_xlat12.x *
            0.5;\n    u_xlat16_63 = (u_xlatb68) ? 0.0 : u_xlat12.x;\n    u_xlat12.xyz
            = vec3(u_xlat67) * u_xlat11.xyz;\n    u_xlat16_7.x = dot(u_xlat4.xyz,
            u_xlat12.xyz);\n    u_xlat16_7.x = max(u_xlat16_7.x, 0.0);\n    u_xlat16_26.xyz
            = u_xlat16_7.xxx * _Color.xyz;\n    u_xlatb68 = 0.0<u_xlat16_7.x;\n   
            u_xlat16_7.xyz = u_xlat16_26.xyz * unity_LightColor[4].xyz;\n    u_xlat16_7.xyz
            = vec3(u_xlat16_63) * u_xlat16_7.xyz;\n    u_xlat16_7.xyz = min(u_xlat16_7.xyz,
            vec3(1.0, 1.0, 1.0));\n    u_xlat16_7.xyz = u_xlat16_22.xyz + u_xlat16_7.xyz;\n   
            u_xlati24 = (u_xlatb48) ? 4 : u_xlati24;\n    u_xlatb12 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb12 = u_xlatb48 && u_xlatb12;\n    u_xlat16_22.xyz = (bool(u_xlatb12))
            ? u_xlat16_7.xyz : u_xlat16_22.xyz;\n    u_xlat31.xyz = (-u_xlat19.xyz)
            * unity_LightPosition[5].www + unity_LightPosition[5].xyz;\n    u_xlat13
            = dot(u_xlat31.xyz, u_xlat31.xyz);\n    u_xlatb32 = unity_LightAtten[5].w<u_xlat13;\n   
            u_xlatb51 = unity_LightPosition[5].w!=0.0;\n    u_xlatb32 = u_xlatb32
            && u_xlatb51;\n    u_xlat51 = unity_LightAtten[5].z * u_xlat13 + 1.0;\n   
            u_xlat13 = max(u_xlat13, 9.99999997e-07);\n    u_xlat13 = inversesqrt(u_xlat13);\n   
            u_xlat51 = float(1.0) / u_xlat51;\n    u_xlat51 = u_xlat51 * 0.5;\n   
            u_xlat16_7.x = (u_xlatb32) ? 0.0 : u_xlat51;\n    u_xlat32.xyz = u_xlat31.xyz
            * vec3(u_xlat13);\n    u_xlat16_26.x = dot(u_xlat4.xyz, u_xlat32.xyz);\n   
            u_xlat16_26.x = max(u_xlat16_26.x, 0.0);\n    u_xlat16_14.xyz = u_xlat16_26.xxx
            * _Color.xyz;\n    u_xlatb32 = 0.0<u_xlat16_26.x;\n    u_xlat16_26.xyz
            = u_xlat16_14.xyz * unity_LightColor[5].xyz;\n    u_xlat16_26.xyz = u_xlat16_7.xxx
            * u_xlat16_26.xyz;\n    u_xlat16_26.xyz = min(u_xlat16_26.xyz, vec3(1.0,
            1.0, 1.0));\n    u_xlat16_26.xyz = u_xlat16_22.xyz + u_xlat16_26.xyz;\n   
            u_xlati24 = (u_xlatb12) ? 5 : u_xlati24;\n    u_xlatb51 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb51 = u_xlatb12 && u_xlatb51;\n    u_xlat16_22.xyz = (bool(u_xlatb51))
            ? u_xlat16_26.xyz : u_xlat16_22.xyz;\n    u_xlat15.xyz = (-u_xlat19.xyz)
            * unity_LightPosition[6].www + unity_LightPosition[6].xyz;\n    u_xlat70
            = dot(u_xlat15.xyz, u_xlat15.xyz);\n    u_xlatb72 = unity_LightAtten[6].w<u_xlat70;\n   
            u_xlatb16 = unity_LightPosition[6].w!=0.0;\n    u_xlatb72 = u_xlatb72
            && u_xlatb16;\n    u_xlat16.x = unity_LightAtten[6].z * u_xlat70 + 1.0;\n   
            u_xlat70 = max(u_xlat70, 9.99999997e-07);\n    u_xlat70 = inversesqrt(u_xlat70);\n   
            u_xlat16.x = float(1.0) / u_xlat16.x;\n    u_xlat16.x = u_xlat16.x *
            0.5;\n    u_xlat16_26.x = (u_xlatb72) ? 0.0 : u_xlat16.x;\n    u_xlat16.xyz
            = vec3(u_xlat70) * u_xlat15.xyz;\n    u_xlat16_45 = dot(u_xlat4.xyz,
            u_xlat16.xyz);\n    u_xlat16_45 = max(u_xlat16_45, 0.0);\n    u_xlat16_14.xyz
            = vec3(u_xlat16_45) * _Color.xyz;\n    u_xlatb72 = 0.0<u_xlat16_45;\n   
            u_xlat16_14.xyz = u_xlat16_14.xyz * unity_LightColor[6].xyz;\n    u_xlat16_14.xyz
            = u_xlat16_26.xxx * u_xlat16_14.xyz;\n    u_xlat16_14.xyz = min(u_xlat16_14.xyz,
            vec3(1.0, 1.0, 1.0));\n    u_xlat16_14.xyz = u_xlat16_22.xyz + u_xlat16_14.xyz;\n   
            u_xlati24 = (u_xlatb51) ? 6 : u_xlati24;\n    u_xlatb16 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb16 = u_xlatb51 && u_xlatb16;\n    u_xlat16_22.xyz = (bool(u_xlatb16))
            ? u_xlat16_14.xyz : u_xlat16_22.xyz;\n    u_xlat35.xyz = (-u_xlat19.xyz)
            * unity_LightPosition[7].www + unity_LightPosition[7].xyz;\n    u_xlat17
            = dot(u_xlat35.xyz, u_xlat35.xyz);\n    u_xlatb36 = unity_LightAtten[7].w<u_xlat17;\n   
            u_xlatb55 = unity_LightPosition[7].w!=0.0;\n    u_xlatb36 = u_xlatb36
            && u_xlatb55;\n    u_xlat55 = unity_LightAtten[7].z * u_xlat17 + 1.0;\n   
            u_xlat17 = max(u_xlat17, 9.99999997e-07);\n    u_xlat17 = inversesqrt(u_xlat17);\n   
            u_xlat55 = float(1.0) / u_xlat55;\n    u_xlat55 = u_xlat55 * 0.5;\n   
            u_xlat16_45 = (u_xlatb36) ? 0.0 : u_xlat55;\n    u_xlat36.xyz = u_xlat35.xyz
            * vec3(u_xlat17);\n    u_xlat16_64 = dot(u_xlat4.xyz, u_xlat36.xyz);\n   
            u_xlat16_64 = max(u_xlat16_64, 0.0);\n    u_xlat16_14.xyz = vec3(u_xlat16_64)
            * _Color.xyz;\n    u_xlatb36 = 0.0<u_xlat16_64;\n    u_xlat16_14.xyz
            = u_xlat16_14.xyz * unity_LightColor[7].xyz;\n    u_xlat16_14.xyz = vec3(u_xlat16_45)
            * u_xlat16_14.xyz;\n    u_xlat16_14.xyz = min(u_xlat16_14.xyz, vec3(1.0,
            1.0, 1.0));\n    u_xlat16_14.xyz = u_xlat16_22.xyz + u_xlat16_14.xyz;\n   
            u_xlati24 = (u_xlatb16) ? 7 : u_xlati24;\n    u_xlatb24 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb24 = u_xlatb24 && u_xlatb16;\n    vs_COLOR0.xyz = (bool(u_xlatb24))
            ? u_xlat16_14.xyz : u_xlat16_22.xyz;\n    vs_COLOR0.xyz = clamp(vs_COLOR0.xyz,
            0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n    vs_COLOR0.w = clamp(vs_COLOR0.w,
            0.0, 1.0);\n    u_xlat55 = dot(u_xlat19.xyz, u_xlat19.xyz);\n    u_xlat55
            = inversesqrt(u_xlat55);\n    u_xlat19.xyz = u_xlat19.xyz * vec3(u_xlat55);\n   
            u_xlat16_22.xyz = u_xlat21.xyz * vec3(u_xlat61) + (-u_xlat19.xyz);\n   
            u_xlat16_64 = dot(u_xlat16_22.xyz, u_xlat16_22.xyz);\n    u_xlat16_64
            = inversesqrt(u_xlat16_64);\n    u_xlat16_22.xyz = u_xlat16_22.xyz *
            vec3(u_xlat16_64);\n    u_xlat16_22.x = dot(u_xlat4.xyz, u_xlat16_22.xyz);\n   
            u_xlat16_22.x = max(u_xlat16_22.x, 0.0);\n    u_xlat16_22.x = log2(u_xlat16_22.x);\n   
            u_xlat16_41 = _Shininess * 128.0;\n    u_xlat16_22.x = u_xlat16_22.x
            * u_xlat16_41;\n    u_xlat16_22.x = exp2(u_xlat16_22.x);\n    u_xlat16_22.x
            = min(u_xlat16_22.x, 1.0);\n    u_xlat16_22.x = u_xlat16_22.x * u_xlat16_6.x;\n   
            u_xlat16_14.xyz = u_xlat16_22.xxx * unity_LightColor[0].xyz;\n    u_xlat16_14.xyz
            = (bool(u_xlatb2)) ? u_xlat16_14.xyz : vec3(0.0, 0.0, 0.0);\n    u_xlat16_14.xyz
            = (bool(u_xlatb5)) ? u_xlat16_14.xyz : vec3(0.0, 0.0, 0.0);\n    u_xlat16_18.xyz
            = u_xlat1.xyz * vec3(u_xlat58) + (-u_xlat19.xyz);\n    u_xlat16_22.x
            = dot(u_xlat16_18.xyz, u_xlat16_18.xyz);\n    u_xlat16_22.x = inversesqrt(u_xlat16_22.x);\n   
            u_xlat16_18.xyz = u_xlat16_22.xxx * u_xlat16_18.xyz;\n    u_xlat16_22.x
            = dot(u_xlat4.xyz, u_xlat16_18.xyz);\n    u_xlat16_22.x = max(u_xlat16_22.x,
            0.0);\n    u_xlat16_22.x = log2(u_xlat16_22.x);\n    u_xlat16_22.x =
            u_xlat16_22.x * u_xlat16_41;\n    u_xlat16_22.x = exp2(u_xlat16_22.x);\n   
            u_xlat16_22.x = min(u_xlat16_22.x, 1.0);\n    u_xlat16_3.x = u_xlat16_22.x
            * u_xlat16_3.x;\n    u_xlat16_3.xyw = u_xlat16_3.xxx * unity_LightColor[1].xyz
            + u_xlat16_14.xyz;\n    u_xlat16_3.xyw = (bool(u_xlatb0)) ? u_xlat16_3.xyw
            : u_xlat16_14.xyz;\n    u_xlat16_3.xyw = (bool(u_xlatb43)) ? u_xlat16_3.xyw
            : u_xlat16_14.xyz;\n    u_xlat16_14.xyz = u_xlat8.xyz * vec3(u_xlat62)
            + (-u_xlat19.xyz);\n    u_xlat16_6.x = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n   
            u_xlat16_6.x = inversesqrt(u_xlat16_6.x);\n    u_xlat16_14.xyz = u_xlat16_6.xxx
            * u_xlat16_14.xyz;\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_14.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_6.x = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_6.x = exp2(u_xlat16_6.x);\n   
            u_xlat16_6.x = min(u_xlat16_6.x, 1.0);\n    u_xlat16_6.x = u_xlat16_6.x
            * u_xlat16_25.x;\n    u_xlat16_14.xyz = u_xlat16_6.xxx * unity_LightColor[2].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_14.xyz = (bool(u_xlatb65)) ? u_xlat16_14.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyw = (bool(u_xlatb9)) ? u_xlat16_14.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_14.xyz = u_xlat28.xyz * vec3(u_xlat10)
            + (-u_xlat19.xyz);\n    u_xlat16_6.x = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n   
            u_xlat16_6.x = inversesqrt(u_xlat16_6.x);\n    u_xlat16_14.xyz = u_xlat16_6.xxx
            * u_xlat16_14.xyz;\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_14.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_6.x = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_6.x = exp2(u_xlat16_6.x);\n   
            u_xlat16_6.x = min(u_xlat16_6.x, 1.0);\n    u_xlat16_6.x = u_xlat16_6.x
            * u_xlat16_44;\n    u_xlat16_6.xyz = u_xlat16_6.xxx * unity_LightColor[3].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_6.xyz = (bool(u_xlatb29)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyw = (bool(u_xlatb48)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_6.xyz = u_xlat11.xyz * vec3(u_xlat67)
            + (-u_xlat19.xyz);\n    u_xlat16_64 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_64 = inversesqrt(u_xlat16_64);\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            * vec3(u_xlat16_64);\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_6.x = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_6.x = exp2(u_xlat16_6.x);\n   
            u_xlat16_6.x = min(u_xlat16_6.x, 1.0);\n    u_xlat16_6.x = u_xlat16_6.x
            * u_xlat16_63;\n    u_xlat16_6.xyz = u_xlat16_6.xxx * unity_LightColor[4].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_6.xyz = (bool(u_xlatb68)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyw = (bool(u_xlatb12)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_6.xyz = u_xlat31.xyz * vec3(u_xlat13)
            + (-u_xlat19.xyz);\n    u_xlat16_63 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_63 = inversesqrt(u_xlat16_63);\n    u_xlat16_6.xyz = vec3(u_xlat16_63)
            * u_xlat16_6.xyz;\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_6.x = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_6.x = exp2(u_xlat16_6.x);\n   
            u_xlat16_6.x = min(u_xlat16_6.x, 1.0);\n    u_xlat16_6.x = u_xlat16_6.x
            * u_xlat16_7.x;\n    u_xlat16_6.xyz = u_xlat16_6.xxx * unity_LightColor[5].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_6.xyz = (bool(u_xlatb32)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyw = (bool(u_xlatb51)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_6.xyz = u_xlat15.xyz * vec3(u_xlat70)
            + (-u_xlat19.xyz);\n    u_xlat16_14.xyz = u_xlat35.xyz * vec3(u_xlat17)
            + (-u_xlat19.xyz);\n    u_xlat16_63 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_63 = inversesqrt(u_xlat16_63);\n    u_xlat16_6.xyz = vec3(u_xlat16_63)
            * u_xlat16_6.xyz;\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_6.x = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_6.x = exp2(u_xlat16_6.x);\n   
            u_xlat16_6.x = min(u_xlat16_6.x, 1.0);\n    u_xlat16_6.x = u_xlat16_6.x
            * u_xlat16_26.x;\n    u_xlat16_6.xyz = u_xlat16_6.xxx * unity_LightColor[6].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_6.xyz = (bool(u_xlatb72)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyw = (bool(u_xlatb16)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_6.x = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n   
            u_xlat16_6.x = inversesqrt(u_xlat16_6.x);\n    u_xlat16_6.xyz = u_xlat16_6.xxx
            * u_xlat16_14.xyz;\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_41 = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_41 = exp2(u_xlat16_41);\n   
            u_xlat16_41 = min(u_xlat16_41, 1.0);\n    u_xlat16_41 = u_xlat16_41 *
            u_xlat16_45;\n    u_xlat16_6.xyz = vec3(u_xlat16_41) * unity_LightColor[7].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_6.xyz = (bool(u_xlatb36)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyz = (bool(u_xlatb24)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    vs_COLOR1.xyz = u_xlat16_3.xyz * _SpecColor.xyz;\n   
            vs_COLOR1.xyz = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump float _Cutoff;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin mediump
            vec3 vs_COLOR1;\nin highp vec2 vs_TEXCOORD0;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb1;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_0 = u_xlat16_0 * vs_COLOR0;\n    u_xlatb1 = _Cutoff>=u_xlat16_0.w;\n   
            if(u_xlatb1){discard;}\n    SV_Target0.xyz = u_xlat16_0.xyz * vec3(2.0,
            2.0, 2.0) + vs_COLOR1.xyz;\n    SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: Vertex
          - Key: QUEUE
            Value: AlphaTest
          - Key: RenderType
            Value: TransparentCutout
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _
        KeywordGroups:
        - Keywords:
          - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - POINT
          - SPOT
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 9
          shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: Vertex
        - Key: QUEUE
          Value: AlphaTest
        - Key: RenderType
          Value: TransparentCutout
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 unity_LightmapST;\nuniform
            \tvec4 unity_Lightmap_ST;\nuniform \tvec4 _MainTex_ST;\nattribute highp
            vec3 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp
            vec3 in_TEXCOORD1;\nattribute highp vec3 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    vs_COLOR0 = in_COLOR0;\n    vs_COLOR0 =
            clamp(vs_COLOR0, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD1.xy *
            unity_LightmapST.xy + unity_LightmapST.zw;\n    vs_TEXCOORD1.xy = in_TEXCOORD1.xy
            * unity_Lightmap_ST.xy + unity_Lightmap_ST.zw;\n    vs_TEXCOORD2.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 unity_Lightmap_HDR;\nuniform \tmediump
            vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform lowp sampler2D
            _MainTex;\nuniform mediump sampler2D unity_Lightmap;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nlowp vec4 u_xlat10_0;\nmediump
            vec4 u_xlat16_1;\nbool u_xlatb2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD2.xy);\n    u_xlat16_1.x
            = u_xlat10_0.w * vs_COLOR0.w + (-_Cutoff);\n    u_xlatb2 = u_xlat16_1.x<0.0;\n   
            if(u_xlatb2){discard;}\n    u_xlat16_1 = texture2D(unity_Lightmap, vs_TEXCOORD0.xy);\n   
            u_xlat16_3.x = u_xlat16_1.w * unity_Lightmap_HDR.x;\n    u_xlat16_3.xyz
            = u_xlat16_1.xyz * u_xlat16_3.xxx;\n    u_xlat16_3.xyz = u_xlat16_3.xyz
            * _Color.xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * u_xlat16_3.xyz;\n   
            u_xlat16_3.x = u_xlat10_0.w * vs_COLOR0.w;\n    SV_Target0.w = u_xlat16_3.x;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: VertexLM
          - Key: QUEUE
            Value: AlphaTest
          - Key: RenderType
            Value: TransparentCutout
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 unity_LightmapST;\nuniform \tvec4 unity_Lightmap_ST;\nuniform
            \tvec4 _MainTex_ST;\nin highp vec3 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec3 in_TEXCOORD1;\nin highp vec3 in_TEXCOORD0;\nout mediump vec4
            vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec2 vs_TEXCOORD1;\nout
            highp vec2 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            vs_COLOR0 = in_COLOR0;\n    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);\n   
            vs_TEXCOORD0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;\n   
            vs_TEXCOORD1.xy = in_TEXCOORD1.xy * unity_Lightmap_ST.xy + unity_Lightmap_ST.zw;\n   
            vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 unity_Lightmap_HDR;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D unity_Lightmap;\nin mediump vec4 vs_COLOR0;\nin highp vec2
            vs_TEXCOORD0;\nin highp vec2 vs_TEXCOORD2;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nbool
            u_xlatb2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n    u_xlat16_0 =
            texture(_MainTex, vs_TEXCOORD2.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * vs_COLOR0.w + (-_Cutoff);\n    u_xlatb2 = u_xlat16_1.x<0.0;\n    if(u_xlatb2){discard;}\n   
            u_xlat16_1 = texture(unity_Lightmap, vs_TEXCOORD0.xy);\n    u_xlat16_3.x
            = u_xlat16_1.w * unity_Lightmap_HDR.x;\n    u_xlat16_3.xyz = u_xlat16_1.xyz
            * u_xlat16_3.xxx;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * _Color.xyz;\n   
            SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;\n    u_xlat16_3.x =
            u_xlat16_0.w * vs_COLOR0.w;\n    SV_Target0.w = u_xlat16_3.x;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: VertexLM
          - Key: QUEUE
            Value: AlphaTest
          - Key: RenderType
            Value: TransparentCutout
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
          passType: 2
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
          passType: 2
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: VertexLM
        - Key: QUEUE
          Value: AlphaTest
        - Key: RenderType
          Value: TransparentCutout
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords:
        - INSTANCING_ON
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SHADOWS_CUBE
          hasDiscard: 0
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: QUEUE
          Value: AlphaTest
        - Key: RenderType
          Value: TransparentCutout
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: QUEUE
        Value: AlphaTest
      - Key: RenderType
        Value: TransparentCutout
    Shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - POINT
    - SPOT
    - SHADOWS_DEPTH
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - __
    - INSTANCING_ON
    - SHADOWS_CUBE
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 9
      shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 5
      shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
      passType: 2
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 50, guid: 0000000000000000f000000000000000, type: 0}
      passType: 2
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D
            _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nmediump float u_xlat16_0;\nvec4 u_xlat1;\nlowp
            vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvoid main()\n{\n    u_xlat16_0
            = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_0 =
            max(u_xlat16_0, 0.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1 = u_xlat10_1 * _Color;\n    u_xlat16_2.xyz = u_xlat1.xyz * _LightColor0.xyz;\n   
            SV_Target0.w = u_xlat1.w;\n    SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_2.xyz;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            float u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3
            u_xlat16_2;\nvoid main()\n{\n    u_xlat16_0 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_0 = max(u_xlat16_0, 0.0);\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1 * _Color;\n    u_xlat16_2.xyz
            = u_xlat1.xyz * _LightColor0.xyz;\n    SV_Target0.w = u_xlat1.w;\n   
            SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_2.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute
            highp vec4 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp
            vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying mediump
            vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD3.xyz
            = u_xlat0.xyz;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D
            _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying
            mediump vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nmediump
            float u_xlat16_0;\nvec4 u_xlat1;\nlowp vec4 u_xlat10_1;\nmediump vec3
            u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n    u_xlat16_0
            = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_0 =
            max(u_xlat16_0, 0.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1 = u_xlat10_1 * _Color;\n    u_xlat16_3.xyz = u_xlat1.xyz * _LightColor0.xyz;\n   
            u_xlat16_2.xyz = u_xlat1.xyz * vs_TEXCOORD3.xyz;\n    SV_Target0.w =
            u_xlat1.w;\n    SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_0) +
            u_xlat16_2.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            highp vec4 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www
            + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n   
            gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD3.xyz
            = u_xlat0.xyz;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nin mediump vec3 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump float u_xlat16_0;\nvec4 u_xlat1;\nmediump
            vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvoid
            main()\n{\n    u_xlat16_0 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_0 = max(u_xlat16_0, 0.0);\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1 * _Color;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * _LightColor0.xyz;\n    u_xlat16_2.xyz = u_xlat1.xyz *
            vs_TEXCOORD3.xyz;\n    SV_Target0.w = u_xlat1.w;\n    SV_Target0.xyz
            = u_xlat16_3.xyz * vec3(u_xlat16_0) + u_xlat16_2.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying
            mediump vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump
            vec4 u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www
            + u_xlat0.xyz;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n   
            u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n   
            u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n   
            gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n   
            u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat0 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat2 = u_xlat0 *
            u_xlat1.zzzz + u_xlat2;\n    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;\n   
            u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07,
            9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat0);\n    u_xlat0 =
            u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat0
            = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;\n    u_xlat2 = u_xlat2 * u_xlat3;\n   
            u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat0
            * u_xlat2;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD3.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D
            _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying
            mediump vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nmediump
            float u_xlat16_0;\nvec4 u_xlat1;\nlowp vec4 u_xlat10_1;\nmediump vec3
            u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n    u_xlat16_0
            = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_0 =
            max(u_xlat16_0, 0.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1 = u_xlat10_1 * _Color;\n    u_xlat16_3.xyz = u_xlat1.xyz * _LightColor0.xyz;\n   
            u_xlat16_2.xyz = u_xlat1.xyz * vs_TEXCOORD3.xyz;\n    SV_Target0.w =
            u_xlat1.w;\n    SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_0) +
            u_xlat16_2.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4
            u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n   
            u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat0 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat2 = u_xlat0 *
            u_xlat1.zzzz + u_xlat2;\n    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;\n   
            u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07,
            9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat0);\n    u_xlat0 =
            u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat0
            = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;\n    u_xlat2 = u_xlat2 * u_xlat3;\n   
            u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat0
            * u_xlat2;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD3.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nin mediump vec3 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump float u_xlat16_0;\nvec4 u_xlat1;\nmediump
            vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvoid
            main()\n{\n    u_xlat16_0 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_0 = max(u_xlat16_0, 0.0);\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1 * _Color;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * _LightColor0.xyz;\n    u_xlat16_2.xyz = u_xlat1.xyz *
            vs_TEXCOORD3.xyz;\n    SV_Target0.w = u_xlat1.w;\n    SV_Target0.xyz
            = u_xlat16_3.xyz * vec3(u_xlat16_0) + u_xlat16_2.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - VERTEXLIGHT_ON
          hasDiscard: 0
        KeywordsMinimalCardinality: 19
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 5
          shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform \tvec4 _MainTex_ST;\nattribute
            highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute
            highp vec4 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp
            vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3
            vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat10;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4
            _LightColor0;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform
            \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform highp
            sampler2D _LightTexture0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying
            highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0.xyz = (-vs_TEXCOORD2.xyz)
            + _WorldSpaceLightPos0.xyz;\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat6 = inversesqrt(u_xlat6);\n    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n   
            u_xlat16_1 = dot(vs_TEXCOORD1.xyz, u_xlat0.xyz);\n    u_xlat16_1 = max(u_xlat16_1,
            0.0);\n    u_xlat0.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD2.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat0.x = texture2D(_LightTexture0,
            u_xlat0.xx).x;\n    u_xlat16_3.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0
            * _Color;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat0.xyz;\n    SV_Target0.w
            = u_xlat0.w;\n    SV_Target0.xyz = vec3(u_xlat16_1) * u_xlat16_3.xyz;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform
            \tvec4 _MainTex_ST;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            highp vec4 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec3
            vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform
            \tmediump vec4 _Color;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform highp sampler2D _LightTexture0;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            float u_xlat16_1;\nmediump vec3 u_xlat16_3;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;\n    u_xlat6
            = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    u_xlat16_1 = dot(vs_TEXCOORD1.xyz,
            u_xlat0.xyz);\n    u_xlat16_1 = max(u_xlat16_1, 0.0);\n    u_xlat0.xyz
            = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx + u_xlat0.xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD2.zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat0.x = texture(_LightTexture0,
            u_xlat0.xx).x;\n    u_xlat16_3.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat16_0
            * _Color;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat0.xyz;\n    SV_Target0.w
            = u_xlat0.w;\n    SV_Target0.xyz = vec3(u_xlat16_1) * u_xlat16_3.xyz;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp
            vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D
            _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\n#define
            SV_Target0 gl_FragData[0]\nmediump float u_xlat16_0;\nvec4 u_xlat1;\nlowp
            vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvoid main()\n{\n    u_xlat16_0
            = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_0 =
            max(u_xlat16_0, 0.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1 = u_xlat10_1 * _Color;\n    u_xlat16_2.xyz = u_xlat1.xyz * _LightColor0.xyz;\n   
            SV_Target0.w = u_xlat1.w;\n    SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_2.xyz;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nin
            highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout
            highp vec2 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3
            vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n   
            u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.x =
            dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec3 vs_TEXCOORD1;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            float u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3
            u_xlat16_2;\nvoid main()\n{\n    u_xlat16_0 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat16_0 = max(u_xlat16_0, 0.0);\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1 * _Color;\n    u_xlat16_2.xyz
            = u_xlat1.xyz * _LightColor0.xyz;\n    SV_Target0.w = u_xlat1.w;\n   
            SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_2.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - POINT_COOKIE
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - POINT
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - SPOT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          hasDiscard: 0
        KeywordsMinimalCardinality: 5
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 9
          shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 5
          shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - VERTEXLIGHT_ON
    - DIRECTIONAL_COOKIE
    - POINT
    - POINT_COOKIE
    - SPOT
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - __
    fallbackShader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 9
      shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 5
      shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 30, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tvec4 unity_LightPosition[8];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tmediump vec4 glstate_lightmodel_ambient;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Emission;\nuniform
            \tmediump float _Shininess;\nuniform \tvec4 _MainTex_ST;\nattribute highp
            vec3 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute highp
            vec3 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec3 vs_COLOR1;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nvec3
            u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump
            vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nfloat
            u_xlat36;\nint u_xlati37;\nmediump float u_xlat16_43;\nmediump float
            u_xlat16_44;\nvoid main()\n{\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].www + u_xlat0.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[1].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].www
            + u_xlat1.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].zzz
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].www + u_xlat2.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].zzz + u_xlat3.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].www
            + u_xlat3.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat4.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www
            + u_xlat5.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat6.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz
            + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat6.xyz;\n    u_xlat1.xyz
            = u_xlat1.xyz * in_POSITION0.yyy;\n    u_xlat0.xyz = u_xlat0.xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * in_POSITION0.zzz + u_xlat0.xyz;\n   
            u_xlat0.xyz = u_xlat3.xyz + u_xlat0.xyz;\n    u_xlat1.x = dot(u_xlat4.xyz,
            in_NORMAL0.xyz);\n    u_xlat1.y = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.z = dot(u_xlat6.xyz, in_NORMAL0.xyz);\n    u_xlat36 = dot(u_xlat1.xyz,
            u_xlat1.xyz);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz
            = vec3(u_xlat36) * u_xlat1.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat16_7.xyz = _Color.xyz *
            glstate_lightmodel_ambient.xyz + _Emission.xyz;\n    u_xlat16_43 = _Shininess
            * 128.0;\n    u_xlat16_8.xyz = u_xlat16_7.xyz;\n    u_xlat16_9.x = float(0.0);\n   
            u_xlat16_9.y = float(0.0);\n    u_xlat16_9.z = float(0.0);\n    for(int
            u_xlati_loop_1 = 0 ; u_xlati_loop_1<8 ; u_xlati_loop_1++)\n    {\n       
            u_xlat16_44 = dot(u_xlat1.xyz, unity_LightPosition[u_xlati_loop_1].xyz);\n       
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n        u_xlat16_10.xyz = vec3(u_xlat16_44)
            * _Color.xyz;\n        u_xlat16_10.xyz = u_xlat16_10.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n       
            u_xlatb2 = 0.0<u_xlat16_44;\n        if(u_xlatb2){\n            u_xlat16_11.xyz
            = (-u_xlat0.xyz) * vec3(u_xlat36) + unity_LightPosition[u_xlati_loop_1].xyz;\n           
            u_xlat16_44 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n            u_xlat16_44
            = inversesqrt(u_xlat16_44);\n            u_xlat16_11.xyz = vec3(u_xlat16_44)
            * u_xlat16_11.xyz;\n            u_xlat16_44 = dot(u_xlat1.xyz, u_xlat16_11.xyz);\n           
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n            u_xlat16_44 = log2(u_xlat16_44);\n           
            u_xlat16_44 = u_xlat16_43 * u_xlat16_44;\n            u_xlat16_44 = exp2(u_xlat16_44);\n           
            u_xlat16_44 = min(u_xlat16_44, 1.0);\n            u_xlat16_44 = u_xlat16_44
            * 0.5;\n            u_xlat16_9.xyz = vec3(u_xlat16_44) * unity_LightColor[u_xlati_loop_1].xyz
            + u_xlat16_9.xyz;\n        }\n        u_xlat16_10.xyz = u_xlat16_10.xyz
            * vec3(0.5, 0.5, 0.5);\n        u_xlat16_10.xyz = min(u_xlat16_10.xyz,
            vec3(1.0, 1.0, 1.0));\n        u_xlat16_8.xyz = u_xlat16_8.xyz + u_xlat16_10.xyz;\n   
            }\n    vs_COLOR1.xyz = u_xlat16_9.xyz * _SpecColor.xyz;\n    vs_COLOR1.xyz
            = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_COLOR0.xyz = u_xlat16_8.xyz;\n   
            vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n   
            vs_COLOR0.w = clamp(vs_COLOR0.w, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy *
            hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec3 vs_COLOR1;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0
            gl_FragData[0]\nlowp vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.xyz = u_xlat10_0.xyz * vs_COLOR0.xyz;\n    SV_Target0.w =
            u_xlat10_0.w * vs_COLOR0.w;\n    SV_Target0.xyz = u_xlat16_1.xyz * vec3(2.0,
            2.0, 2.0) + vs_COLOR1.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: Vertex
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tvec4 unity_LightPosition[8];\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 glstate_lightmodel_ambient;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump vec4 _SpecColor;\nuniform \tmediump
            vec4 _Emission;\nuniform \tmediump float _Shininess;\nuniform \tivec4
            unity_VertexLightParams;\nuniform \tvec4 _MainTex_ST;\nin highp vec3
            in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec3 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec3 vs_COLOR1;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3
            u_xlat3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat36;\nint u_xlati37;\nmediump float u_xlat16_43;\nmediump
            float u_xlat16_44;\nvoid main()\n{\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].www + u_xlat0.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[1].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].www
            + u_xlat1.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].zzz
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].www + u_xlat2.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].zzz + u_xlat3.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].www
            + u_xlat3.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat4.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www
            + u_xlat5.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat6.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz
            + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat6.xyz;\n    u_xlat1.xyz
            = u_xlat1.xyz * in_POSITION0.yyy;\n    u_xlat0.xyz = u_xlat0.xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * in_POSITION0.zzz + u_xlat0.xyz;\n   
            u_xlat0.xyz = u_xlat3.xyz + u_xlat0.xyz;\n    u_xlat1.x = dot(u_xlat4.xyz,
            in_NORMAL0.xyz);\n    u_xlat1.y = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.z = dot(u_xlat6.xyz, in_NORMAL0.xyz);\n    u_xlat36 = dot(u_xlat1.xyz,
            u_xlat1.xyz);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz
            = vec3(u_xlat36) * u_xlat1.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat16_7.xyz = _Color.xyz *
            glstate_lightmodel_ambient.xyz + _Emission.xyz;\n    u_xlat16_43 = _Shininess
            * 128.0;\n    u_xlat16_8.xyz = u_xlat16_7.xyz;\n    u_xlat16_9.x = float(0.0);\n   
            u_xlat16_9.y = float(0.0);\n    u_xlat16_9.z = float(0.0);\n    for(int
            u_xlati_loop_1 = 0 ; u_xlati_loop_1<unity_VertexLightParams.x ; u_xlati_loop_1++)\n   
            {\n        u_xlat16_44 = dot(u_xlat1.xyz, unity_LightPosition[u_xlati_loop_1].xyz);\n       
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n        u_xlat16_10.xyz = vec3(u_xlat16_44)
            * _Color.xyz;\n        u_xlat16_10.xyz = u_xlat16_10.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n       
            u_xlatb2 = 0.0<u_xlat16_44;\n        if(u_xlatb2){\n            u_xlat16_11.xyz
            = (-u_xlat0.xyz) * vec3(u_xlat36) + unity_LightPosition[u_xlati_loop_1].xyz;\n           
            u_xlat16_44 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n            u_xlat16_44
            = inversesqrt(u_xlat16_44);\n            u_xlat16_11.xyz = vec3(u_xlat16_44)
            * u_xlat16_11.xyz;\n            u_xlat16_44 = dot(u_xlat1.xyz, u_xlat16_11.xyz);\n           
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n            u_xlat16_44 = log2(u_xlat16_44);\n           
            u_xlat16_44 = u_xlat16_43 * u_xlat16_44;\n            u_xlat16_44 = exp2(u_xlat16_44);\n           
            u_xlat16_44 = min(u_xlat16_44, 1.0);\n            u_xlat16_44 = u_xlat16_44
            * 0.5;\n            u_xlat16_9.xyz = vec3(u_xlat16_44) * unity_LightColor[u_xlati_loop_1].xyz
            + u_xlat16_9.xyz;\n        }\n        u_xlat16_10.xyz = u_xlat16_10.xyz
            * vec3(0.5, 0.5, 0.5);\n        u_xlat16_10.xyz = min(u_xlat16_10.xyz,
            vec3(1.0, 1.0, 1.0));\n        u_xlat16_8.xyz = u_xlat16_8.xyz + u_xlat16_10.xyz;\n   
            }\n    vs_COLOR1.xyz = u_xlat16_9.xyz * _SpecColor.xyz;\n    vs_COLOR1.xyz
            = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_COLOR0.xyz = u_xlat16_8.xyz;\n   
            vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n   
            vs_COLOR0.w = clamp(vs_COLOR0.w, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy *
            hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec3 vs_COLOR1;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vs_COLOR0.xyz;\n   
            SV_Target0.w = u_xlat16_0.w * vs_COLOR0.w;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * vec3(2.0, 2.0, 2.0) + vs_COLOR1.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: Vertex
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tvec4 unity_LightPosition[8];\nuniform \tmediump vec4 unity_LightAtten[8];\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 glstate_lightmodel_ambient;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump vec4 _SpecColor;\nuniform \tmediump
            vec4 _Emission;\nuniform \tmediump float _Shininess;\nuniform \tvec4
            _MainTex_ST;\nattribute highp vec3 in_POSITION0;\nattribute highp vec3
            in_NORMAL0;\nattribute highp vec3 in_TEXCOORD0;\nvarying mediump vec4
            vs_COLOR0;\nvarying mediump vec3 vs_COLOR1;\nvarying highp vec2 vs_TEXCOORD0;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3 u_xlat3;\nvec3
            u_xlat4;\nvec3 u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_11;\nbool u_xlatb15;\nbool u_xlatb27;\nfloat u_xlat36;\nint
            u_xlati37;\nfloat u_xlat38;\nbool u_xlatb38;\nmediump float u_xlat16_43;\nmediump
            float u_xlat16_44;\nmediump float u_xlat16_45;\nvoid main()\n{\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].zzz + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].www
            + u_xlat0.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].zzz
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[1].www + u_xlat1.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].zzz + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].www
            + u_xlat2.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx + u_xlat3.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].zzz
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].www + u_xlat3.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n   
            u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].xxx
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].zzz + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].www
            + u_xlat4.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].xxx + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].zzz
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].www + u_xlat5.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n   
            u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].xxx
            + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].zzz + u_xlat6.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].www
            + u_xlat6.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * in_POSITION0.yyy;\n   
            u_xlat0.xyz = u_xlat0.xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz
            = u_xlat2.xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat3.xyz
            + u_xlat0.xyz;\n    u_xlat1.x = dot(u_xlat4.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.y = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n    u_xlat1.z = dot(u_xlat6.xyz,
            in_NORMAL0.xyz);\n    u_xlat36 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz = vec3(u_xlat36) *
            u_xlat1.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat36
            = inversesqrt(u_xlat36);\n    u_xlat16_7.xyz = _Color.xyz * glstate_lightmodel_ambient.xyz
            + _Emission.xyz;\n    u_xlat16_43 = _Shininess * 128.0;\n    u_xlat16_8.xyz
            = u_xlat16_7.xyz;\n    u_xlat16_9.x = float(0.0);\n    u_xlat16_9.y =
            float(0.0);\n    u_xlat16_9.z = float(0.0);\n    for(int u_xlati_loop_1
            = 0 ; u_xlati_loop_1<8 ; u_xlati_loop_1++)\n    {\n        u_xlat2.xyz
            = (-u_xlat0.xyz) * unity_LightPosition[u_xlati_loop_1].www + unity_LightPosition[u_xlati_loop_1].xyz;\n       
            u_xlat38 = dot(u_xlat2.xyz, u_xlat2.xyz);\n        u_xlat3.x = unity_LightAtten[u_xlati_loop_1].z
            * u_xlat38 + 1.0;\n        u_xlat3.x = float(1.0) / u_xlat3.x;\n       
            u_xlatb15 = 0.0!=unity_LightPosition[u_xlati_loop_1].w;\n        u_xlatb27
            = unity_LightAtten[u_xlati_loop_1].w<u_xlat38;\n        u_xlatb15 = u_xlatb27
            && u_xlatb15;\n        u_xlat38 = max(u_xlat38, 9.99999997e-07);\n       
            u_xlat38 = inversesqrt(u_xlat38);\n        u_xlat2.xyz = vec3(u_xlat38)
            * u_xlat2.xyz;\n        u_xlat38 = u_xlat3.x * 0.5;\n        u_xlat16_44
            = (u_xlatb15) ? 0.0 : u_xlat38;\n        u_xlat16_45 = dot(u_xlat1.xyz,
            u_xlat2.xyz);\n        u_xlat16_45 = max(u_xlat16_45, 0.0);\n       
            u_xlat16_10.xyz = vec3(u_xlat16_45) * _Color.xyz;\n        u_xlat16_10.xyz
            = u_xlat16_10.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n        u_xlatb38
            = 0.0<u_xlat16_45;\n        if(u_xlatb38){\n            u_xlat16_11.xyz
            = (-u_xlat0.xyz) * vec3(u_xlat36) + u_xlat2.xyz;\n            u_xlat16_45
            = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n            u_xlat16_45 = inversesqrt(u_xlat16_45);\n           
            u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_11.xyz;\n            u_xlat16_45
            = dot(u_xlat1.xyz, u_xlat16_11.xyz);\n            u_xlat16_45 = max(u_xlat16_45,
            0.0);\n            u_xlat16_45 = log2(u_xlat16_45);\n            u_xlat16_45
            = u_xlat16_43 * u_xlat16_45;\n            u_xlat16_45 = exp2(u_xlat16_45);\n           
            u_xlat16_45 = min(u_xlat16_45, 1.0);\n            u_xlat16_45 = u_xlat16_44
            * u_xlat16_45;\n            u_xlat16_9.xyz = vec3(u_xlat16_45) * unity_LightColor[u_xlati_loop_1].xyz
            + u_xlat16_9.xyz;\n        }\n        u_xlat16_10.xyz = vec3(u_xlat16_44)
            * u_xlat16_10.xyz;\n        u_xlat16_10.xyz = min(u_xlat16_10.xyz, vec3(1.0,
            1.0, 1.0));\n        u_xlat16_8.xyz = u_xlat16_8.xyz + u_xlat16_10.xyz;\n   
            }\n    vs_COLOR1.xyz = u_xlat16_9.xyz * _SpecColor.xyz;\n    vs_COLOR1.xyz
            = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_COLOR0.xyz = u_xlat16_8.xyz;\n   
            vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n   
            vs_COLOR0.w = clamp(vs_COLOR0.w, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy *
            hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec3 vs_COLOR1;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0
            gl_FragData[0]\nlowp vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.xyz = u_xlat10_0.xyz * vs_COLOR0.xyz;\n    SV_Target0.w =
            u_xlat10_0.w * vs_COLOR0.w;\n    SV_Target0.xyz = u_xlat16_1.xyz * vec3(2.0,
            2.0, 2.0) + vs_COLOR1.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: Vertex
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tvec4 unity_LightPosition[8];\nuniform
            \tmediump vec4 unity_LightAtten[8];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tmediump vec4 glstate_lightmodel_ambient;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Emission;\nuniform
            \tmediump float _Shininess;\nuniform \tivec4 unity_VertexLightParams;\nuniform
            \tvec4 _MainTex_ST;\nin highp vec3 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            highp vec3 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec3
            vs_COLOR1;\nout highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nmediump vec4 u_xlat16_3;\nvec3
            u_xlat4;\nvec3 u_xlat5;\nbool u_xlatb5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbool u_xlatb9;\nfloat
            u_xlat10;\nvec3 u_xlat11;\nvec3 u_xlat12;\nbool u_xlatb12;\nfloat u_xlat13;\nmediump
            vec3 u_xlat16_14;\nvec3 u_xlat15;\nvec3 u_xlat16;\nbool u_xlatb16;\nfloat
            u_xlat17;\nmediump vec3 u_xlat16_18;\nvec3 u_xlat19;\nvec3 u_xlat21;\nmediump
            vec3 u_xlat16_22;\nint u_xlati24;\nbool u_xlatb24;\nmediump vec3 u_xlat16_25;\nmediump
            vec3 u_xlat16_26;\nvec3 u_xlat28;\nvec3 u_xlat29;\nbool u_xlatb29;\nvec3
            u_xlat31;\nvec3 u_xlat32;\nbool u_xlatb32;\nvec3 u_xlat35;\nvec3 u_xlat36;\nbool
            u_xlatb36;\nmediump float u_xlat16_41;\nbool u_xlatb43;\nmediump float
            u_xlat16_44;\nmediump float u_xlat16_45;\nfloat u_xlat48;\nbool u_xlatb48;\nfloat
            u_xlat51;\nbool u_xlatb51;\nfloat u_xlat55;\nbool u_xlatb55;\nfloat u_xlat58;\nfloat
            u_xlat61;\nfloat u_xlat62;\nmediump float u_xlat16_63;\nmediump float
            u_xlat16_64;\nbool u_xlatb65;\nfloat u_xlat67;\nbool u_xlatb68;\nfloat
            u_xlat70;\nbool u_xlatb72;\nvoid main()\n{\n    u_xlatb0 = unity_LightPosition[1].w!=0.0;\n   
            u_xlat19.xyz = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat19.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx
            + u_xlat19.xyz;\n    u_xlat19.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[1].zzz + u_xlat19.xyz;\n    u_xlat19.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].www
            + u_xlat19.xyz;\n    u_xlat19.xyz = u_xlat19.xyz * in_POSITION0.yyy;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].www
            + u_xlat1.xyz;\n    u_xlat19.xyz = u_xlat1.xyz * in_POSITION0.xxx + u_xlat19.xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].www
            + u_xlat1.xyz;\n    u_xlat19.xyz = u_xlat1.xyz * in_POSITION0.zzz + u_xlat19.xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].www
            + u_xlat1.xyz;\n    u_xlat19.xyz = u_xlat19.xyz + u_xlat1.xyz;\n    u_xlat1.xyz
            = (-u_xlat19.xyz) * unity_LightPosition[1].www + unity_LightPosition[1].xyz;\n   
            u_xlat58 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlatb2 = unity_LightAtten[1].w<u_xlat58;\n   
            u_xlatb0 = u_xlatb0 && u_xlatb2;\n    u_xlat2.x = unity_LightAtten[1].z
            * u_xlat58 + 1.0;\n    u_xlat58 = max(u_xlat58, 9.99999997e-07);\n   
            u_xlat58 = inversesqrt(u_xlat58);\n    u_xlat2.x = float(1.0) / u_xlat2.x;\n   
            u_xlat2.x = u_xlat2.x * 0.5;\n    u_xlat16_3.x = (u_xlatb0) ? 0.0 : u_xlat2.x;\n   
            u_xlat2.xyz = vec3(u_xlat58) * u_xlat1.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat4.xyz;\n    u_xlat4.x
            = dot(u_xlat4.xyz, in_NORMAL0.xyz);\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].xxx + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].zzz
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].www + u_xlat5.xyz;\n    u_xlat4.y
            = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat5.xyz;\n    u_xlat4.z
            = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n    u_xlat0.x = dot(u_xlat4.xyz,
            u_xlat4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat4.xyz
            = u_xlat0.xxx * u_xlat4.xyz;\n    u_xlat16_22.x = dot(u_xlat4.xyz, u_xlat2.xyz);\n   
            u_xlat16_22.x = max(u_xlat16_22.x, 0.0);\n    u_xlat16_6.xyz = u_xlat16_22.xxx
            * _Color.xyz;\n    u_xlatb0 = 0.0<u_xlat16_22.x;\n    u_xlat16_22.xyz
            = u_xlat16_6.xyz * unity_LightColor[1].xyz;\n    u_xlat16_22.xyz = u_xlat16_3.xxx
            * u_xlat16_22.xyz;\n    u_xlat16_22.xyz = min(u_xlat16_22.xyz, vec3(1.0,
            1.0, 1.0));\n    u_xlatb2 = unity_LightPosition[0].w!=0.0;\n    u_xlat21.xyz
            = (-u_xlat19.xyz) * unity_LightPosition[0].www + unity_LightPosition[0].xyz;\n   
            u_xlat61 = dot(u_xlat21.xyz, u_xlat21.xyz);\n    u_xlatb5 = unity_LightAtten[0].w<u_xlat61;\n   
            u_xlatb2 = u_xlatb2 && u_xlatb5;\n    u_xlat5.x = unity_LightAtten[0].z
            * u_xlat61 + 1.0;\n    u_xlat61 = max(u_xlat61, 9.99999997e-07);\n   
            u_xlat61 = inversesqrt(u_xlat61);\n    u_xlat5.x = float(1.0) / u_xlat5.x;\n   
            u_xlat5.x = u_xlat5.x * 0.5;\n    u_xlat16_6.x = (u_xlatb2) ? 0.0 : u_xlat5.x;\n   
            u_xlat5.xyz = u_xlat21.xyz * vec3(u_xlat61);\n    u_xlat16_25.x = dot(u_xlat4.xyz,
            u_xlat5.xyz);\n    u_xlat16_25.x = max(u_xlat16_25.x, 0.0);\n    u_xlat16_7.xyz
            = u_xlat16_25.xxx * _Color.xyz;\n    u_xlatb2 = 0.0<u_xlat16_25.x;\n   
            u_xlat16_25.xyz = u_xlat16_7.xyz * unity_LightColor[0].xyz;\n    u_xlat16_25.xyz
            = u_xlat16_6.xxx * u_xlat16_25.xyz;\n    u_xlat16_25.xyz = min(u_xlat16_25.xyz,
            vec3(1.0, 1.0, 1.0));\n    u_xlat16_7.xyz = _Color.xyz * glstate_lightmodel_ambient.xyz
            + _Emission.xyz;\n    u_xlat16_25.xyz = u_xlat16_25.xyz + u_xlat16_7.xyz;\n   
            u_xlatb5 = 0<unity_VertexLightParams.x;\n    u_xlat16_25.xyz = (bool(u_xlatb5))
            ? u_xlat16_25.xyz : u_xlat16_7.xyz;\n    u_xlat16_22.xyz = u_xlat16_22.xyz
            + u_xlat16_25.xyz;\n    u_xlati24 = u_xlatb5 ? 1 : int(0);\n    u_xlatb43
            = u_xlati24<unity_VertexLightParams.x;\n    u_xlati24 = (u_xlatb43) ?
            2 : u_xlati24;\n    u_xlat16_22.xyz = (bool(u_xlatb43)) ? u_xlat16_22.xyz
            : u_xlat16_25.xyz;\n    u_xlat8.xyz = (-u_xlat19.xyz) * unity_LightPosition[2].www
            + unity_LightPosition[2].xyz;\n    u_xlat62 = dot(u_xlat8.xyz, u_xlat8.xyz);\n   
            u_xlatb65 = unity_LightAtten[2].w<u_xlat62;\n    u_xlatb9 = unity_LightPosition[2].w!=0.0;\n   
            u_xlatb65 = u_xlatb65 && u_xlatb9;\n    u_xlat9.x = unity_LightAtten[2].z
            * u_xlat62 + 1.0;\n    u_xlat62 = max(u_xlat62, 9.99999997e-07);\n   
            u_xlat62 = inversesqrt(u_xlat62);\n    u_xlat9.x = float(1.0) / u_xlat9.x;\n   
            u_xlat9.x = u_xlat9.x * 0.5;\n    u_xlat16_25.x = (u_xlatb65) ? 0.0 :
            u_xlat9.x;\n    u_xlat9.xyz = vec3(u_xlat62) * u_xlat8.xyz;\n    u_xlat16_44
            = dot(u_xlat4.xyz, u_xlat9.xyz);\n    u_xlat16_44 = max(u_xlat16_44,
            0.0);\n    u_xlat16_7.xyz = vec3(u_xlat16_44) * _Color.xyz;\n    u_xlatb65
            = 0.0<u_xlat16_44;\n    u_xlat16_7.xyz = u_xlat16_7.xyz * unity_LightColor[2].xyz;\n   
            u_xlat16_7.xyz = u_xlat16_25.xxx * u_xlat16_7.xyz;\n    u_xlat16_7.xyz
            = min(u_xlat16_7.xyz, vec3(1.0, 1.0, 1.0));\n    u_xlat16_7.xyz = u_xlat16_22.xyz
            + u_xlat16_7.xyz;\n    u_xlatb9 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb9 = u_xlatb43 && u_xlatb9;\n    u_xlat16_22.xyz = (bool(u_xlatb9))
            ? u_xlat16_7.xyz : u_xlat16_22.xyz;\n    u_xlat28.xyz = (-u_xlat19.xyz)
            * unity_LightPosition[3].www + unity_LightPosition[3].xyz;\n    u_xlat10
            = dot(u_xlat28.xyz, u_xlat28.xyz);\n    u_xlatb29 = unity_LightAtten[3].w<u_xlat10;\n   
            u_xlatb48 = unity_LightPosition[3].w!=0.0;\n    u_xlatb29 = u_xlatb29
            && u_xlatb48;\n    u_xlat48 = unity_LightAtten[3].z * u_xlat10 + 1.0;\n   
            u_xlat10 = max(u_xlat10, 9.99999997e-07);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat48 = float(1.0) / u_xlat48;\n    u_xlat48 = u_xlat48 * 0.5;\n   
            u_xlat16_44 = (u_xlatb29) ? 0.0 : u_xlat48;\n    u_xlat29.xyz = u_xlat28.xyz
            * vec3(u_xlat10);\n    u_xlat16_63 = dot(u_xlat4.xyz, u_xlat29.xyz);\n   
            u_xlat16_63 = max(u_xlat16_63, 0.0);\n    u_xlat16_7.xyz = vec3(u_xlat16_63)
            * _Color.xyz;\n    u_xlatb29 = 0.0<u_xlat16_63;\n    u_xlat16_7.xyz =
            u_xlat16_7.xyz * unity_LightColor[3].xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_44)
            * u_xlat16_7.xyz;\n    u_xlat16_7.xyz = min(u_xlat16_7.xyz, vec3(1.0,
            1.0, 1.0));\n    u_xlat16_7.xyz = u_xlat16_22.xyz + u_xlat16_7.xyz;\n   
            u_xlati24 = (u_xlatb9) ? 3 : u_xlati24;\n    u_xlatb48 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb48 = u_xlatb9 && u_xlatb48;\n    u_xlat16_22.xyz = (bool(u_xlatb48))
            ? u_xlat16_7.xyz : u_xlat16_22.xyz;\n    u_xlat11.xyz = (-u_xlat19.xyz)
            * unity_LightPosition[4].www + unity_LightPosition[4].xyz;\n    u_xlat67
            = dot(u_xlat11.xyz, u_xlat11.xyz);\n    u_xlatb68 = unity_LightAtten[4].w<u_xlat67;\n   
            u_xlatb12 = unity_LightPosition[4].w!=0.0;\n    u_xlatb68 = u_xlatb68
            && u_xlatb12;\n    u_xlat12.x = unity_LightAtten[4].z * u_xlat67 + 1.0;\n   
            u_xlat67 = max(u_xlat67, 9.99999997e-07);\n    u_xlat67 = inversesqrt(u_xlat67);\n   
            u_xlat12.x = float(1.0) / u_xlat12.x;\n    u_xlat12.x = u_xlat12.x *
            0.5;\n    u_xlat16_63 = (u_xlatb68) ? 0.0 : u_xlat12.x;\n    u_xlat12.xyz
            = vec3(u_xlat67) * u_xlat11.xyz;\n    u_xlat16_7.x = dot(u_xlat4.xyz,
            u_xlat12.xyz);\n    u_xlat16_7.x = max(u_xlat16_7.x, 0.0);\n    u_xlat16_26.xyz
            = u_xlat16_7.xxx * _Color.xyz;\n    u_xlatb68 = 0.0<u_xlat16_7.x;\n   
            u_xlat16_7.xyz = u_xlat16_26.xyz * unity_LightColor[4].xyz;\n    u_xlat16_7.xyz
            = vec3(u_xlat16_63) * u_xlat16_7.xyz;\n    u_xlat16_7.xyz = min(u_xlat16_7.xyz,
            vec3(1.0, 1.0, 1.0));\n    u_xlat16_7.xyz = u_xlat16_22.xyz + u_xlat16_7.xyz;\n   
            u_xlati24 = (u_xlatb48) ? 4 : u_xlati24;\n    u_xlatb12 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb12 = u_xlatb48 && u_xlatb12;\n    u_xlat16_22.xyz = (bool(u_xlatb12))
            ? u_xlat16_7.xyz : u_xlat16_22.xyz;\n    u_xlat31.xyz = (-u_xlat19.xyz)
            * unity_LightPosition[5].www + unity_LightPosition[5].xyz;\n    u_xlat13
            = dot(u_xlat31.xyz, u_xlat31.xyz);\n    u_xlatb32 = unity_LightAtten[5].w<u_xlat13;\n   
            u_xlatb51 = unity_LightPosition[5].w!=0.0;\n    u_xlatb32 = u_xlatb32
            && u_xlatb51;\n    u_xlat51 = unity_LightAtten[5].z * u_xlat13 + 1.0;\n   
            u_xlat13 = max(u_xlat13, 9.99999997e-07);\n    u_xlat13 = inversesqrt(u_xlat13);\n   
            u_xlat51 = float(1.0) / u_xlat51;\n    u_xlat51 = u_xlat51 * 0.5;\n   
            u_xlat16_7.x = (u_xlatb32) ? 0.0 : u_xlat51;\n    u_xlat32.xyz = u_xlat31.xyz
            * vec3(u_xlat13);\n    u_xlat16_26.x = dot(u_xlat4.xyz, u_xlat32.xyz);\n   
            u_xlat16_26.x = max(u_xlat16_26.x, 0.0);\n    u_xlat16_14.xyz = u_xlat16_26.xxx
            * _Color.xyz;\n    u_xlatb32 = 0.0<u_xlat16_26.x;\n    u_xlat16_26.xyz
            = u_xlat16_14.xyz * unity_LightColor[5].xyz;\n    u_xlat16_26.xyz = u_xlat16_7.xxx
            * u_xlat16_26.xyz;\n    u_xlat16_26.xyz = min(u_xlat16_26.xyz, vec3(1.0,
            1.0, 1.0));\n    u_xlat16_26.xyz = u_xlat16_22.xyz + u_xlat16_26.xyz;\n   
            u_xlati24 = (u_xlatb12) ? 5 : u_xlati24;\n    u_xlatb51 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb51 = u_xlatb12 && u_xlatb51;\n    u_xlat16_22.xyz = (bool(u_xlatb51))
            ? u_xlat16_26.xyz : u_xlat16_22.xyz;\n    u_xlat15.xyz = (-u_xlat19.xyz)
            * unity_LightPosition[6].www + unity_LightPosition[6].xyz;\n    u_xlat70
            = dot(u_xlat15.xyz, u_xlat15.xyz);\n    u_xlatb72 = unity_LightAtten[6].w<u_xlat70;\n   
            u_xlatb16 = unity_LightPosition[6].w!=0.0;\n    u_xlatb72 = u_xlatb72
            && u_xlatb16;\n    u_xlat16.x = unity_LightAtten[6].z * u_xlat70 + 1.0;\n   
            u_xlat70 = max(u_xlat70, 9.99999997e-07);\n    u_xlat70 = inversesqrt(u_xlat70);\n   
            u_xlat16.x = float(1.0) / u_xlat16.x;\n    u_xlat16.x = u_xlat16.x *
            0.5;\n    u_xlat16_26.x = (u_xlatb72) ? 0.0 : u_xlat16.x;\n    u_xlat16.xyz
            = vec3(u_xlat70) * u_xlat15.xyz;\n    u_xlat16_45 = dot(u_xlat4.xyz,
            u_xlat16.xyz);\n    u_xlat16_45 = max(u_xlat16_45, 0.0);\n    u_xlat16_14.xyz
            = vec3(u_xlat16_45) * _Color.xyz;\n    u_xlatb72 = 0.0<u_xlat16_45;\n   
            u_xlat16_14.xyz = u_xlat16_14.xyz * unity_LightColor[6].xyz;\n    u_xlat16_14.xyz
            = u_xlat16_26.xxx * u_xlat16_14.xyz;\n    u_xlat16_14.xyz = min(u_xlat16_14.xyz,
            vec3(1.0, 1.0, 1.0));\n    u_xlat16_14.xyz = u_xlat16_22.xyz + u_xlat16_14.xyz;\n   
            u_xlati24 = (u_xlatb51) ? 6 : u_xlati24;\n    u_xlatb16 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb16 = u_xlatb51 && u_xlatb16;\n    u_xlat16_22.xyz = (bool(u_xlatb16))
            ? u_xlat16_14.xyz : u_xlat16_22.xyz;\n    u_xlat35.xyz = (-u_xlat19.xyz)
            * unity_LightPosition[7].www + unity_LightPosition[7].xyz;\n    u_xlat17
            = dot(u_xlat35.xyz, u_xlat35.xyz);\n    u_xlatb36 = unity_LightAtten[7].w<u_xlat17;\n   
            u_xlatb55 = unity_LightPosition[7].w!=0.0;\n    u_xlatb36 = u_xlatb36
            && u_xlatb55;\n    u_xlat55 = unity_LightAtten[7].z * u_xlat17 + 1.0;\n   
            u_xlat17 = max(u_xlat17, 9.99999997e-07);\n    u_xlat17 = inversesqrt(u_xlat17);\n   
            u_xlat55 = float(1.0) / u_xlat55;\n    u_xlat55 = u_xlat55 * 0.5;\n   
            u_xlat16_45 = (u_xlatb36) ? 0.0 : u_xlat55;\n    u_xlat36.xyz = u_xlat35.xyz
            * vec3(u_xlat17);\n    u_xlat16_64 = dot(u_xlat4.xyz, u_xlat36.xyz);\n   
            u_xlat16_64 = max(u_xlat16_64, 0.0);\n    u_xlat16_14.xyz = vec3(u_xlat16_64)
            * _Color.xyz;\n    u_xlatb36 = 0.0<u_xlat16_64;\n    u_xlat16_14.xyz
            = u_xlat16_14.xyz * unity_LightColor[7].xyz;\n    u_xlat16_14.xyz = vec3(u_xlat16_45)
            * u_xlat16_14.xyz;\n    u_xlat16_14.xyz = min(u_xlat16_14.xyz, vec3(1.0,
            1.0, 1.0));\n    u_xlat16_14.xyz = u_xlat16_22.xyz + u_xlat16_14.xyz;\n   
            u_xlati24 = (u_xlatb16) ? 7 : u_xlati24;\n    u_xlatb24 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb24 = u_xlatb24 && u_xlatb16;\n    vs_COLOR0.xyz = (bool(u_xlatb24))
            ? u_xlat16_14.xyz : u_xlat16_22.xyz;\n    vs_COLOR0.xyz = clamp(vs_COLOR0.xyz,
            0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n    vs_COLOR0.w = clamp(vs_COLOR0.w,
            0.0, 1.0);\n    u_xlat55 = dot(u_xlat19.xyz, u_xlat19.xyz);\n    u_xlat55
            = inversesqrt(u_xlat55);\n    u_xlat19.xyz = u_xlat19.xyz * vec3(u_xlat55);\n   
            u_xlat16_22.xyz = u_xlat21.xyz * vec3(u_xlat61) + (-u_xlat19.xyz);\n   
            u_xlat16_64 = dot(u_xlat16_22.xyz, u_xlat16_22.xyz);\n    u_xlat16_64
            = inversesqrt(u_xlat16_64);\n    u_xlat16_22.xyz = u_xlat16_22.xyz *
            vec3(u_xlat16_64);\n    u_xlat16_22.x = dot(u_xlat4.xyz, u_xlat16_22.xyz);\n   
            u_xlat16_22.x = max(u_xlat16_22.x, 0.0);\n    u_xlat16_22.x = log2(u_xlat16_22.x);\n   
            u_xlat16_41 = _Shininess * 128.0;\n    u_xlat16_22.x = u_xlat16_22.x
            * u_xlat16_41;\n    u_xlat16_22.x = exp2(u_xlat16_22.x);\n    u_xlat16_22.x
            = min(u_xlat16_22.x, 1.0);\n    u_xlat16_22.x = u_xlat16_22.x * u_xlat16_6.x;\n   
            u_xlat16_14.xyz = u_xlat16_22.xxx * unity_LightColor[0].xyz;\n    u_xlat16_14.xyz
            = (bool(u_xlatb2)) ? u_xlat16_14.xyz : vec3(0.0, 0.0, 0.0);\n    u_xlat16_14.xyz
            = (bool(u_xlatb5)) ? u_xlat16_14.xyz : vec3(0.0, 0.0, 0.0);\n    u_xlat16_18.xyz
            = u_xlat1.xyz * vec3(u_xlat58) + (-u_xlat19.xyz);\n    u_xlat16_22.x
            = dot(u_xlat16_18.xyz, u_xlat16_18.xyz);\n    u_xlat16_22.x = inversesqrt(u_xlat16_22.x);\n   
            u_xlat16_18.xyz = u_xlat16_22.xxx * u_xlat16_18.xyz;\n    u_xlat16_22.x
            = dot(u_xlat4.xyz, u_xlat16_18.xyz);\n    u_xlat16_22.x = max(u_xlat16_22.x,
            0.0);\n    u_xlat16_22.x = log2(u_xlat16_22.x);\n    u_xlat16_22.x =
            u_xlat16_22.x * u_xlat16_41;\n    u_xlat16_22.x = exp2(u_xlat16_22.x);\n   
            u_xlat16_22.x = min(u_xlat16_22.x, 1.0);\n    u_xlat16_3.x = u_xlat16_22.x
            * u_xlat16_3.x;\n    u_xlat16_3.xyw = u_xlat16_3.xxx * unity_LightColor[1].xyz
            + u_xlat16_14.xyz;\n    u_xlat16_3.xyw = (bool(u_xlatb0)) ? u_xlat16_3.xyw
            : u_xlat16_14.xyz;\n    u_xlat16_3.xyw = (bool(u_xlatb43)) ? u_xlat16_3.xyw
            : u_xlat16_14.xyz;\n    u_xlat16_14.xyz = u_xlat8.xyz * vec3(u_xlat62)
            + (-u_xlat19.xyz);\n    u_xlat16_6.x = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n   
            u_xlat16_6.x = inversesqrt(u_xlat16_6.x);\n    u_xlat16_14.xyz = u_xlat16_6.xxx
            * u_xlat16_14.xyz;\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_14.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_6.x = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_6.x = exp2(u_xlat16_6.x);\n   
            u_xlat16_6.x = min(u_xlat16_6.x, 1.0);\n    u_xlat16_6.x = u_xlat16_6.x
            * u_xlat16_25.x;\n    u_xlat16_14.xyz = u_xlat16_6.xxx * unity_LightColor[2].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_14.xyz = (bool(u_xlatb65)) ? u_xlat16_14.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyw = (bool(u_xlatb9)) ? u_xlat16_14.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_14.xyz = u_xlat28.xyz * vec3(u_xlat10)
            + (-u_xlat19.xyz);\n    u_xlat16_6.x = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n   
            u_xlat16_6.x = inversesqrt(u_xlat16_6.x);\n    u_xlat16_14.xyz = u_xlat16_6.xxx
            * u_xlat16_14.xyz;\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_14.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_6.x = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_6.x = exp2(u_xlat16_6.x);\n   
            u_xlat16_6.x = min(u_xlat16_6.x, 1.0);\n    u_xlat16_6.x = u_xlat16_6.x
            * u_xlat16_44;\n    u_xlat16_6.xyz = u_xlat16_6.xxx * unity_LightColor[3].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_6.xyz = (bool(u_xlatb29)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyw = (bool(u_xlatb48)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_6.xyz = u_xlat11.xyz * vec3(u_xlat67)
            + (-u_xlat19.xyz);\n    u_xlat16_64 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_64 = inversesqrt(u_xlat16_64);\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            * vec3(u_xlat16_64);\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_6.x = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_6.x = exp2(u_xlat16_6.x);\n   
            u_xlat16_6.x = min(u_xlat16_6.x, 1.0);\n    u_xlat16_6.x = u_xlat16_6.x
            * u_xlat16_63;\n    u_xlat16_6.xyz = u_xlat16_6.xxx * unity_LightColor[4].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_6.xyz = (bool(u_xlatb68)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyw = (bool(u_xlatb12)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_6.xyz = u_xlat31.xyz * vec3(u_xlat13)
            + (-u_xlat19.xyz);\n    u_xlat16_63 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_63 = inversesqrt(u_xlat16_63);\n    u_xlat16_6.xyz = vec3(u_xlat16_63)
            * u_xlat16_6.xyz;\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_6.x = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_6.x = exp2(u_xlat16_6.x);\n   
            u_xlat16_6.x = min(u_xlat16_6.x, 1.0);\n    u_xlat16_6.x = u_xlat16_6.x
            * u_xlat16_7.x;\n    u_xlat16_6.xyz = u_xlat16_6.xxx * unity_LightColor[5].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_6.xyz = (bool(u_xlatb32)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyw = (bool(u_xlatb51)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_6.xyz = u_xlat15.xyz * vec3(u_xlat70)
            + (-u_xlat19.xyz);\n    u_xlat16_14.xyz = u_xlat35.xyz * vec3(u_xlat17)
            + (-u_xlat19.xyz);\n    u_xlat16_63 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_63 = inversesqrt(u_xlat16_63);\n    u_xlat16_6.xyz = vec3(u_xlat16_63)
            * u_xlat16_6.xyz;\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_6.x = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_6.x = exp2(u_xlat16_6.x);\n   
            u_xlat16_6.x = min(u_xlat16_6.x, 1.0);\n    u_xlat16_6.x = u_xlat16_6.x
            * u_xlat16_26.x;\n    u_xlat16_6.xyz = u_xlat16_6.xxx * unity_LightColor[6].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_6.xyz = (bool(u_xlatb72)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyw = (bool(u_xlatb16)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_6.x = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n   
            u_xlat16_6.x = inversesqrt(u_xlat16_6.x);\n    u_xlat16_6.xyz = u_xlat16_6.xxx
            * u_xlat16_14.xyz;\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_41 = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_41 = exp2(u_xlat16_41);\n   
            u_xlat16_41 = min(u_xlat16_41, 1.0);\n    u_xlat16_41 = u_xlat16_41 *
            u_xlat16_45;\n    u_xlat16_6.xyz = vec3(u_xlat16_41) * unity_LightColor[7].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_6.xyz = (bool(u_xlatb36)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyz = (bool(u_xlatb24)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    vs_COLOR1.xyz = u_xlat16_3.xyz * _SpecColor.xyz;\n   
            vs_COLOR1.xyz = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec3 vs_COLOR1;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vs_COLOR0.xyz;\n   
            SV_Target0.w = u_xlat16_0.w * vs_COLOR0.w;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * vec3(2.0, 2.0, 2.0) + vs_COLOR1.xyz;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: Vertex
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _
        KeywordGroups:
        - Keywords:
          - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - POINT
          - SPOT
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 9
          shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: Vertex
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 unity_LightmapST;\nuniform
            \tvec4 unity_Lightmap_ST;\nuniform \tvec4 _MainTex_ST;\nattribute highp
            vec3 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp
            vec3 in_TEXCOORD1;\nattribute highp vec3 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    vs_COLOR0 = in_COLOR0;\n    vs_COLOR0 =
            clamp(vs_COLOR0, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD1.xy *
            unity_LightmapST.xy + unity_LightmapST.zw;\n    vs_TEXCOORD1.xy = in_TEXCOORD1.xy
            * unity_Lightmap_ST.xy + unity_Lightmap_ST.zw;\n    vs_TEXCOORD2.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 unity_Lightmap_HDR;\nuniform \tmediump
            vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform mediump sampler2D
            unity_Lightmap;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2
            vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nmediump
            vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat16_0 = texture2D(unity_Lightmap, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.x = u_xlat16_0.w * unity_Lightmap_HDR.x;\n    u_xlat16_1.xyz
            = u_xlat16_0.xyz * u_xlat16_1.xxx;\n    u_xlat16_1.xyz = u_xlat16_1.xyz
            * _Color.xyz;\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD2.xy);\n   
            SV_Target0.xyz = u_xlat16_1.xyz * u_xlat10_0.xyz;\n    SV_Target0.w =
            u_xlat10_0.w * vs_COLOR0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: VertexLM
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 unity_LightmapST;\nuniform \tvec4 unity_Lightmap_ST;\nuniform
            \tvec4 _MainTex_ST;\nin highp vec3 in_POSITION0;\nin mediump vec4 in_COLOR0;\nin
            highp vec3 in_TEXCOORD1;\nin highp vec3 in_TEXCOORD0;\nout mediump vec4
            vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec2 vs_TEXCOORD1;\nout
            highp vec2 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n   
            vs_COLOR0 = in_COLOR0;\n    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);\n   
            vs_TEXCOORD0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;\n   
            vs_TEXCOORD1.xy = in_TEXCOORD1.xy * unity_Lightmap_ST.xy + unity_Lightmap_ST.zw;\n   
            vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 unity_Lightmap_HDR;\nuniform
            \tmediump vec4 _Color;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D unity_Lightmap;\nin mediump vec4 vs_COLOR0;\nin
            highp vec2 vs_TEXCOORD0;\nin highp vec2 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0 = texture(unity_Lightmap,
            vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w * unity_Lightmap_HDR.x;\n   
            u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xxx;\n    u_xlat16_1.xyz
            = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD2.xy);\n   
            SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;\n    SV_Target0.w =
            u_xlat16_0.w * vs_COLOR0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: LIGHTMODE
            Value: VertexLM
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
          passType: 2
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
          passType: 2
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: LIGHTMODE
          Value: VertexLM
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - POINT
    - SPOT
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 9
      shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 5
      shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
      passType: 2
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 34, guid: 0000000000000000f000000000000000, type: 0}
      passType: 2
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tvec4 unity_LightPosition[8];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tmediump vec4 glstate_lightmodel_ambient;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Emission;\nuniform
            \tmediump float _Shininess;\nuniform \tvec4 _MainTex_ST;\nattribute highp
            vec3 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute highp
            vec3 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump
            vec3 vs_COLOR1;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nvec3
            u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump
            vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nfloat
            u_xlat36;\nint u_xlati37;\nmediump float u_xlat16_43;\nmediump float
            u_xlat16_44;\nvoid main()\n{\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].www + u_xlat0.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[1].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].www
            + u_xlat1.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].zzz
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].www + u_xlat2.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].zzz + u_xlat3.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].www
            + u_xlat3.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat4.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www
            + u_xlat5.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat6.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz
            + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat6.xyz;\n    u_xlat1.xyz
            = u_xlat1.xyz * in_POSITION0.yyy;\n    u_xlat0.xyz = u_xlat0.xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * in_POSITION0.zzz + u_xlat0.xyz;\n   
            u_xlat0.xyz = u_xlat3.xyz + u_xlat0.xyz;\n    u_xlat1.x = dot(u_xlat4.xyz,
            in_NORMAL0.xyz);\n    u_xlat1.y = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.z = dot(u_xlat6.xyz, in_NORMAL0.xyz);\n    u_xlat36 = dot(u_xlat1.xyz,
            u_xlat1.xyz);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz
            = vec3(u_xlat36) * u_xlat1.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat16_7.xyz = _Color.xyz *
            glstate_lightmodel_ambient.xyz + _Emission.xyz;\n    u_xlat16_43 = _Shininess
            * 128.0;\n    u_xlat16_8.xyz = u_xlat16_7.xyz;\n    u_xlat16_9.x = float(0.0);\n   
            u_xlat16_9.y = float(0.0);\n    u_xlat16_9.z = float(0.0);\n    for(int
            u_xlati_loop_1 = 0 ; u_xlati_loop_1<8 ; u_xlati_loop_1++)\n    {\n       
            u_xlat16_44 = dot(u_xlat1.xyz, unity_LightPosition[u_xlati_loop_1].xyz);\n       
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n        u_xlat16_10.xyz = vec3(u_xlat16_44)
            * _Color.xyz;\n        u_xlat16_10.xyz = u_xlat16_10.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n       
            u_xlatb2 = 0.0<u_xlat16_44;\n        if(u_xlatb2){\n            u_xlat16_11.xyz
            = (-u_xlat0.xyz) * vec3(u_xlat36) + unity_LightPosition[u_xlati_loop_1].xyz;\n           
            u_xlat16_44 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n            u_xlat16_44
            = inversesqrt(u_xlat16_44);\n            u_xlat16_11.xyz = vec3(u_xlat16_44)
            * u_xlat16_11.xyz;\n            u_xlat16_44 = dot(u_xlat1.xyz, u_xlat16_11.xyz);\n           
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n            u_xlat16_44 = log2(u_xlat16_44);\n           
            u_xlat16_44 = u_xlat16_43 * u_xlat16_44;\n            u_xlat16_44 = exp2(u_xlat16_44);\n           
            u_xlat16_44 = min(u_xlat16_44, 1.0);\n            u_xlat16_44 = u_xlat16_44
            * 0.5;\n            u_xlat16_9.xyz = vec3(u_xlat16_44) * unity_LightColor[u_xlati_loop_1].xyz
            + u_xlat16_9.xyz;\n        }\n        u_xlat16_10.xyz = u_xlat16_10.xyz
            * vec3(0.5, 0.5, 0.5);\n        u_xlat16_10.xyz = min(u_xlat16_10.xyz,
            vec3(1.0, 1.0, 1.0));\n        u_xlat16_8.xyz = u_xlat16_8.xyz + u_xlat16_10.xyz;\n   
            }\n    vs_COLOR1.xyz = u_xlat16_9.xyz * _SpecColor.xyz;\n    vs_COLOR1.xyz
            = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_COLOR0.xyz = u_xlat16_8.xyz;\n   
            vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n   
            vs_COLOR0.w = clamp(vs_COLOR0.w, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy *
            hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec3 vs_COLOR1;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0
            gl_FragData[0]\nlowp vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_1.xyz = u_xlat10_0.xyz * vs_COLOR0.xyz;\n    SV_Target0.xyz
            = u_xlat16_1.xyz * vec3(2.0, 2.0, 2.0) + vs_COLOR1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: Vertex
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tvec4 unity_LightPosition[8];\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 glstate_lightmodel_ambient;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump vec4 _SpecColor;\nuniform \tmediump
            vec4 _Emission;\nuniform \tmediump float _Shininess;\nuniform \tivec4
            unity_VertexLightParams;\nuniform \tvec4 _MainTex_ST;\nin highp vec3
            in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec3 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout mediump vec3 vs_COLOR1;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3
            u_xlat3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat36;\nint u_xlati37;\nmediump float u_xlat16_43;\nmediump
            float u_xlat16_44;\nvoid main()\n{\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].www + u_xlat0.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[1].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].www
            + u_xlat1.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].zzz
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].www + u_xlat2.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].zzz + u_xlat3.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].www
            + u_xlat3.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat4.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www
            + u_xlat5.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat6.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz
            + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat6.xyz;\n    u_xlat1.xyz
            = u_xlat1.xyz * in_POSITION0.yyy;\n    u_xlat0.xyz = u_xlat0.xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * in_POSITION0.zzz + u_xlat0.xyz;\n   
            u_xlat0.xyz = u_xlat3.xyz + u_xlat0.xyz;\n    u_xlat1.x = dot(u_xlat4.xyz,
            in_NORMAL0.xyz);\n    u_xlat1.y = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.z = dot(u_xlat6.xyz, in_NORMAL0.xyz);\n    u_xlat36 = dot(u_xlat1.xyz,
            u_xlat1.xyz);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz
            = vec3(u_xlat36) * u_xlat1.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat16_7.xyz = _Color.xyz *
            glstate_lightmodel_ambient.xyz + _Emission.xyz;\n    u_xlat16_43 = _Shininess
            * 128.0;\n    u_xlat16_8.xyz = u_xlat16_7.xyz;\n    u_xlat16_9.x = float(0.0);\n   
            u_xlat16_9.y = float(0.0);\n    u_xlat16_9.z = float(0.0);\n    for(int
            u_xlati_loop_1 = 0 ; u_xlati_loop_1<unity_VertexLightParams.x ; u_xlati_loop_1++)\n   
            {\n        u_xlat16_44 = dot(u_xlat1.xyz, unity_LightPosition[u_xlati_loop_1].xyz);\n       
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n        u_xlat16_10.xyz = vec3(u_xlat16_44)
            * _Color.xyz;\n        u_xlat16_10.xyz = u_xlat16_10.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n       
            u_xlatb2 = 0.0<u_xlat16_44;\n        if(u_xlatb2){\n            u_xlat16_11.xyz
            = (-u_xlat0.xyz) * vec3(u_xlat36) + unity_LightPosition[u_xlati_loop_1].xyz;\n           
            u_xlat16_44 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n            u_xlat16_44
            = inversesqrt(u_xlat16_44);\n            u_xlat16_11.xyz = vec3(u_xlat16_44)
            * u_xlat16_11.xyz;\n            u_xlat16_44 = dot(u_xlat1.xyz, u_xlat16_11.xyz);\n           
            u_xlat16_44 = max(u_xlat16_44, 0.0);\n            u_xlat16_44 = log2(u_xlat16_44);\n           
            u_xlat16_44 = u_xlat16_43 * u_xlat16_44;\n            u_xlat16_44 = exp2(u_xlat16_44);\n           
            u_xlat16_44 = min(u_xlat16_44, 1.0);\n            u_xlat16_44 = u_xlat16_44
            * 0.5;\n            u_xlat16_9.xyz = vec3(u_xlat16_44) * unity_LightColor[u_xlati_loop_1].xyz
            + u_xlat16_9.xyz;\n        }\n        u_xlat16_10.xyz = u_xlat16_10.xyz
            * vec3(0.5, 0.5, 0.5);\n        u_xlat16_10.xyz = min(u_xlat16_10.xyz,
            vec3(1.0, 1.0, 1.0));\n        u_xlat16_8.xyz = u_xlat16_8.xyz + u_xlat16_10.xyz;\n   
            }\n    vs_COLOR1.xyz = u_xlat16_9.xyz * _SpecColor.xyz;\n    vs_COLOR1.xyz
            = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_COLOR0.xyz = u_xlat16_8.xyz;\n   
            vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n   
            vs_COLOR0.w = clamp(vs_COLOR0.w, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy *
            hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec3 vs_COLOR1;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec3 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vs_COLOR0.xyz;\n   
            SV_Target0.xyz = u_xlat16_1.xyz * vec3(2.0, 2.0, 2.0) + vs_COLOR1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: Vertex
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tvec4 unity_LightPosition[8];\nuniform \tmediump vec4 unity_LightAtten[8];\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tmediump vec4 glstate_lightmodel_ambient;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump vec4 _SpecColor;\nuniform \tmediump
            vec4 _Emission;\nuniform \tmediump float _Shininess;\nuniform \tvec4
            _MainTex_ST;\nattribute highp vec3 in_POSITION0;\nattribute highp vec3
            in_NORMAL0;\nattribute highp vec3 in_TEXCOORD0;\nvarying mediump vec4
            vs_COLOR0;\nvarying mediump vec3 vs_COLOR1;\nvarying highp vec2 vs_TEXCOORD0;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3 u_xlat3;\nvec3
            u_xlat4;\nvec3 u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_11;\nbool u_xlatb15;\nbool u_xlatb27;\nfloat u_xlat36;\nint
            u_xlati37;\nfloat u_xlat38;\nbool u_xlatb38;\nmediump float u_xlat16_43;\nmediump
            float u_xlat16_44;\nmediump float u_xlat16_45;\nvoid main()\n{\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].zzz + u_xlat0.xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].www
            + u_xlat0.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].zzz
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[1].www + u_xlat1.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].zzz + u_xlat2.xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].www
            + u_xlat2.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy
            * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx + u_xlat3.xyz;\n    u_xlat3.xyz
            = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].zzz
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].www + u_xlat3.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n   
            u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].xxx
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].zzz + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].www
            + u_xlat4.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].xxx + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].zzz
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].www + u_xlat5.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n   
            u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].xxx
            + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].zzz + u_xlat6.xyz;\n    u_xlat6.xyz
            = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].www
            + u_xlat6.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * in_POSITION0.yyy;\n   
            u_xlat0.xyz = u_xlat0.xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz
            = u_xlat2.xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat3.xyz
            + u_xlat0.xyz;\n    u_xlat1.x = dot(u_xlat4.xyz, in_NORMAL0.xyz);\n   
            u_xlat1.y = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n    u_xlat1.z = dot(u_xlat6.xyz,
            in_NORMAL0.xyz);\n    u_xlat36 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz = vec3(u_xlat36) *
            u_xlat1.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat36
            = inversesqrt(u_xlat36);\n    u_xlat16_7.xyz = _Color.xyz * glstate_lightmodel_ambient.xyz
            + _Emission.xyz;\n    u_xlat16_43 = _Shininess * 128.0;\n    u_xlat16_8.xyz
            = u_xlat16_7.xyz;\n    u_xlat16_9.x = float(0.0);\n    u_xlat16_9.y =
            float(0.0);\n    u_xlat16_9.z = float(0.0);\n    for(int u_xlati_loop_1
            = 0 ; u_xlati_loop_1<8 ; u_xlati_loop_1++)\n    {\n        u_xlat2.xyz
            = (-u_xlat0.xyz) * unity_LightPosition[u_xlati_loop_1].www + unity_LightPosition[u_xlati_loop_1].xyz;\n       
            u_xlat38 = dot(u_xlat2.xyz, u_xlat2.xyz);\n        u_xlat3.x = unity_LightAtten[u_xlati_loop_1].z
            * u_xlat38 + 1.0;\n        u_xlat3.x = float(1.0) / u_xlat3.x;\n       
            u_xlatb15 = 0.0!=unity_LightPosition[u_xlati_loop_1].w;\n        u_xlatb27
            = unity_LightAtten[u_xlati_loop_1].w<u_xlat38;\n        u_xlatb15 = u_xlatb27
            && u_xlatb15;\n        u_xlat38 = max(u_xlat38, 9.99999997e-07);\n       
            u_xlat38 = inversesqrt(u_xlat38);\n        u_xlat2.xyz = vec3(u_xlat38)
            * u_xlat2.xyz;\n        u_xlat38 = u_xlat3.x * 0.5;\n        u_xlat16_44
            = (u_xlatb15) ? 0.0 : u_xlat38;\n        u_xlat16_45 = dot(u_xlat1.xyz,
            u_xlat2.xyz);\n        u_xlat16_45 = max(u_xlat16_45, 0.0);\n       
            u_xlat16_10.xyz = vec3(u_xlat16_45) * _Color.xyz;\n        u_xlat16_10.xyz
            = u_xlat16_10.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n        u_xlatb38
            = 0.0<u_xlat16_45;\n        if(u_xlatb38){\n            u_xlat16_11.xyz
            = (-u_xlat0.xyz) * vec3(u_xlat36) + u_xlat2.xyz;\n            u_xlat16_45
            = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n            u_xlat16_45 = inversesqrt(u_xlat16_45);\n           
            u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_11.xyz;\n            u_xlat16_45
            = dot(u_xlat1.xyz, u_xlat16_11.xyz);\n            u_xlat16_45 = max(u_xlat16_45,
            0.0);\n            u_xlat16_45 = log2(u_xlat16_45);\n            u_xlat16_45
            = u_xlat16_43 * u_xlat16_45;\n            u_xlat16_45 = exp2(u_xlat16_45);\n           
            u_xlat16_45 = min(u_xlat16_45, 1.0);\n            u_xlat16_45 = u_xlat16_44
            * u_xlat16_45;\n            u_xlat16_9.xyz = vec3(u_xlat16_45) * unity_LightColor[u_xlati_loop_1].xyz
            + u_xlat16_9.xyz;\n        }\n        u_xlat16_10.xyz = vec3(u_xlat16_44)
            * u_xlat16_10.xyz;\n        u_xlat16_10.xyz = min(u_xlat16_10.xyz, vec3(1.0,
            1.0, 1.0));\n        u_xlat16_8.xyz = u_xlat16_8.xyz + u_xlat16_10.xyz;\n   
            }\n    vs_COLOR1.xyz = u_xlat16_9.xyz * _SpecColor.xyz;\n    vs_COLOR1.xyz
            = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_COLOR0.xyz = u_xlat16_8.xyz;\n   
            vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n   
            vs_COLOR0.w = clamp(vs_COLOR0.w, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy
            * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy *
            hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            mediump vec3 vs_COLOR1;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0
            gl_FragData[0]\nlowp vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_1.xyz = u_xlat10_0.xyz * vs_COLOR0.xyz;\n    SV_Target0.xyz
            = u_xlat16_1.xyz * vec3(2.0, 2.0, 2.0) + vs_COLOR1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: Vertex
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tvec4 unity_LightPosition[8];\nuniform
            \tmediump vec4 unity_LightAtten[8];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tmediump vec4 glstate_lightmodel_ambient;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Emission;\nuniform
            \tmediump float _Shininess;\nuniform \tivec4 unity_VertexLightParams;\nuniform
            \tvec4 _MainTex_ST;\nin highp vec3 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin
            highp vec3 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout mediump vec3
            vs_COLOR1;\nout highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nmediump vec4 u_xlat16_3;\nvec3
            u_xlat4;\nvec3 u_xlat5;\nbool u_xlatb5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbool u_xlatb9;\nfloat
            u_xlat10;\nvec3 u_xlat11;\nvec3 u_xlat12;\nbool u_xlatb12;\nfloat u_xlat13;\nmediump
            vec3 u_xlat16_14;\nvec3 u_xlat15;\nvec3 u_xlat16;\nbool u_xlatb16;\nfloat
            u_xlat17;\nmediump vec3 u_xlat16_18;\nvec3 u_xlat19;\nvec3 u_xlat21;\nmediump
            vec3 u_xlat16_22;\nint u_xlati24;\nbool u_xlatb24;\nmediump vec3 u_xlat16_25;\nmediump
            vec3 u_xlat16_26;\nvec3 u_xlat28;\nvec3 u_xlat29;\nbool u_xlatb29;\nvec3
            u_xlat31;\nvec3 u_xlat32;\nbool u_xlatb32;\nvec3 u_xlat35;\nvec3 u_xlat36;\nbool
            u_xlatb36;\nmediump float u_xlat16_41;\nbool u_xlatb43;\nmediump float
            u_xlat16_44;\nmediump float u_xlat16_45;\nfloat u_xlat48;\nbool u_xlatb48;\nfloat
            u_xlat51;\nbool u_xlatb51;\nfloat u_xlat55;\nbool u_xlatb55;\nfloat u_xlat58;\nfloat
            u_xlat61;\nfloat u_xlat62;\nmediump float u_xlat16_63;\nmediump float
            u_xlat16_64;\nbool u_xlatb65;\nfloat u_xlat67;\nbool u_xlatb68;\nfloat
            u_xlat70;\nbool u_xlatb72;\nvoid main()\n{\n    u_xlatb0 = unity_LightPosition[1].w!=0.0;\n   
            u_xlat19.xyz = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat19.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx
            + u_xlat19.xyz;\n    u_xlat19.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz
            * hlslcc_mtx4x4unity_ObjectToWorld[1].zzz + u_xlat19.xyz;\n    u_xlat19.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].www
            + u_xlat19.xyz;\n    u_xlat19.xyz = u_xlat19.xyz * in_POSITION0.yyy;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[0].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].www
            + u_xlat1.xyz;\n    u_xlat19.xyz = u_xlat1.xyz * in_POSITION0.xxx + u_xlat19.xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[2].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].www
            + u_xlat1.xyz;\n    u_xlat19.xyz = u_xlat1.xyz * in_POSITION0.zzz + u_xlat19.xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz *
            hlslcc_mtx4x4unity_ObjectToWorld[3].zzz + u_xlat1.xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].www
            + u_xlat1.xyz;\n    u_xlat19.xyz = u_xlat19.xyz + u_xlat1.xyz;\n    u_xlat1.xyz
            = (-u_xlat19.xyz) * unity_LightPosition[1].www + unity_LightPosition[1].xyz;\n   
            u_xlat58 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlatb2 = unity_LightAtten[1].w<u_xlat58;\n   
            u_xlatb0 = u_xlatb0 && u_xlatb2;\n    u_xlat2.x = unity_LightAtten[1].z
            * u_xlat58 + 1.0;\n    u_xlat58 = max(u_xlat58, 9.99999997e-07);\n   
            u_xlat58 = inversesqrt(u_xlat58);\n    u_xlat2.x = float(1.0) / u_xlat2.x;\n   
            u_xlat2.x = u_xlat2.x * 0.5;\n    u_xlat16_3.x = (u_xlatb0) ? 0.0 : u_xlat2.x;\n   
            u_xlat2.xyz = vec3(u_xlat58) * u_xlat1.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat4.xyz;\n    u_xlat4.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz
            + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat4.xyz;\n    u_xlat4.x
            = dot(u_xlat4.xyz, in_NORMAL0.xyz);\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].xxx + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].zzz
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[1].www + u_xlat5.xyz;\n    u_xlat4.y
            = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat5.xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz
            * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat5.xyz;\n    u_xlat4.z
            = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n    u_xlat0.x = dot(u_xlat4.xyz,
            u_xlat4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat4.xyz
            = u_xlat0.xxx * u_xlat4.xyz;\n    u_xlat16_22.x = dot(u_xlat4.xyz, u_xlat2.xyz);\n   
            u_xlat16_22.x = max(u_xlat16_22.x, 0.0);\n    u_xlat16_6.xyz = u_xlat16_22.xxx
            * _Color.xyz;\n    u_xlatb0 = 0.0<u_xlat16_22.x;\n    u_xlat16_22.xyz
            = u_xlat16_6.xyz * unity_LightColor[1].xyz;\n    u_xlat16_22.xyz = u_xlat16_3.xxx
            * u_xlat16_22.xyz;\n    u_xlat16_22.xyz = min(u_xlat16_22.xyz, vec3(1.0,
            1.0, 1.0));\n    u_xlatb2 = unity_LightPosition[0].w!=0.0;\n    u_xlat21.xyz
            = (-u_xlat19.xyz) * unity_LightPosition[0].www + unity_LightPosition[0].xyz;\n   
            u_xlat61 = dot(u_xlat21.xyz, u_xlat21.xyz);\n    u_xlatb5 = unity_LightAtten[0].w<u_xlat61;\n   
            u_xlatb2 = u_xlatb2 && u_xlatb5;\n    u_xlat5.x = unity_LightAtten[0].z
            * u_xlat61 + 1.0;\n    u_xlat61 = max(u_xlat61, 9.99999997e-07);\n   
            u_xlat61 = inversesqrt(u_xlat61);\n    u_xlat5.x = float(1.0) / u_xlat5.x;\n   
            u_xlat5.x = u_xlat5.x * 0.5;\n    u_xlat16_6.x = (u_xlatb2) ? 0.0 : u_xlat5.x;\n   
            u_xlat5.xyz = u_xlat21.xyz * vec3(u_xlat61);\n    u_xlat16_25.x = dot(u_xlat4.xyz,
            u_xlat5.xyz);\n    u_xlat16_25.x = max(u_xlat16_25.x, 0.0);\n    u_xlat16_7.xyz
            = u_xlat16_25.xxx * _Color.xyz;\n    u_xlatb2 = 0.0<u_xlat16_25.x;\n   
            u_xlat16_25.xyz = u_xlat16_7.xyz * unity_LightColor[0].xyz;\n    u_xlat16_25.xyz
            = u_xlat16_6.xxx * u_xlat16_25.xyz;\n    u_xlat16_25.xyz = min(u_xlat16_25.xyz,
            vec3(1.0, 1.0, 1.0));\n    u_xlat16_7.xyz = _Color.xyz * glstate_lightmodel_ambient.xyz
            + _Emission.xyz;\n    u_xlat16_25.xyz = u_xlat16_25.xyz + u_xlat16_7.xyz;\n   
            u_xlatb5 = 0<unity_VertexLightParams.x;\n    u_xlat16_25.xyz = (bool(u_xlatb5))
            ? u_xlat16_25.xyz : u_xlat16_7.xyz;\n    u_xlat16_22.xyz = u_xlat16_22.xyz
            + u_xlat16_25.xyz;\n    u_xlati24 = u_xlatb5 ? 1 : int(0);\n    u_xlatb43
            = u_xlati24<unity_VertexLightParams.x;\n    u_xlati24 = (u_xlatb43) ?
            2 : u_xlati24;\n    u_xlat16_22.xyz = (bool(u_xlatb43)) ? u_xlat16_22.xyz
            : u_xlat16_25.xyz;\n    u_xlat8.xyz = (-u_xlat19.xyz) * unity_LightPosition[2].www
            + unity_LightPosition[2].xyz;\n    u_xlat62 = dot(u_xlat8.xyz, u_xlat8.xyz);\n   
            u_xlatb65 = unity_LightAtten[2].w<u_xlat62;\n    u_xlatb9 = unity_LightPosition[2].w!=0.0;\n   
            u_xlatb65 = u_xlatb65 && u_xlatb9;\n    u_xlat9.x = unity_LightAtten[2].z
            * u_xlat62 + 1.0;\n    u_xlat62 = max(u_xlat62, 9.99999997e-07);\n   
            u_xlat62 = inversesqrt(u_xlat62);\n    u_xlat9.x = float(1.0) / u_xlat9.x;\n   
            u_xlat9.x = u_xlat9.x * 0.5;\n    u_xlat16_25.x = (u_xlatb65) ? 0.0 :
            u_xlat9.x;\n    u_xlat9.xyz = vec3(u_xlat62) * u_xlat8.xyz;\n    u_xlat16_44
            = dot(u_xlat4.xyz, u_xlat9.xyz);\n    u_xlat16_44 = max(u_xlat16_44,
            0.0);\n    u_xlat16_7.xyz = vec3(u_xlat16_44) * _Color.xyz;\n    u_xlatb65
            = 0.0<u_xlat16_44;\n    u_xlat16_7.xyz = u_xlat16_7.xyz * unity_LightColor[2].xyz;\n   
            u_xlat16_7.xyz = u_xlat16_25.xxx * u_xlat16_7.xyz;\n    u_xlat16_7.xyz
            = min(u_xlat16_7.xyz, vec3(1.0, 1.0, 1.0));\n    u_xlat16_7.xyz = u_xlat16_22.xyz
            + u_xlat16_7.xyz;\n    u_xlatb9 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb9 = u_xlatb43 && u_xlatb9;\n    u_xlat16_22.xyz = (bool(u_xlatb9))
            ? u_xlat16_7.xyz : u_xlat16_22.xyz;\n    u_xlat28.xyz = (-u_xlat19.xyz)
            * unity_LightPosition[3].www + unity_LightPosition[3].xyz;\n    u_xlat10
            = dot(u_xlat28.xyz, u_xlat28.xyz);\n    u_xlatb29 = unity_LightAtten[3].w<u_xlat10;\n   
            u_xlatb48 = unity_LightPosition[3].w!=0.0;\n    u_xlatb29 = u_xlatb29
            && u_xlatb48;\n    u_xlat48 = unity_LightAtten[3].z * u_xlat10 + 1.0;\n   
            u_xlat10 = max(u_xlat10, 9.99999997e-07);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            u_xlat48 = float(1.0) / u_xlat48;\n    u_xlat48 = u_xlat48 * 0.5;\n   
            u_xlat16_44 = (u_xlatb29) ? 0.0 : u_xlat48;\n    u_xlat29.xyz = u_xlat28.xyz
            * vec3(u_xlat10);\n    u_xlat16_63 = dot(u_xlat4.xyz, u_xlat29.xyz);\n   
            u_xlat16_63 = max(u_xlat16_63, 0.0);\n    u_xlat16_7.xyz = vec3(u_xlat16_63)
            * _Color.xyz;\n    u_xlatb29 = 0.0<u_xlat16_63;\n    u_xlat16_7.xyz =
            u_xlat16_7.xyz * unity_LightColor[3].xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_44)
            * u_xlat16_7.xyz;\n    u_xlat16_7.xyz = min(u_xlat16_7.xyz, vec3(1.0,
            1.0, 1.0));\n    u_xlat16_7.xyz = u_xlat16_22.xyz + u_xlat16_7.xyz;\n   
            u_xlati24 = (u_xlatb9) ? 3 : u_xlati24;\n    u_xlatb48 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb48 = u_xlatb9 && u_xlatb48;\n    u_xlat16_22.xyz = (bool(u_xlatb48))
            ? u_xlat16_7.xyz : u_xlat16_22.xyz;\n    u_xlat11.xyz = (-u_xlat19.xyz)
            * unity_LightPosition[4].www + unity_LightPosition[4].xyz;\n    u_xlat67
            = dot(u_xlat11.xyz, u_xlat11.xyz);\n    u_xlatb68 = unity_LightAtten[4].w<u_xlat67;\n   
            u_xlatb12 = unity_LightPosition[4].w!=0.0;\n    u_xlatb68 = u_xlatb68
            && u_xlatb12;\n    u_xlat12.x = unity_LightAtten[4].z * u_xlat67 + 1.0;\n   
            u_xlat67 = max(u_xlat67, 9.99999997e-07);\n    u_xlat67 = inversesqrt(u_xlat67);\n   
            u_xlat12.x = float(1.0) / u_xlat12.x;\n    u_xlat12.x = u_xlat12.x *
            0.5;\n    u_xlat16_63 = (u_xlatb68) ? 0.0 : u_xlat12.x;\n    u_xlat12.xyz
            = vec3(u_xlat67) * u_xlat11.xyz;\n    u_xlat16_7.x = dot(u_xlat4.xyz,
            u_xlat12.xyz);\n    u_xlat16_7.x = max(u_xlat16_7.x, 0.0);\n    u_xlat16_26.xyz
            = u_xlat16_7.xxx * _Color.xyz;\n    u_xlatb68 = 0.0<u_xlat16_7.x;\n   
            u_xlat16_7.xyz = u_xlat16_26.xyz * unity_LightColor[4].xyz;\n    u_xlat16_7.xyz
            = vec3(u_xlat16_63) * u_xlat16_7.xyz;\n    u_xlat16_7.xyz = min(u_xlat16_7.xyz,
            vec3(1.0, 1.0, 1.0));\n    u_xlat16_7.xyz = u_xlat16_22.xyz + u_xlat16_7.xyz;\n   
            u_xlati24 = (u_xlatb48) ? 4 : u_xlati24;\n    u_xlatb12 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb12 = u_xlatb48 && u_xlatb12;\n    u_xlat16_22.xyz = (bool(u_xlatb12))
            ? u_xlat16_7.xyz : u_xlat16_22.xyz;\n    u_xlat31.xyz = (-u_xlat19.xyz)
            * unity_LightPosition[5].www + unity_LightPosition[5].xyz;\n    u_xlat13
            = dot(u_xlat31.xyz, u_xlat31.xyz);\n    u_xlatb32 = unity_LightAtten[5].w<u_xlat13;\n   
            u_xlatb51 = unity_LightPosition[5].w!=0.0;\n    u_xlatb32 = u_xlatb32
            && u_xlatb51;\n    u_xlat51 = unity_LightAtten[5].z * u_xlat13 + 1.0;\n   
            u_xlat13 = max(u_xlat13, 9.99999997e-07);\n    u_xlat13 = inversesqrt(u_xlat13);\n   
            u_xlat51 = float(1.0) / u_xlat51;\n    u_xlat51 = u_xlat51 * 0.5;\n   
            u_xlat16_7.x = (u_xlatb32) ? 0.0 : u_xlat51;\n    u_xlat32.xyz = u_xlat31.xyz
            * vec3(u_xlat13);\n    u_xlat16_26.x = dot(u_xlat4.xyz, u_xlat32.xyz);\n   
            u_xlat16_26.x = max(u_xlat16_26.x, 0.0);\n    u_xlat16_14.xyz = u_xlat16_26.xxx
            * _Color.xyz;\n    u_xlatb32 = 0.0<u_xlat16_26.x;\n    u_xlat16_26.xyz
            = u_xlat16_14.xyz * unity_LightColor[5].xyz;\n    u_xlat16_26.xyz = u_xlat16_7.xxx
            * u_xlat16_26.xyz;\n    u_xlat16_26.xyz = min(u_xlat16_26.xyz, vec3(1.0,
            1.0, 1.0));\n    u_xlat16_26.xyz = u_xlat16_22.xyz + u_xlat16_26.xyz;\n   
            u_xlati24 = (u_xlatb12) ? 5 : u_xlati24;\n    u_xlatb51 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb51 = u_xlatb12 && u_xlatb51;\n    u_xlat16_22.xyz = (bool(u_xlatb51))
            ? u_xlat16_26.xyz : u_xlat16_22.xyz;\n    u_xlat15.xyz = (-u_xlat19.xyz)
            * unity_LightPosition[6].www + unity_LightPosition[6].xyz;\n    u_xlat70
            = dot(u_xlat15.xyz, u_xlat15.xyz);\n    u_xlatb72 = unity_LightAtten[6].w<u_xlat70;\n   
            u_xlatb16 = unity_LightPosition[6].w!=0.0;\n    u_xlatb72 = u_xlatb72
            && u_xlatb16;\n    u_xlat16.x = unity_LightAtten[6].z * u_xlat70 + 1.0;\n   
            u_xlat70 = max(u_xlat70, 9.99999997e-07);\n    u_xlat70 = inversesqrt(u_xlat70);\n   
            u_xlat16.x = float(1.0) / u_xlat16.x;\n    u_xlat16.x = u_xlat16.x *
            0.5;\n    u_xlat16_26.x = (u_xlatb72) ? 0.0 : u_xlat16.x;\n    u_xlat16.xyz
            = vec3(u_xlat70) * u_xlat15.xyz;\n    u_xlat16_45 = dot(u_xlat4.xyz,
            u_xlat16.xyz);\n    u_xlat16_45 = max(u_xlat16_45, 0.0);\n    u_xlat16_14.xyz
            = vec3(u_xlat16_45) * _Color.xyz;\n    u_xlatb72 = 0.0<u_xlat16_45;\n   
            u_xlat16_14.xyz = u_xlat16_14.xyz * unity_LightColor[6].xyz;\n    u_xlat16_14.xyz
            = u_xlat16_26.xxx * u_xlat16_14.xyz;\n    u_xlat16_14.xyz = min(u_xlat16_14.xyz,
            vec3(1.0, 1.0, 1.0));\n    u_xlat16_14.xyz = u_xlat16_22.xyz + u_xlat16_14.xyz;\n   
            u_xlati24 = (u_xlatb51) ? 6 : u_xlati24;\n    u_xlatb16 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb16 = u_xlatb51 && u_xlatb16;\n    u_xlat16_22.xyz = (bool(u_xlatb16))
            ? u_xlat16_14.xyz : u_xlat16_22.xyz;\n    u_xlat35.xyz = (-u_xlat19.xyz)
            * unity_LightPosition[7].www + unity_LightPosition[7].xyz;\n    u_xlat17
            = dot(u_xlat35.xyz, u_xlat35.xyz);\n    u_xlatb36 = unity_LightAtten[7].w<u_xlat17;\n   
            u_xlatb55 = unity_LightPosition[7].w!=0.0;\n    u_xlatb36 = u_xlatb36
            && u_xlatb55;\n    u_xlat55 = unity_LightAtten[7].z * u_xlat17 + 1.0;\n   
            u_xlat17 = max(u_xlat17, 9.99999997e-07);\n    u_xlat17 = inversesqrt(u_xlat17);\n   
            u_xlat55 = float(1.0) / u_xlat55;\n    u_xlat55 = u_xlat55 * 0.5;\n   
            u_xlat16_45 = (u_xlatb36) ? 0.0 : u_xlat55;\n    u_xlat36.xyz = u_xlat35.xyz
            * vec3(u_xlat17);\n    u_xlat16_64 = dot(u_xlat4.xyz, u_xlat36.xyz);\n   
            u_xlat16_64 = max(u_xlat16_64, 0.0);\n    u_xlat16_14.xyz = vec3(u_xlat16_64)
            * _Color.xyz;\n    u_xlatb36 = 0.0<u_xlat16_64;\n    u_xlat16_14.xyz
            = u_xlat16_14.xyz * unity_LightColor[7].xyz;\n    u_xlat16_14.xyz = vec3(u_xlat16_45)
            * u_xlat16_14.xyz;\n    u_xlat16_14.xyz = min(u_xlat16_14.xyz, vec3(1.0,
            1.0, 1.0));\n    u_xlat16_14.xyz = u_xlat16_22.xyz + u_xlat16_14.xyz;\n   
            u_xlati24 = (u_xlatb16) ? 7 : u_xlati24;\n    u_xlatb24 = u_xlati24<unity_VertexLightParams.x;\n   
            u_xlatb24 = u_xlatb24 && u_xlatb16;\n    vs_COLOR0.xyz = (bool(u_xlatb24))
            ? u_xlat16_14.xyz : u_xlat16_22.xyz;\n    vs_COLOR0.xyz = clamp(vs_COLOR0.xyz,
            0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n    vs_COLOR0.w = clamp(vs_COLOR0.w,
            0.0, 1.0);\n    u_xlat55 = dot(u_xlat19.xyz, u_xlat19.xyz);\n    u_xlat55
            = inversesqrt(u_xlat55);\n    u_xlat19.xyz = u_xlat19.xyz * vec3(u_xlat55);\n   
            u_xlat16_22.xyz = u_xlat21.xyz * vec3(u_xlat61) + (-u_xlat19.xyz);\n   
            u_xlat16_64 = dot(u_xlat16_22.xyz, u_xlat16_22.xyz);\n    u_xlat16_64
            = inversesqrt(u_xlat16_64);\n    u_xlat16_22.xyz = u_xlat16_22.xyz *
            vec3(u_xlat16_64);\n    u_xlat16_22.x = dot(u_xlat4.xyz, u_xlat16_22.xyz);\n   
            u_xlat16_22.x = max(u_xlat16_22.x, 0.0);\n    u_xlat16_22.x = log2(u_xlat16_22.x);\n   
            u_xlat16_41 = _Shininess * 128.0;\n    u_xlat16_22.x = u_xlat16_22.x
            * u_xlat16_41;\n    u_xlat16_22.x = exp2(u_xlat16_22.x);\n    u_xlat16_22.x
            = min(u_xlat16_22.x, 1.0);\n    u_xlat16_22.x = u_xlat16_22.x * u_xlat16_6.x;\n   
            u_xlat16_14.xyz = u_xlat16_22.xxx * unity_LightColor[0].xyz;\n    u_xlat16_14.xyz
            = (bool(u_xlatb2)) ? u_xlat16_14.xyz : vec3(0.0, 0.0, 0.0);\n    u_xlat16_14.xyz
            = (bool(u_xlatb5)) ? u_xlat16_14.xyz : vec3(0.0, 0.0, 0.0);\n    u_xlat16_18.xyz
            = u_xlat1.xyz * vec3(u_xlat58) + (-u_xlat19.xyz);\n    u_xlat16_22.x
            = dot(u_xlat16_18.xyz, u_xlat16_18.xyz);\n    u_xlat16_22.x = inversesqrt(u_xlat16_22.x);\n   
            u_xlat16_18.xyz = u_xlat16_22.xxx * u_xlat16_18.xyz;\n    u_xlat16_22.x
            = dot(u_xlat4.xyz, u_xlat16_18.xyz);\n    u_xlat16_22.x = max(u_xlat16_22.x,
            0.0);\n    u_xlat16_22.x = log2(u_xlat16_22.x);\n    u_xlat16_22.x =
            u_xlat16_22.x * u_xlat16_41;\n    u_xlat16_22.x = exp2(u_xlat16_22.x);\n   
            u_xlat16_22.x = min(u_xlat16_22.x, 1.0);\n    u_xlat16_3.x = u_xlat16_22.x
            * u_xlat16_3.x;\n    u_xlat16_3.xyw = u_xlat16_3.xxx * unity_LightColor[1].xyz
            + u_xlat16_14.xyz;\n    u_xlat16_3.xyw = (bool(u_xlatb0)) ? u_xlat16_3.xyw
            : u_xlat16_14.xyz;\n    u_xlat16_3.xyw = (bool(u_xlatb43)) ? u_xlat16_3.xyw
            : u_xlat16_14.xyz;\n    u_xlat16_14.xyz = u_xlat8.xyz * vec3(u_xlat62)
            + (-u_xlat19.xyz);\n    u_xlat16_6.x = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n   
            u_xlat16_6.x = inversesqrt(u_xlat16_6.x);\n    u_xlat16_14.xyz = u_xlat16_6.xxx
            * u_xlat16_14.xyz;\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_14.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_6.x = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_6.x = exp2(u_xlat16_6.x);\n   
            u_xlat16_6.x = min(u_xlat16_6.x, 1.0);\n    u_xlat16_6.x = u_xlat16_6.x
            * u_xlat16_25.x;\n    u_xlat16_14.xyz = u_xlat16_6.xxx * unity_LightColor[2].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_14.xyz = (bool(u_xlatb65)) ? u_xlat16_14.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyw = (bool(u_xlatb9)) ? u_xlat16_14.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_14.xyz = u_xlat28.xyz * vec3(u_xlat10)
            + (-u_xlat19.xyz);\n    u_xlat16_6.x = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n   
            u_xlat16_6.x = inversesqrt(u_xlat16_6.x);\n    u_xlat16_14.xyz = u_xlat16_6.xxx
            * u_xlat16_14.xyz;\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_14.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_6.x = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_6.x = exp2(u_xlat16_6.x);\n   
            u_xlat16_6.x = min(u_xlat16_6.x, 1.0);\n    u_xlat16_6.x = u_xlat16_6.x
            * u_xlat16_44;\n    u_xlat16_6.xyz = u_xlat16_6.xxx * unity_LightColor[3].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_6.xyz = (bool(u_xlatb29)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyw = (bool(u_xlatb48)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_6.xyz = u_xlat11.xyz * vec3(u_xlat67)
            + (-u_xlat19.xyz);\n    u_xlat16_64 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_64 = inversesqrt(u_xlat16_64);\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            * vec3(u_xlat16_64);\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_6.x = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_6.x = exp2(u_xlat16_6.x);\n   
            u_xlat16_6.x = min(u_xlat16_6.x, 1.0);\n    u_xlat16_6.x = u_xlat16_6.x
            * u_xlat16_63;\n    u_xlat16_6.xyz = u_xlat16_6.xxx * unity_LightColor[4].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_6.xyz = (bool(u_xlatb68)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyw = (bool(u_xlatb12)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_6.xyz = u_xlat31.xyz * vec3(u_xlat13)
            + (-u_xlat19.xyz);\n    u_xlat16_63 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_63 = inversesqrt(u_xlat16_63);\n    u_xlat16_6.xyz = vec3(u_xlat16_63)
            * u_xlat16_6.xyz;\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_6.x = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_6.x = exp2(u_xlat16_6.x);\n   
            u_xlat16_6.x = min(u_xlat16_6.x, 1.0);\n    u_xlat16_6.x = u_xlat16_6.x
            * u_xlat16_7.x;\n    u_xlat16_6.xyz = u_xlat16_6.xxx * unity_LightColor[5].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_6.xyz = (bool(u_xlatb32)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyw = (bool(u_xlatb51)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_6.xyz = u_xlat15.xyz * vec3(u_xlat70)
            + (-u_xlat19.xyz);\n    u_xlat16_14.xyz = u_xlat35.xyz * vec3(u_xlat17)
            + (-u_xlat19.xyz);\n    u_xlat16_63 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_63 = inversesqrt(u_xlat16_63);\n    u_xlat16_6.xyz = vec3(u_xlat16_63)
            * u_xlat16_6.xyz;\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_6.x = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_6.x = exp2(u_xlat16_6.x);\n   
            u_xlat16_6.x = min(u_xlat16_6.x, 1.0);\n    u_xlat16_6.x = u_xlat16_6.x
            * u_xlat16_26.x;\n    u_xlat16_6.xyz = u_xlat16_6.xxx * unity_LightColor[6].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_6.xyz = (bool(u_xlatb72)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyw = (bool(u_xlatb16)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_6.x = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n   
            u_xlat16_6.x = inversesqrt(u_xlat16_6.x);\n    u_xlat16_6.xyz = u_xlat16_6.xxx
            * u_xlat16_14.xyz;\n    u_xlat16_6.x = dot(u_xlat4.xyz, u_xlat16_6.xyz);\n   
            u_xlat16_6.x = max(u_xlat16_6.x, 0.0);\n    u_xlat16_6.x = log2(u_xlat16_6.x);\n   
            u_xlat16_41 = u_xlat16_41 * u_xlat16_6.x;\n    u_xlat16_41 = exp2(u_xlat16_41);\n   
            u_xlat16_41 = min(u_xlat16_41, 1.0);\n    u_xlat16_41 = u_xlat16_41 *
            u_xlat16_45;\n    u_xlat16_6.xyz = vec3(u_xlat16_41) * unity_LightColor[7].xyz
            + u_xlat16_3.xyw;\n    u_xlat16_6.xyz = (bool(u_xlatb36)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    u_xlat16_3.xyz = (bool(u_xlatb24)) ? u_xlat16_6.xyz
            : u_xlat16_3.xyw;\n    vs_COLOR1.xyz = u_xlat16_3.xyz * _SpecColor.xyz;\n   
            vs_COLOR1.xyz = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin mediump vec3 vs_COLOR1;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec3 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_1.xyz = u_xlat16_0.xyz * vs_COLOR0.xyz;\n   
            SV_Target0.xyz = u_xlat16_1.xyz * vec3(2.0, 2.0, 2.0) + vs_COLOR1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: Vertex
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - POINT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _
        KeywordGroups:
        - Keywords:
          - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - POINT
          - SPOT
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 9
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 1
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: Vertex
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 unity_LightmapST;\nuniform
            \tvec4 unity_Lightmap_ST;\nuniform \tvec4 _MainTex_ST;\nattribute highp
            vec3 in_POSITION0;\nattribute highp vec3 in_TEXCOORD1;\nattribute highp
            vec3 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy
            + unity_LightmapST.zw;\n    vs_TEXCOORD1.xy = in_TEXCOORD1.xy * unity_Lightmap_ST.xy
            + unity_Lightmap_ST.zw;\n    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 unity_Lightmap_HDR;\nuniform \tmediump
            vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform mediump sampler2D
            unity_Lightmap;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2
            vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nlowp
            vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0
            = texture2D(unity_Lightmap, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * unity_Lightmap_HDR.x;\n    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xxx;\n   
            u_xlat16_1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD2.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat10_0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: VertexLM
          - Key: RenderType
            Value: Opaque
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 unity_LightmapST;\nuniform \tvec4 unity_Lightmap_ST;\nuniform
            \tvec4 _MainTex_ST;\nin highp vec3 in_POSITION0;\nin highp vec3 in_TEXCOORD1;\nin
            highp vec3 in_TEXCOORD0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec2
            vs_TEXCOORD1;\nout highp vec2 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy
            + unity_LightmapST.zw;\n    vs_TEXCOORD1.xy = in_TEXCOORD1.xy * unity_Lightmap_ST.xy
            + unity_Lightmap_ST.zw;\n    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 unity_Lightmap_HDR;\nuniform
            \tmediump vec4 _Color;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D unity_Lightmap;\nin highp vec2 vs_TEXCOORD0;\nin
            highp vec2 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0
            = texture(unity_Lightmap, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * unity_Lightmap_HDR.x;\n    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xxx;\n   
            u_xlat16_1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD2.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: LIGHTMODE
            Value: VertexLM
          - Key: RenderType
            Value: Opaque
        DefinedKeywords:
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 2
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
          passType: 2
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: VertexLM
        - Key: RenderType
          Value: Opaque
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords:
        - INSTANCING_ON
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - __
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SHADOWS_CUBE
          hasDiscard: 0
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - POINT
    - SPOT
    - SHADOWS_DEPTH
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - __
    - INSTANCING_ON
    - SHADOWS_CUBE
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 9
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 1
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 5
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 2
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
      passType: 2
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords: []
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform
            \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nattribute
            highp vec4 in_POSITION0;\nvarying mediump float vs_TEXCOORD0;\nvarying
            mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\nvec4
            u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4
            u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_4;\nvec4
            u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat8;\nvec3
            u_xlat13;\nfloat u_xlat16;\nfloat u_xlat21;\nfloat u_xlat24;\nfloat u_xlat25;\nfloat
            u_xlat26;\nmediump float u_xlat16_27;\nfloat u_xlat28;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat1.xyz = (-_SkyTint.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.300000012, 0.300000042,
            0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat1.xyz
            = u_xlat1.xyz * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat1.xyz;\n   
            u_xlat1.xyz = vec3(1.0, 1.0, 1.0) / u_xlat1.xyz;\n    u_xlat16_3.x =
            log2(_AtmosphereThickness);\n    u_xlat16_3.x = u_xlat16_3.x * 2.5;\n   
            u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_3.xy = u_xlat16_3.xx
            * vec2(0.049999997, 0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.xyz = vec3(u_xlat24) *
            u_xlat0.xyz;\n    u_xlatb0 = u_xlat2.y>=0.0;\n    if(u_xlatb0){\n       
            u_xlat0.x = u_xlat2.y * u_xlat2.y + 0.0506249666;\n        u_xlat0.x
            = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n       
            u_xlat8 = (-u_xlat0.y) * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8
            * 5.25 + -6.80000019;\n        u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n       
            u_xlat16 = u_xlat8 * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8
            * u_xlat16 + -0.00286999997;\n        u_xlat8 = u_xlat8 * 1.44269502;\n       
            u_xlat0.y = exp2(u_xlat8);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5,
            0.246031836, 20.0);\n        u_xlat4.xyz = u_xlat0.xxx * u_xlat2.xyz;\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002,
            0.0);\n        u_xlat24 = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat24
            = sqrt(u_xlat24);\n        u_xlat25 = (-u_xlat24) + 1.0;\n        u_xlat25
            = u_xlat25 * 230.831207;\n        u_xlat25 = exp2(u_xlat25);\n       
            u_xlat26 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);\n        u_xlat26
            = u_xlat26 / u_xlat24;\n        u_xlat28 = dot(u_xlat2.xyz, u_xlat4.xyz);\n       
            u_xlat24 = u_xlat28 / u_xlat24;\n        u_xlat26 = (-u_xlat26) + 1.0;\n       
            u_xlat28 = u_xlat26 * 5.25 + -6.80000019;\n        u_xlat28 = u_xlat26
            * u_xlat28 + 3.82999992;\n        u_xlat28 = u_xlat26 * u_xlat28 + 0.458999991;\n       
            u_xlat26 = u_xlat26 * u_xlat28 + -0.00286999997;\n        u_xlat26 =
            u_xlat26 * 1.44269502;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat24
            = (-u_xlat24) + 1.0;\n        u_xlat28 = u_xlat24 * 5.25 + -6.80000019;\n       
            u_xlat28 = u_xlat24 * u_xlat28 + 3.82999992;\n        u_xlat28 = u_xlat24
            * u_xlat28 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat28 + -0.00286999997;\n       
            u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n       
            u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat26 * 0.25 + (-u_xlat24);\n       
            u_xlat24 = u_xlat25 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24,
            0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat5.xyz =
            u_xlat1.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat6.xyz = (-vec3(u_xlat24)) * u_xlat5.xyz;\n        u_xlat6.xyz =
            u_xlat6.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat6.xyz
            = exp2(u_xlat6.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat25;\n       
            u_xlat4.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat4.xyz;\n        u_xlat0.x
            = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat25 = (-u_xlat0.x) + 1.0;\n        u_xlat25 = u_xlat25 * 230.831207;\n       
            u_xlat25 = exp2(u_xlat25);\n        u_xlat26 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n        u_xlat26 = u_xlat26 / u_xlat0.x;\n        u_xlat4.x
            = dot(u_xlat2.xyz, u_xlat4.xyz);\n        u_xlat0.x = u_xlat4.x / u_xlat0.x;\n       
            u_xlat26 = (-u_xlat26) + 1.0;\n        u_xlat4.x = u_xlat26 * 5.25 +
            -6.80000019;\n        u_xlat4.x = u_xlat26 * u_xlat4.x + 3.82999992;\n       
            u_xlat4.x = u_xlat26 * u_xlat4.x + 0.458999991;\n        u_xlat26 = u_xlat26
            * u_xlat4.x + -0.00286999997;\n        u_xlat26 = u_xlat26 * 1.44269502;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat4.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat4.x = u_xlat0.x
            * u_xlat4.x + 3.82999992;\n        u_xlat4.x = u_xlat0.x * u_xlat4.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat4.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat26 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat25 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat4.xyz = u_xlat5.xyz * (-u_xlat0.xxx);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat4.xyz = exp2(u_xlat4.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat25;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat0.xyz = u_xlat6.xyz
            * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat4.xyz = u_xlat1.xyz *
            u_xlat16_3.xxx;\n        u_xlat4.xyz = u_xlat0.xyz * u_xlat4.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_4.xyz = u_xlat4.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat26 = min(u_xlat2.y, -0.00100000005);\n       
            u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat5.xyz = vec3(u_xlat26)
            * u_xlat2.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat5.w = dot((-u_xlat2.xyz),
            u_xlat5.xyz);\n        u_xlat5.x = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n       
            u_xlat5.xy = (-u_xlat5.xw) + vec2(1.0, 1.0);\n        u_xlat21 = u_xlat5.y
            * 5.25 + -6.80000019;\n        u_xlat21 = u_xlat5.y * u_xlat21 + 3.82999992;\n       
            u_xlat21 = u_xlat5.y * u_xlat21 + 0.458999991;\n        u_xlat13.x =
            u_xlat5.y * u_xlat21 + -0.00286999997;\n        u_xlat13.x = u_xlat13.x
            * 1.44269502;\n        u_xlat5.y = exp2(u_xlat13.x);\n        u_xlat21
            = u_xlat5.x * 5.25 + -6.80000019;\n        u_xlat21 = u_xlat5.x * u_xlat21
            + 3.82999992;\n        u_xlat21 = u_xlat5.x * u_xlat21 + 0.458999991;\n       
            u_xlat5.x = u_xlat5.x * u_xlat21 + -0.00286999997;\n        u_xlat5.xyz
            = u_xlat5.xyy * vec3(1.44269502, 0.25, 0.249900013);\n        u_xlat5.x
            = exp2(u_xlat5.x);\n        u_xlat5.x = u_xlat5.x * 0.25 + u_xlat5.y;\n       
            u_xlat13.xz = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat6.xyz
            = u_xlat2.xyz * u_xlat13.xxx;\n        u_xlat6.xyz = u_xlat6.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat6.xyz,
            u_xlat6.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 =
            (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat5.x = u_xlat26 * u_xlat5.x
            + (-u_xlat5.z);\n        u_xlat5.x = max(u_xlat5.x, 0.0);\n        u_xlat5.x
            = min(u_xlat5.x, 50.0);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat5.xyz
            = (-u_xlat5.xxx) * u_xlat6.xyz;\n        u_xlat5.xyz = u_xlat5.xyz *
            vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat5.xyz);\n       
            u_xlat26 = u_xlat13.z * u_xlat26;\n        u_xlat5.xyz = u_xlat0.xyz
            * vec3(u_xlat26);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.xxx
            + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat4.xyz
            = u_xlat5.xyz * u_xlat6.xyz;\n        u_xlat16_4.xyz = u_xlat4.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat26 = u_xlat2.y * -50.0;\n   
            u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z)
            * vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z);\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_27 = dot(_WorldSpaceLightPos0.xyz,
            (-u_xlat2.xyz));\n    u_xlat16_27 = u_xlat16_27 * u_xlat16_27;\n    u_xlat16_27
            = u_xlat16_27 * 0.75 + 0.75;\n    u_xlat16_7.xyz = vec3(u_xlat16_27)
            * u_xlat16_4.xyz;\n    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Exposure);\n   
            vs_TEXCOORD1.xyz = sqrt(u_xlat16_3.xyz);\n    vs_TEXCOORD2.xyz = sqrt(u_xlat16_7.xyz);\n   
            vs_TEXCOORD0 = u_xlat26;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nvarying mediump float vs_TEXCOORD0;\nvarying mediump vec3
            vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nmediump float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat16_0 = vs_TEXCOORD0;\n    u_xlat16_0 = clamp(u_xlat16_0,
            0.0, 1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n   
            SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_NONE
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump float _Exposure;\nuniform
            \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform
            \tmediump float _AtmosphereThickness;\nin highp vec4 in_POSITION0;\nout
            mediump float vs_TEXCOORD0;\nout mediump vec3 vs_TEXCOORD1;\nout mediump
            vec3 vs_TEXCOORD2;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump
            vec3 u_xlat16_4;\nvec4 u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nfloat
            u_xlat8;\nvec3 u_xlat13;\nfloat u_xlat16;\nfloat u_xlat21;\nfloat u_xlat24;\nfloat
            u_xlat25;\nfloat u_xlat26;\nmediump float u_xlat16_27;\nfloat u_xlat28;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat1.xyz = (-_SkyTint.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.300000012, 0.300000042,
            0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat1.xyz
            = u_xlat1.xyz * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat1.xyz;\n   
            u_xlat1.xyz = vec3(1.0, 1.0, 1.0) / u_xlat1.xyz;\n    u_xlat16_3.x =
            log2(_AtmosphereThickness);\n    u_xlat16_3.x = u_xlat16_3.x * 2.5;\n   
            u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_3.xy = u_xlat16_3.xx
            * vec2(0.049999997, 0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.xyz = vec3(u_xlat24) *
            u_xlat0.xyz;\n    u_xlatb0 = u_xlat2.y>=0.0;\n    if(u_xlatb0){\n       
            u_xlat0.x = u_xlat2.y * u_xlat2.y + 0.0506249666;\n        u_xlat0.x
            = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n       
            u_xlat8 = (-u_xlat0.y) * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8
            * 5.25 + -6.80000019;\n        u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n       
            u_xlat16 = u_xlat8 * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8
            * u_xlat16 + -0.00286999997;\n        u_xlat8 = u_xlat8 * 1.44269502;\n       
            u_xlat0.y = exp2(u_xlat8);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5,
            0.246031836, 20.0);\n        u_xlat4.xyz = u_xlat0.xxx * u_xlat2.xyz;\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002,
            0.0);\n        u_xlat24 = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat24
            = sqrt(u_xlat24);\n        u_xlat25 = (-u_xlat24) + 1.0;\n        u_xlat25
            = u_xlat25 * 230.831207;\n        u_xlat25 = exp2(u_xlat25);\n       
            u_xlat26 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);\n        u_xlat26
            = u_xlat26 / u_xlat24;\n        u_xlat28 = dot(u_xlat2.xyz, u_xlat4.xyz);\n       
            u_xlat24 = u_xlat28 / u_xlat24;\n        u_xlat26 = (-u_xlat26) + 1.0;\n       
            u_xlat28 = u_xlat26 * 5.25 + -6.80000019;\n        u_xlat28 = u_xlat26
            * u_xlat28 + 3.82999992;\n        u_xlat28 = u_xlat26 * u_xlat28 + 0.458999991;\n       
            u_xlat26 = u_xlat26 * u_xlat28 + -0.00286999997;\n        u_xlat26 =
            u_xlat26 * 1.44269502;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat24
            = (-u_xlat24) + 1.0;\n        u_xlat28 = u_xlat24 * 5.25 + -6.80000019;\n       
            u_xlat28 = u_xlat24 * u_xlat28 + 3.82999992;\n        u_xlat28 = u_xlat24
            * u_xlat28 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat28 + -0.00286999997;\n       
            u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n       
            u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat26 * 0.25 + (-u_xlat24);\n       
            u_xlat24 = u_xlat25 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24,
            0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat5.xyz =
            u_xlat1.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat6.xyz = (-vec3(u_xlat24)) * u_xlat5.xyz;\n        u_xlat6.xyz =
            u_xlat6.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat6.xyz
            = exp2(u_xlat6.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat25;\n       
            u_xlat4.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat4.xyz;\n        u_xlat0.x
            = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat25 = (-u_xlat0.x) + 1.0;\n        u_xlat25 = u_xlat25 * 230.831207;\n       
            u_xlat25 = exp2(u_xlat25);\n        u_xlat26 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n        u_xlat26 = u_xlat26 / u_xlat0.x;\n        u_xlat4.x
            = dot(u_xlat2.xyz, u_xlat4.xyz);\n        u_xlat0.x = u_xlat4.x / u_xlat0.x;\n       
            u_xlat26 = (-u_xlat26) + 1.0;\n        u_xlat4.x = u_xlat26 * 5.25 +
            -6.80000019;\n        u_xlat4.x = u_xlat26 * u_xlat4.x + 3.82999992;\n       
            u_xlat4.x = u_xlat26 * u_xlat4.x + 0.458999991;\n        u_xlat26 = u_xlat26
            * u_xlat4.x + -0.00286999997;\n        u_xlat26 = u_xlat26 * 1.44269502;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat4.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat4.x = u_xlat0.x
            * u_xlat4.x + 3.82999992;\n        u_xlat4.x = u_xlat0.x * u_xlat4.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat4.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat26 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat25 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat4.xyz = u_xlat5.xyz * (-u_xlat0.xxx);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat4.xyz = exp2(u_xlat4.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat25;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat0.xyz = u_xlat6.xyz
            * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat4.xyz = u_xlat1.xyz *
            u_xlat16_3.xxx;\n        u_xlat4.xyz = u_xlat0.xyz * u_xlat4.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_4.xyz = u_xlat4.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat26 = min(u_xlat2.y, -0.00100000005);\n       
            u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat5.xyz = vec3(u_xlat26)
            * u_xlat2.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat5.w = dot((-u_xlat2.xyz),
            u_xlat5.xyz);\n        u_xlat5.x = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n       
            u_xlat5.xy = (-u_xlat5.xw) + vec2(1.0, 1.0);\n        u_xlat21 = u_xlat5.y
            * 5.25 + -6.80000019;\n        u_xlat21 = u_xlat5.y * u_xlat21 + 3.82999992;\n       
            u_xlat21 = u_xlat5.y * u_xlat21 + 0.458999991;\n        u_xlat13.x =
            u_xlat5.y * u_xlat21 + -0.00286999997;\n        u_xlat13.x = u_xlat13.x
            * 1.44269502;\n        u_xlat5.y = exp2(u_xlat13.x);\n        u_xlat21
            = u_xlat5.x * 5.25 + -6.80000019;\n        u_xlat21 = u_xlat5.x * u_xlat21
            + 3.82999992;\n        u_xlat21 = u_xlat5.x * u_xlat21 + 0.458999991;\n       
            u_xlat5.x = u_xlat5.x * u_xlat21 + -0.00286999997;\n        u_xlat5.xyz
            = u_xlat5.xyy * vec3(1.44269502, 0.25, 0.249900013);\n        u_xlat5.x
            = exp2(u_xlat5.x);\n        u_xlat5.x = u_xlat5.x * 0.25 + u_xlat5.y;\n       
            u_xlat13.xz = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat6.xyz
            = u_xlat2.xyz * u_xlat13.xxx;\n        u_xlat6.xyz = u_xlat6.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat6.xyz,
            u_xlat6.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 =
            (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat5.x = u_xlat26 * u_xlat5.x
            + (-u_xlat5.z);\n        u_xlat5.x = max(u_xlat5.x, 0.0);\n        u_xlat5.x
            = min(u_xlat5.x, 50.0);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat5.xyz
            = (-u_xlat5.xxx) * u_xlat6.xyz;\n        u_xlat5.xyz = u_xlat5.xyz *
            vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat5.xyz);\n       
            u_xlat26 = u_xlat13.z * u_xlat26;\n        u_xlat5.xyz = u_xlat0.xyz
            * vec3(u_xlat26);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.xxx
            + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat4.xyz
            = u_xlat5.xyz * u_xlat6.xyz;\n        u_xlat16_4.xyz = u_xlat4.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat26 = u_xlat2.y * -50.0;\n   
            u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z)
            * vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z);\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_27 = dot(_WorldSpaceLightPos0.xyz,
            (-u_xlat2.xyz));\n    u_xlat16_27 = u_xlat16_27 * u_xlat16_27;\n    u_xlat16_27
            = u_xlat16_27 * 0.75 + 0.75;\n    u_xlat16_7.xyz = vec3(u_xlat16_27)
            * u_xlat16_4.xyz;\n    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Exposure);\n   
            vs_TEXCOORD1.xyz = sqrt(u_xlat16_3.xyz);\n    vs_TEXCOORD2.xyz = sqrt(u_xlat16_7.xyz);\n   
            vs_TEXCOORD0 = u_xlat26;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\nin mediump float vs_TEXCOORD0;\nin mediump vec3 vs_TEXCOORD1;\nin
            mediump vec3 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0
            = vs_TEXCOORD0;\n    u_xlat16_0 = clamp(u_xlat16_0, 0.0, 1.0);\n    u_xlat16_1.xyz
            = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n    SV_Target0.xyz = vec3(u_xlat16_0)
            * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_NONE
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump float _Exposure;\nuniform
            \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform
            \tmediump float _AtmosphereThickness;\nattribute highp vec4 in_POSITION0;\nvarying
            mediump vec3 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying
            mediump vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\nvec4
            u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4
            u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_4;\nvec4
            u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nfloat
            u_xlat9;\nvec3 u_xlat14;\nfloat u_xlat18;\nfloat u_xlat23;\nfloat u_xlat27;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_30;\nfloat u_xlat31;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat1.xyz = (-_SkyTint.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.300000012, 0.300000042,
            0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat1.xyz
            = u_xlat1.xyz * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat1.xyz;\n   
            u_xlat1.xyz = vec3(1.0, 1.0, 1.0) / u_xlat1.xyz;\n    u_xlat16_3.x =
            log2(_AtmosphereThickness);\n    u_xlat16_3.x = u_xlat16_3.x * 2.5;\n   
            u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_3.xy = u_xlat16_3.xx
            * vec2(0.049999997, 0.0314159282);\n    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat2.xyz = vec3(u_xlat27) *
            u_xlat0.xyz;\n    u_xlatb0 = u_xlat2.y>=0.0;\n    if(u_xlatb0){\n       
            u_xlat0.x = u_xlat2.y * u_xlat2.y + 0.0506249666;\n        u_xlat0.x
            = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat27 + u_xlat0.x;\n       
            u_xlat9 = (-u_xlat0.y) * u_xlat27 + 1.0;\n        u_xlat18 = u_xlat9
            * 5.25 + -6.80000019;\n        u_xlat18 = u_xlat9 * u_xlat18 + 3.82999992;\n       
            u_xlat18 = u_xlat9 * u_xlat18 + 0.458999991;\n        u_xlat9 = u_xlat9
            * u_xlat18 + -0.00286999997;\n        u_xlat9 = u_xlat9 * 1.44269502;\n       
            u_xlat0.y = exp2(u_xlat9);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5,
            0.246031836, 20.0);\n        u_xlat4.xyz = u_xlat0.xxx * u_xlat2.xyz;\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002,
            0.0);\n        u_xlat27 = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat27
            = sqrt(u_xlat27);\n        u_xlat28 = (-u_xlat27) + 1.0;\n        u_xlat28
            = u_xlat28 * 230.831207;\n        u_xlat28 = exp2(u_xlat28);\n       
            u_xlat29 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);\n        u_xlat29
            = u_xlat29 / u_xlat27;\n        u_xlat31 = dot(u_xlat2.xyz, u_xlat4.xyz);\n       
            u_xlat27 = u_xlat31 / u_xlat27;\n        u_xlat29 = (-u_xlat29) + 1.0;\n       
            u_xlat31 = u_xlat29 * 5.25 + -6.80000019;\n        u_xlat31 = u_xlat29
            * u_xlat31 + 3.82999992;\n        u_xlat31 = u_xlat29 * u_xlat31 + 0.458999991;\n       
            u_xlat29 = u_xlat29 * u_xlat31 + -0.00286999997;\n        u_xlat29 =
            u_xlat29 * 1.44269502;\n        u_xlat29 = exp2(u_xlat29);\n        u_xlat27
            = (-u_xlat27) + 1.0;\n        u_xlat31 = u_xlat27 * 5.25 + -6.80000019;\n       
            u_xlat31 = u_xlat27 * u_xlat31 + 3.82999992;\n        u_xlat31 = u_xlat27
            * u_xlat31 + 0.458999991;\n        u_xlat27 = u_xlat27 * u_xlat31 + -0.00286999997;\n       
            u_xlat27 = u_xlat27 * 1.44269502;\n        u_xlat27 = exp2(u_xlat27);\n       
            u_xlat27 = u_xlat27 * 0.25;\n        u_xlat27 = u_xlat29 * 0.25 + (-u_xlat27);\n       
            u_xlat27 = u_xlat28 * u_xlat27 + u_xlat0.y;\n        u_xlat27 = max(u_xlat27,
            0.0);\n        u_xlat27 = min(u_xlat27, 50.0);\n        u_xlat5.xyz =
            u_xlat1.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat6.xyz = (-vec3(u_xlat27)) * u_xlat5.xyz;\n        u_xlat6.xyz =
            u_xlat6.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat6.xyz
            = exp2(u_xlat6.xyz);\n        u_xlat27 = u_xlat0.z * u_xlat28;\n       
            u_xlat4.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat4.xyz;\n        u_xlat0.x
            = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat28 = (-u_xlat0.x) + 1.0;\n        u_xlat28 = u_xlat28 * 230.831207;\n       
            u_xlat28 = exp2(u_xlat28);\n        u_xlat29 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n        u_xlat29 = u_xlat29 / u_xlat0.x;\n        u_xlat4.x
            = dot(u_xlat2.xyz, u_xlat4.xyz);\n        u_xlat0.x = u_xlat4.x / u_xlat0.x;\n       
            u_xlat29 = (-u_xlat29) + 1.0;\n        u_xlat4.x = u_xlat29 * 5.25 +
            -6.80000019;\n        u_xlat4.x = u_xlat29 * u_xlat4.x + 3.82999992;\n       
            u_xlat4.x = u_xlat29 * u_xlat4.x + 0.458999991;\n        u_xlat29 = u_xlat29
            * u_xlat4.x + -0.00286999997;\n        u_xlat29 = u_xlat29 * 1.44269502;\n       
            u_xlat29 = exp2(u_xlat29);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat4.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat4.x = u_xlat0.x
            * u_xlat4.x + 3.82999992;\n        u_xlat4.x = u_xlat0.x * u_xlat4.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat4.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat29 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat28 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat4.xyz = u_xlat5.xyz * (-u_xlat0.xxx);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat4.xyz = exp2(u_xlat4.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat28;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat0.xyz = u_xlat6.xyz
            * vec3(u_xlat27) + u_xlat0.xyz;\n        u_xlat4.xyz = u_xlat1.xyz *
            u_xlat16_3.xxx;\n        u_xlat4.xyz = u_xlat0.xyz * u_xlat4.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_4.xyz = u_xlat4.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat29 = min(u_xlat2.y, -0.00100000005);\n       
            u_xlat29 = -9.99999975e-05 / u_xlat29;\n        u_xlat5.xyz = vec3(u_xlat29)
            * u_xlat2.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat5.w = dot((-u_xlat2.xyz),
            u_xlat5.xyz);\n        u_xlat5.x = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n       
            u_xlat5.xy = (-u_xlat5.xw) + vec2(1.0, 1.0);\n        u_xlat23 = u_xlat5.y
            * 5.25 + -6.80000019;\n        u_xlat23 = u_xlat5.y * u_xlat23 + 3.82999992;\n       
            u_xlat23 = u_xlat5.y * u_xlat23 + 0.458999991;\n        u_xlat14.x =
            u_xlat5.y * u_xlat23 + -0.00286999997;\n        u_xlat14.x = u_xlat14.x
            * 1.44269502;\n        u_xlat5.y = exp2(u_xlat14.x);\n        u_xlat23
            = u_xlat5.x * 5.25 + -6.80000019;\n        u_xlat23 = u_xlat5.x * u_xlat23
            + 3.82999992;\n        u_xlat23 = u_xlat5.x * u_xlat23 + 0.458999991;\n       
            u_xlat5.x = u_xlat5.x * u_xlat23 + -0.00286999997;\n        u_xlat5.xyz
            = u_xlat5.xyy * vec3(1.44269502, 0.25, 0.249900013);\n        u_xlat5.x
            = exp2(u_xlat5.x);\n        u_xlat5.x = u_xlat5.x * 0.25 + u_xlat5.y;\n       
            u_xlat14.xz = vec2(u_xlat29) * vec2(0.5, 20.0);\n        u_xlat6.xyz
            = u_xlat2.xyz * u_xlat14.xxx;\n        u_xlat6.xyz = u_xlat6.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat29 = dot(u_xlat6.xyz,
            u_xlat6.xyz);\n        u_xlat29 = sqrt(u_xlat29);\n        u_xlat29 =
            (-u_xlat29) + 1.0;\n        u_xlat29 = u_xlat29 * 230.831207;\n       
            u_xlat29 = exp2(u_xlat29);\n        u_xlat5.x = u_xlat29 * u_xlat5.x
            + (-u_xlat5.z);\n        u_xlat5.x = max(u_xlat5.x, 0.0);\n        u_xlat5.x
            = min(u_xlat5.x, 50.0);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat5.xyz
            = (-u_xlat5.xxx) * u_xlat6.xyz;\n        u_xlat5.xyz = u_xlat5.xyz *
            vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat5.xyz);\n       
            u_xlat29 = u_xlat14.z * u_xlat29;\n        u_xlat5.xyz = u_xlat0.xyz
            * vec3(u_xlat29);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.xxx
            + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat4.xyz
            = u_xlat5.xyz * u_xlat6.xyz;\n        u_xlat16_4.xyz = u_xlat4.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat16_3.xyz = vec3(_GroundColor.x,
            _GroundColor.y, _GroundColor.z) * vec3(_GroundColor.x, _GroundColor.y,
            _GroundColor.z);\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz
            + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n   
            u_xlat16_30 = dot(_WorldSpaceLightPos0.xyz, (-u_xlat2.xyz));\n    u_xlat16_30
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_30 = u_xlat16_30 * 0.75 +
            0.75;\n    u_xlat16_7.xyz = vec3(u_xlat16_30) * u_xlat16_4.xyz;\n   
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Exposure);\n    u_xlat16_30 =
            dot(_LightColor0.xyz, _LightColor0.xyz);\n    u_xlat16_30 = sqrt(u_xlat16_30);\n   
            u_xlat16_30 = max(u_xlat16_30, 0.25);\n    u_xlat16_30 = min(u_xlat16_30,
            1.0);\n    u_xlat16_8.xyz = u_xlat16_0.xyz * vec3(8000.0, 8000.0, 8000.0);\n   
            u_xlat16_8.xyz = clamp(u_xlat16_8.xyz, 0.0, 1.0);\n    u_xlat16_8.xyz
            = u_xlat16_8.xyz * _LightColor0.xyz;\n    u_xlat16_8.xyz = u_xlat16_8.xyz
            * vec3(27.0, 27.0, 27.0);\n    u_xlat16_8.xyz = u_xlat16_8.xyz / vec3(u_xlat16_30);\n   
            vs_TEXCOORD1.xyz = sqrt(u_xlat16_3.xyz);\n    vs_TEXCOORD2.xyz = sqrt(u_xlat16_7.xyz);\n   
            vs_TEXCOORD3.xyz = sqrt(u_xlat16_8.xyz);\n    vs_TEXCOORD0.xyz = (-u_xlat2.xyz);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump float
            _SunSize;\nvarying mediump vec3 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying
            mediump vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\n#define
            SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nbool
            u_xlatb2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n    u_xlat16_0.xyz
            = vs_TEXCOORD0.xyz + _WorldSpaceLightPos0.xyz;\n    u_xlat16_0.x = dot(u_xlat16_0.xyz,
            u_xlat16_0.xyz);\n    u_xlat16_0.x = sqrt(u_xlat16_0.x);\n    u_xlat16_3.x
            = float(1.0) / _SunSize;\n    u_xlat16_0.x = u_xlat16_3.x * u_xlat16_0.x;\n   
            u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);\n    u_xlat16_3.x = u_xlat16_0.x
            * -2.0 + 3.0;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;\n    u_xlat16_0.x
            = (-u_xlat16_3.x) * u_xlat16_0.x + 1.0;\n    u_xlat16_0.x = u_xlat16_0.x
            * u_xlat16_0.x;\n    u_xlat16_3.x = vs_TEXCOORD0.y * 50.0;\n    u_xlat16_3.x
            = clamp(u_xlat16_3.x, 0.0, 1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz
            + (-vs_TEXCOORD2.xyz);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_1.xyz
            + vs_TEXCOORD2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD3.xyz * u_xlat16_0.xxx
            + u_xlat16_3.xyz;\n    u_xlatb2 = vs_TEXCOORD0.y<0.0;\n    SV_Target0.xyz
            = (bool(u_xlatb2)) ? u_xlat16_1.xyz : u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_SIMPLE
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform
            \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nin
            highp vec4 in_POSITION0;\nout mediump vec3 vs_TEXCOORD0;\nout mediump
            vec3 vs_TEXCOORD1;\nout mediump vec3 vs_TEXCOORD2;\nout mediump vec3
            vs_TEXCOORD3;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump
            vec3 u_xlat16_4;\nvec4 u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nfloat u_xlat9;\nvec3 u_xlat14;\nfloat u_xlat18;\nfloat
            u_xlat23;\nfloat u_xlat27;\nfloat u_xlat28;\nfloat u_xlat29;\nmediump
            float u_xlat16_30;\nfloat u_xlat31;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat1.xyz
            = (-_SkyTint.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat1.xyz = u_xlat1.xyz
            * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5, 0.419999987,
            0.324999988);\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat1.xyz;\n    u_xlat1.xyz
            = u_xlat1.xyz * u_xlat1.xyz;\n    u_xlat1.xyz = vec3(1.0, 1.0, 1.0) /
            u_xlat1.xyz;\n    u_xlat16_3.x = log2(_AtmosphereThickness);\n    u_xlat16_3.x
            = u_xlat16_3.x * 2.5;\n    u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_3.xy
            = u_xlat16_3.xx * vec2(0.049999997, 0.0314159282);\n    u_xlat27 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat2.xyz
            = vec3(u_xlat27) * u_xlat0.xyz;\n    u_xlatb0 = u_xlat2.y>=0.0;\n   
            if(u_xlatb0){\n        u_xlat0.x = u_xlat2.y * u_xlat2.y + 0.0506249666;\n       
            u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat27
            + u_xlat0.x;\n        u_xlat9 = (-u_xlat0.y) * u_xlat27 + 1.0;\n       
            u_xlat18 = u_xlat9 * 5.25 + -6.80000019;\n        u_xlat18 = u_xlat9
            * u_xlat18 + 3.82999992;\n        u_xlat18 = u_xlat9 * u_xlat18 + 0.458999991;\n       
            u_xlat9 = u_xlat9 * u_xlat18 + -0.00286999997;\n        u_xlat9 = u_xlat9
            * 1.44269502;\n        u_xlat0.y = exp2(u_xlat9);\n        u_xlat0.xyz
            = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat4.xyz =
            u_xlat0.xxx * u_xlat2.xyz;\n        u_xlat4.xyz = u_xlat4.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat27 = dot(u_xlat4.xyz,
            u_xlat4.xyz);\n        u_xlat27 = sqrt(u_xlat27);\n        u_xlat28 =
            (-u_xlat27) + 1.0;\n        u_xlat28 = u_xlat28 * 230.831207;\n       
            u_xlat28 = exp2(u_xlat28);\n        u_xlat29 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n        u_xlat29 = u_xlat29 / u_xlat27;\n        u_xlat31
            = dot(u_xlat2.xyz, u_xlat4.xyz);\n        u_xlat27 = u_xlat31 / u_xlat27;\n       
            u_xlat29 = (-u_xlat29) + 1.0;\n        u_xlat31 = u_xlat29 * 5.25 + -6.80000019;\n       
            u_xlat31 = u_xlat29 * u_xlat31 + 3.82999992;\n        u_xlat31 = u_xlat29
            * u_xlat31 + 0.458999991;\n        u_xlat29 = u_xlat29 * u_xlat31 + -0.00286999997;\n       
            u_xlat29 = u_xlat29 * 1.44269502;\n        u_xlat29 = exp2(u_xlat29);\n       
            u_xlat27 = (-u_xlat27) + 1.0;\n        u_xlat31 = u_xlat27 * 5.25 + -6.80000019;\n       
            u_xlat31 = u_xlat27 * u_xlat31 + 3.82999992;\n        u_xlat31 = u_xlat27
            * u_xlat31 + 0.458999991;\n        u_xlat27 = u_xlat27 * u_xlat31 + -0.00286999997;\n       
            u_xlat27 = u_xlat27 * 1.44269502;\n        u_xlat27 = exp2(u_xlat27);\n       
            u_xlat27 = u_xlat27 * 0.25;\n        u_xlat27 = u_xlat29 * 0.25 + (-u_xlat27);\n       
            u_xlat27 = u_xlat28 * u_xlat27 + u_xlat0.y;\n        u_xlat27 = max(u_xlat27,
            0.0);\n        u_xlat27 = min(u_xlat27, 50.0);\n        u_xlat5.xyz =
            u_xlat1.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat6.xyz = (-vec3(u_xlat27)) * u_xlat5.xyz;\n        u_xlat6.xyz =
            u_xlat6.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat6.xyz
            = exp2(u_xlat6.xyz);\n        u_xlat27 = u_xlat0.z * u_xlat28;\n       
            u_xlat4.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat4.xyz;\n        u_xlat0.x
            = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat28 = (-u_xlat0.x) + 1.0;\n        u_xlat28 = u_xlat28 * 230.831207;\n       
            u_xlat28 = exp2(u_xlat28);\n        u_xlat29 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n        u_xlat29 = u_xlat29 / u_xlat0.x;\n        u_xlat4.x
            = dot(u_xlat2.xyz, u_xlat4.xyz);\n        u_xlat0.x = u_xlat4.x / u_xlat0.x;\n       
            u_xlat29 = (-u_xlat29) + 1.0;\n        u_xlat4.x = u_xlat29 * 5.25 +
            -6.80000019;\n        u_xlat4.x = u_xlat29 * u_xlat4.x + 3.82999992;\n       
            u_xlat4.x = u_xlat29 * u_xlat4.x + 0.458999991;\n        u_xlat29 = u_xlat29
            * u_xlat4.x + -0.00286999997;\n        u_xlat29 = u_xlat29 * 1.44269502;\n       
            u_xlat29 = exp2(u_xlat29);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat4.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat4.x = u_xlat0.x
            * u_xlat4.x + 3.82999992;\n        u_xlat4.x = u_xlat0.x * u_xlat4.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat4.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat29 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat28 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat4.xyz = u_xlat5.xyz * (-u_xlat0.xxx);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat4.xyz = exp2(u_xlat4.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat28;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat0.xyz = u_xlat6.xyz
            * vec3(u_xlat27) + u_xlat0.xyz;\n        u_xlat4.xyz = u_xlat1.xyz *
            u_xlat16_3.xxx;\n        u_xlat4.xyz = u_xlat0.xyz * u_xlat4.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_4.xyz = u_xlat4.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat29 = min(u_xlat2.y, -0.00100000005);\n       
            u_xlat29 = -9.99999975e-05 / u_xlat29;\n        u_xlat5.xyz = vec3(u_xlat29)
            * u_xlat2.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat5.w = dot((-u_xlat2.xyz),
            u_xlat5.xyz);\n        u_xlat5.x = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n       
            u_xlat5.xy = (-u_xlat5.xw) + vec2(1.0, 1.0);\n        u_xlat23 = u_xlat5.y
            * 5.25 + -6.80000019;\n        u_xlat23 = u_xlat5.y * u_xlat23 + 3.82999992;\n       
            u_xlat23 = u_xlat5.y * u_xlat23 + 0.458999991;\n        u_xlat14.x =
            u_xlat5.y * u_xlat23 + -0.00286999997;\n        u_xlat14.x = u_xlat14.x
            * 1.44269502;\n        u_xlat5.y = exp2(u_xlat14.x);\n        u_xlat23
            = u_xlat5.x * 5.25 + -6.80000019;\n        u_xlat23 = u_xlat5.x * u_xlat23
            + 3.82999992;\n        u_xlat23 = u_xlat5.x * u_xlat23 + 0.458999991;\n       
            u_xlat5.x = u_xlat5.x * u_xlat23 + -0.00286999997;\n        u_xlat5.xyz
            = u_xlat5.xyy * vec3(1.44269502, 0.25, 0.249900013);\n        u_xlat5.x
            = exp2(u_xlat5.x);\n        u_xlat5.x = u_xlat5.x * 0.25 + u_xlat5.y;\n       
            u_xlat14.xz = vec2(u_xlat29) * vec2(0.5, 20.0);\n        u_xlat6.xyz
            = u_xlat2.xyz * u_xlat14.xxx;\n        u_xlat6.xyz = u_xlat6.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat29 = dot(u_xlat6.xyz,
            u_xlat6.xyz);\n        u_xlat29 = sqrt(u_xlat29);\n        u_xlat29 =
            (-u_xlat29) + 1.0;\n        u_xlat29 = u_xlat29 * 230.831207;\n       
            u_xlat29 = exp2(u_xlat29);\n        u_xlat5.x = u_xlat29 * u_xlat5.x
            + (-u_xlat5.z);\n        u_xlat5.x = max(u_xlat5.x, 0.0);\n        u_xlat5.x
            = min(u_xlat5.x, 50.0);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat5.xyz
            = (-u_xlat5.xxx) * u_xlat6.xyz;\n        u_xlat5.xyz = u_xlat5.xyz *
            vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat5.xyz);\n       
            u_xlat29 = u_xlat14.z * u_xlat29;\n        u_xlat5.xyz = u_xlat0.xyz
            * vec3(u_xlat29);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.xxx
            + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat4.xyz
            = u_xlat5.xyz * u_xlat6.xyz;\n        u_xlat16_4.xyz = u_xlat4.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat16_3.xyz = vec3(_GroundColor.x,
            _GroundColor.y, _GroundColor.z) * vec3(_GroundColor.x, _GroundColor.y,
            _GroundColor.z);\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz
            + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n   
            u_xlat16_30 = dot(_WorldSpaceLightPos0.xyz, (-u_xlat2.xyz));\n    u_xlat16_30
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_30 = u_xlat16_30 * 0.75 +
            0.75;\n    u_xlat16_7.xyz = vec3(u_xlat16_30) * u_xlat16_4.xyz;\n   
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Exposure);\n    u_xlat16_30 =
            dot(_LightColor0.xyz, _LightColor0.xyz);\n    u_xlat16_30 = sqrt(u_xlat16_30);\n   
            u_xlat16_30 = max(u_xlat16_30, 0.25);\n    u_xlat16_30 = min(u_xlat16_30,
            1.0);\n    u_xlat16_8.xyz = u_xlat16_0.xyz * vec3(8000.0, 8000.0, 8000.0);\n   
            u_xlat16_8.xyz = clamp(u_xlat16_8.xyz, 0.0, 1.0);\n    u_xlat16_8.xyz
            = u_xlat16_8.xyz * _LightColor0.xyz;\n    u_xlat16_8.xyz = u_xlat16_8.xyz
            * vec3(27.0, 27.0, 27.0);\n    u_xlat16_8.xyz = u_xlat16_8.xyz / vec3(u_xlat16_30);\n   
            vs_TEXCOORD1.xyz = sqrt(u_xlat16_3.xyz);\n    vs_TEXCOORD2.xyz = sqrt(u_xlat16_7.xyz);\n   
            vs_TEXCOORD3.xyz = sqrt(u_xlat16_8.xyz);\n    vs_TEXCOORD0.xyz = (-u_xlat2.xyz);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tmediump float _SunSize;\nin mediump vec3 vs_TEXCOORD0;\nin mediump
            vec3 vs_TEXCOORD1;\nin mediump vec3 vs_TEXCOORD2;\nin mediump vec3 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec3 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nbool u_xlatb2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n   
            u_xlat16_0.xyz = vs_TEXCOORD0.xyz + _WorldSpaceLightPos0.xyz;\n    u_xlat16_0.x
            = dot(u_xlat16_0.xyz, u_xlat16_0.xyz);\n    u_xlat16_0.x = sqrt(u_xlat16_0.x);\n   
            u_xlat16_3.x = float(1.0) / _SunSize;\n    u_xlat16_0.x = u_xlat16_3.x
            * u_xlat16_0.x;\n    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);\n   
            u_xlat16_3.x = u_xlat16_0.x * -2.0 + 3.0;\n    u_xlat16_0.x = u_xlat16_0.x
            * u_xlat16_0.x;\n    u_xlat16_0.x = (-u_xlat16_3.x) * u_xlat16_0.x +
            1.0;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;\n    u_xlat16_3.x
            = vs_TEXCOORD0.y * 50.0;\n    u_xlat16_3.x = clamp(u_xlat16_3.x, 0.0,
            1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n   
            u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n   
            u_xlat16_1.xyz = vs_TEXCOORD3.xyz * u_xlat16_0.xxx + u_xlat16_3.xyz;\n   
            u_xlatb2 = vs_TEXCOORD0.y<0.0;\n    SV_Target0.xyz = (bool(u_xlatb2))
            ? u_xlat16_1.xyz : u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_SIMPLE
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump float _Exposure;\nuniform
            \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform
            \tmediump float _AtmosphereThickness;\nattribute highp vec4 in_POSITION0;\nvarying
            highp vec3 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying
            mediump vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\nvec4
            u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4
            u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_4;\nvec4
            u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nfloat
            u_xlat9;\nvec3 u_xlat14;\nfloat u_xlat18;\nfloat u_xlat23;\nfloat u_xlat27;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_30;\nfloat u_xlat31;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat1.xyz = (-_SkyTint.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.300000012, 0.300000042,
            0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat1.xyz
            = u_xlat1.xyz * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat1.xyz;\n   
            u_xlat1.xyz = vec3(1.0, 1.0, 1.0) / u_xlat1.xyz;\n    u_xlat16_3.x =
            log2(_AtmosphereThickness);\n    u_xlat16_3.x = u_xlat16_3.x * 2.5;\n   
            u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_3.xy = u_xlat16_3.xx
            * vec2(0.049999997, 0.0314159282);\n    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat2.xyz = vec3(u_xlat27) *
            u_xlat0.xyz;\n    u_xlatb0 = u_xlat2.y>=0.0;\n    if(u_xlatb0){\n       
            u_xlat0.x = u_xlat2.y * u_xlat2.y + 0.0506249666;\n        u_xlat0.x
            = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat27 + u_xlat0.x;\n       
            u_xlat9 = (-u_xlat0.y) * u_xlat27 + 1.0;\n        u_xlat18 = u_xlat9
            * 5.25 + -6.80000019;\n        u_xlat18 = u_xlat9 * u_xlat18 + 3.82999992;\n       
            u_xlat18 = u_xlat9 * u_xlat18 + 0.458999991;\n        u_xlat9 = u_xlat9
            * u_xlat18 + -0.00286999997;\n        u_xlat9 = u_xlat9 * 1.44269502;\n       
            u_xlat0.y = exp2(u_xlat9);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5,
            0.246031836, 20.0);\n        u_xlat4.xyz = u_xlat0.xxx * u_xlat2.xyz;\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002,
            0.0);\n        u_xlat27 = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat27
            = sqrt(u_xlat27);\n        u_xlat28 = (-u_xlat27) + 1.0;\n        u_xlat28
            = u_xlat28 * 230.831207;\n        u_xlat28 = exp2(u_xlat28);\n       
            u_xlat29 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);\n        u_xlat29
            = u_xlat29 / u_xlat27;\n        u_xlat31 = dot(u_xlat2.xyz, u_xlat4.xyz);\n       
            u_xlat27 = u_xlat31 / u_xlat27;\n        u_xlat29 = (-u_xlat29) + 1.0;\n       
            u_xlat31 = u_xlat29 * 5.25 + -6.80000019;\n        u_xlat31 = u_xlat29
            * u_xlat31 + 3.82999992;\n        u_xlat31 = u_xlat29 * u_xlat31 + 0.458999991;\n       
            u_xlat29 = u_xlat29 * u_xlat31 + -0.00286999997;\n        u_xlat29 =
            u_xlat29 * 1.44269502;\n        u_xlat29 = exp2(u_xlat29);\n        u_xlat27
            = (-u_xlat27) + 1.0;\n        u_xlat31 = u_xlat27 * 5.25 + -6.80000019;\n       
            u_xlat31 = u_xlat27 * u_xlat31 + 3.82999992;\n        u_xlat31 = u_xlat27
            * u_xlat31 + 0.458999991;\n        u_xlat27 = u_xlat27 * u_xlat31 + -0.00286999997;\n       
            u_xlat27 = u_xlat27 * 1.44269502;\n        u_xlat27 = exp2(u_xlat27);\n       
            u_xlat27 = u_xlat27 * 0.25;\n        u_xlat27 = u_xlat29 * 0.25 + (-u_xlat27);\n       
            u_xlat27 = u_xlat28 * u_xlat27 + u_xlat0.y;\n        u_xlat27 = max(u_xlat27,
            0.0);\n        u_xlat27 = min(u_xlat27, 50.0);\n        u_xlat5.xyz =
            u_xlat1.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat6.xyz = (-vec3(u_xlat27)) * u_xlat5.xyz;\n        u_xlat6.xyz =
            u_xlat6.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat6.xyz
            = exp2(u_xlat6.xyz);\n        u_xlat27 = u_xlat0.z * u_xlat28;\n       
            u_xlat4.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat4.xyz;\n        u_xlat0.x
            = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat28 = (-u_xlat0.x) + 1.0;\n        u_xlat28 = u_xlat28 * 230.831207;\n       
            u_xlat28 = exp2(u_xlat28);\n        u_xlat29 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n        u_xlat29 = u_xlat29 / u_xlat0.x;\n        u_xlat4.x
            = dot(u_xlat2.xyz, u_xlat4.xyz);\n        u_xlat0.x = u_xlat4.x / u_xlat0.x;\n       
            u_xlat29 = (-u_xlat29) + 1.0;\n        u_xlat4.x = u_xlat29 * 5.25 +
            -6.80000019;\n        u_xlat4.x = u_xlat29 * u_xlat4.x + 3.82999992;\n       
            u_xlat4.x = u_xlat29 * u_xlat4.x + 0.458999991;\n        u_xlat29 = u_xlat29
            * u_xlat4.x + -0.00286999997;\n        u_xlat29 = u_xlat29 * 1.44269502;\n       
            u_xlat29 = exp2(u_xlat29);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat4.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat4.x = u_xlat0.x
            * u_xlat4.x + 3.82999992;\n        u_xlat4.x = u_xlat0.x * u_xlat4.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat4.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat29 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat28 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat4.xyz = u_xlat5.xyz * (-u_xlat0.xxx);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat4.xyz = exp2(u_xlat4.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat28;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat0.xyz = u_xlat6.xyz
            * vec3(u_xlat27) + u_xlat0.xyz;\n        u_xlat4.xyz = u_xlat1.xyz *
            u_xlat16_3.xxx;\n        u_xlat4.xyz = u_xlat0.xyz * u_xlat4.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_4.xyz = u_xlat4.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat29 = min(u_xlat2.y, -0.00100000005);\n       
            u_xlat29 = -9.99999975e-05 / u_xlat29;\n        u_xlat5.xyz = vec3(u_xlat29)
            * u_xlat2.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat5.w = dot((-u_xlat2.xyz),
            u_xlat5.xyz);\n        u_xlat5.x = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n       
            u_xlat5.xy = (-u_xlat5.xw) + vec2(1.0, 1.0);\n        u_xlat23 = u_xlat5.y
            * 5.25 + -6.80000019;\n        u_xlat23 = u_xlat5.y * u_xlat23 + 3.82999992;\n       
            u_xlat23 = u_xlat5.y * u_xlat23 + 0.458999991;\n        u_xlat14.x =
            u_xlat5.y * u_xlat23 + -0.00286999997;\n        u_xlat14.x = u_xlat14.x
            * 1.44269502;\n        u_xlat5.y = exp2(u_xlat14.x);\n        u_xlat23
            = u_xlat5.x * 5.25 + -6.80000019;\n        u_xlat23 = u_xlat5.x * u_xlat23
            + 3.82999992;\n        u_xlat23 = u_xlat5.x * u_xlat23 + 0.458999991;\n       
            u_xlat5.x = u_xlat5.x * u_xlat23 + -0.00286999997;\n        u_xlat5.xyz
            = u_xlat5.xyy * vec3(1.44269502, 0.25, 0.249900013);\n        u_xlat5.x
            = exp2(u_xlat5.x);\n        u_xlat5.x = u_xlat5.x * 0.25 + u_xlat5.y;\n       
            u_xlat14.xz = vec2(u_xlat29) * vec2(0.5, 20.0);\n        u_xlat6.xyz
            = u_xlat2.xyz * u_xlat14.xxx;\n        u_xlat6.xyz = u_xlat6.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat29 = dot(u_xlat6.xyz,
            u_xlat6.xyz);\n        u_xlat29 = sqrt(u_xlat29);\n        u_xlat29 =
            (-u_xlat29) + 1.0;\n        u_xlat29 = u_xlat29 * 230.831207;\n       
            u_xlat29 = exp2(u_xlat29);\n        u_xlat5.x = u_xlat29 * u_xlat5.x
            + (-u_xlat5.z);\n        u_xlat5.x = max(u_xlat5.x, 0.0);\n        u_xlat5.x
            = min(u_xlat5.x, 50.0);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat5.xyz
            = (-u_xlat5.xxx) * u_xlat6.xyz;\n        u_xlat5.xyz = u_xlat5.xyz *
            vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat5.xyz);\n       
            u_xlat29 = u_xlat14.z * u_xlat29;\n        u_xlat5.xyz = u_xlat0.xyz
            * vec3(u_xlat29);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.xxx
            + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat4.xyz
            = u_xlat5.xyz * u_xlat6.xyz;\n        u_xlat16_4.xyz = u_xlat4.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat16_3.xyz = vec3(_GroundColor.x,
            _GroundColor.y, _GroundColor.z) * vec3(_GroundColor.x, _GroundColor.y,
            _GroundColor.z);\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz
            + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n   
            u_xlat16_30 = dot(_WorldSpaceLightPos0.xyz, (-u_xlat2.xyz));\n    u_xlat16_30
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_30 = u_xlat16_30 * 0.75 +
            0.75;\n    u_xlat16_7.xyz = vec3(u_xlat16_30) * u_xlat16_4.xyz;\n   
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Exposure);\n    u_xlat16_30 =
            dot(_LightColor0.xyz, _LightColor0.xyz);\n    u_xlat16_30 = sqrt(u_xlat16_30);\n   
            u_xlat16_30 = max(u_xlat16_30, 0.25);\n    u_xlat16_30 = min(u_xlat16_30,
            1.0);\n    u_xlat16_0.xyz = u_xlat16_0.xyz;\n    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz,
            0.0, 1.0);\n    u_xlat16_8.xyz = u_xlat16_0.xyz * _LightColor0.xyz;\n   
            u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(15.0, 15.0, 15.0);\n    u_xlat16_8.xyz
            = u_xlat16_8.xyz / vec3(u_xlat16_30);\n    vs_TEXCOORD1.xyz = sqrt(u_xlat16_3.xyz);\n   
            vs_TEXCOORD2.xyz = sqrt(u_xlat16_7.xyz);\n    vs_TEXCOORD3.xyz = sqrt(u_xlat16_8.xyz);\n   
            vs_TEXCOORD0.xyz = (-u_xlat2.xyz);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump float
            _SunSize;\nuniform \tmediump float _SunSizeConvergence;\nvarying highp
            vec3 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying mediump
            vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\n#define SV_Target0
            gl_FragData[0]\nmediump vec2 u_xlat16_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump float u_xlat16_6;\nvoid
            main()\n{\n    u_xlat16_0.x = log2(_SunSize);\n    u_xlat16_0.x = u_xlat16_0.x
            * 0.649999976;\n    u_xlat16_0.x = exp2(u_xlat16_0.x);\n    u_xlat1.x
            = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n   
            u_xlat1.xyz = u_xlat1.xxx * vs_TEXCOORD0.xyz;\n    u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz,
            (-u_xlat1.xyz));\n    u_xlat16_3.x = clamp(u_xlat16_3.x, 0.0, 1.0);\n   
            u_xlat16_3.x = log2(u_xlat16_3.x);\n    u_xlat16_3.x = u_xlat16_3.x *
            _SunSizeConvergence;\n    u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_6
            = (-u_xlat16_3.x) * 1.98000002 + 1.98010004;\n    u_xlat16_0.y = u_xlat16_3.x
            * u_xlat16_3.x + 1.0;\n    u_xlat16_0.xy = u_xlat16_0.xy * vec2(10.0,
            0.0100164423);\n    u_xlat16_6 = log2(u_xlat16_6);\n    u_xlat16_0.x
            = u_xlat16_6 * u_xlat16_0.x;\n    u_xlat16_0.x = exp2(u_xlat16_0.x);\n   
            u_xlat16_0.x = max(u_xlat16_0.x, 9.99999975e-05);\n    u_xlat16_0.x =
            u_xlat16_0.y / u_xlat16_0.x;\n    u_xlat16_0.x = log2(u_xlat16_0.x);\n   
            u_xlat16_0.x = u_xlat16_0.x * 0.454544991;\n    u_xlat16_0.x = exp2(u_xlat16_0.x);\n   
            u_xlat16_3.x = u_xlat1.y * 50.0;\n    u_xlat16_3.x = clamp(u_xlat16_3.x,
            0.0, 1.0);\n    u_xlatb1 = u_xlat1.y<0.0;\n    u_xlat16_2.xyz = vs_TEXCOORD1.xyz
            + (-vs_TEXCOORD2.xyz);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_2.xyz
            + vs_TEXCOORD2.xyz;\n    u_xlat16_2.xyz = vs_TEXCOORD3.xyz * u_xlat16_0.xxx
            + u_xlat16_3.xyz;\n    SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz
            : u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_HIGH_QUALITY
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform
            \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nin
            highp vec4 in_POSITION0;\nout highp vec3 vs_TEXCOORD0;\nout mediump vec3
            vs_TEXCOORD1;\nout mediump vec3 vs_TEXCOORD2;\nout mediump vec3 vs_TEXCOORD3;\nvec4
            u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4
            u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_4;\nvec4
            u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nfloat
            u_xlat9;\nvec3 u_xlat14;\nfloat u_xlat18;\nfloat u_xlat23;\nfloat u_xlat27;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_30;\nfloat u_xlat31;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat1.xyz = (-_SkyTint.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.300000012, 0.300000042,
            0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat1.xyz
            = u_xlat1.xyz * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat1.xyz;\n   
            u_xlat1.xyz = vec3(1.0, 1.0, 1.0) / u_xlat1.xyz;\n    u_xlat16_3.x =
            log2(_AtmosphereThickness);\n    u_xlat16_3.x = u_xlat16_3.x * 2.5;\n   
            u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_3.xy = u_xlat16_3.xx
            * vec2(0.049999997, 0.0314159282);\n    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat2.xyz = vec3(u_xlat27) *
            u_xlat0.xyz;\n    u_xlatb0 = u_xlat2.y>=0.0;\n    if(u_xlatb0){\n       
            u_xlat0.x = u_xlat2.y * u_xlat2.y + 0.0506249666;\n        u_xlat0.x
            = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat27 + u_xlat0.x;\n       
            u_xlat9 = (-u_xlat0.y) * u_xlat27 + 1.0;\n        u_xlat18 = u_xlat9
            * 5.25 + -6.80000019;\n        u_xlat18 = u_xlat9 * u_xlat18 + 3.82999992;\n       
            u_xlat18 = u_xlat9 * u_xlat18 + 0.458999991;\n        u_xlat9 = u_xlat9
            * u_xlat18 + -0.00286999997;\n        u_xlat9 = u_xlat9 * 1.44269502;\n       
            u_xlat0.y = exp2(u_xlat9);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5,
            0.246031836, 20.0);\n        u_xlat4.xyz = u_xlat0.xxx * u_xlat2.xyz;\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002,
            0.0);\n        u_xlat27 = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat27
            = sqrt(u_xlat27);\n        u_xlat28 = (-u_xlat27) + 1.0;\n        u_xlat28
            = u_xlat28 * 230.831207;\n        u_xlat28 = exp2(u_xlat28);\n       
            u_xlat29 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);\n        u_xlat29
            = u_xlat29 / u_xlat27;\n        u_xlat31 = dot(u_xlat2.xyz, u_xlat4.xyz);\n       
            u_xlat27 = u_xlat31 / u_xlat27;\n        u_xlat29 = (-u_xlat29) + 1.0;\n       
            u_xlat31 = u_xlat29 * 5.25 + -6.80000019;\n        u_xlat31 = u_xlat29
            * u_xlat31 + 3.82999992;\n        u_xlat31 = u_xlat29 * u_xlat31 + 0.458999991;\n       
            u_xlat29 = u_xlat29 * u_xlat31 + -0.00286999997;\n        u_xlat29 =
            u_xlat29 * 1.44269502;\n        u_xlat29 = exp2(u_xlat29);\n        u_xlat27
            = (-u_xlat27) + 1.0;\n        u_xlat31 = u_xlat27 * 5.25 + -6.80000019;\n       
            u_xlat31 = u_xlat27 * u_xlat31 + 3.82999992;\n        u_xlat31 = u_xlat27
            * u_xlat31 + 0.458999991;\n        u_xlat27 = u_xlat27 * u_xlat31 + -0.00286999997;\n       
            u_xlat27 = u_xlat27 * 1.44269502;\n        u_xlat27 = exp2(u_xlat27);\n       
            u_xlat27 = u_xlat27 * 0.25;\n        u_xlat27 = u_xlat29 * 0.25 + (-u_xlat27);\n       
            u_xlat27 = u_xlat28 * u_xlat27 + u_xlat0.y;\n        u_xlat27 = max(u_xlat27,
            0.0);\n        u_xlat27 = min(u_xlat27, 50.0);\n        u_xlat5.xyz =
            u_xlat1.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat6.xyz = (-vec3(u_xlat27)) * u_xlat5.xyz;\n        u_xlat6.xyz =
            u_xlat6.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat6.xyz
            = exp2(u_xlat6.xyz);\n        u_xlat27 = u_xlat0.z * u_xlat28;\n       
            u_xlat4.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat4.xyz;\n        u_xlat0.x
            = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat28 = (-u_xlat0.x) + 1.0;\n        u_xlat28 = u_xlat28 * 230.831207;\n       
            u_xlat28 = exp2(u_xlat28);\n        u_xlat29 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n        u_xlat29 = u_xlat29 / u_xlat0.x;\n        u_xlat4.x
            = dot(u_xlat2.xyz, u_xlat4.xyz);\n        u_xlat0.x = u_xlat4.x / u_xlat0.x;\n       
            u_xlat29 = (-u_xlat29) + 1.0;\n        u_xlat4.x = u_xlat29 * 5.25 +
            -6.80000019;\n        u_xlat4.x = u_xlat29 * u_xlat4.x + 3.82999992;\n       
            u_xlat4.x = u_xlat29 * u_xlat4.x + 0.458999991;\n        u_xlat29 = u_xlat29
            * u_xlat4.x + -0.00286999997;\n        u_xlat29 = u_xlat29 * 1.44269502;\n       
            u_xlat29 = exp2(u_xlat29);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat4.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat4.x = u_xlat0.x
            * u_xlat4.x + 3.82999992;\n        u_xlat4.x = u_xlat0.x * u_xlat4.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat4.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat29 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat28 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat4.xyz = u_xlat5.xyz * (-u_xlat0.xxx);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat4.xyz = exp2(u_xlat4.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat28;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat0.xyz = u_xlat6.xyz
            * vec3(u_xlat27) + u_xlat0.xyz;\n        u_xlat4.xyz = u_xlat1.xyz *
            u_xlat16_3.xxx;\n        u_xlat4.xyz = u_xlat0.xyz * u_xlat4.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_4.xyz = u_xlat4.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat29 = min(u_xlat2.y, -0.00100000005);\n       
            u_xlat29 = -9.99999975e-05 / u_xlat29;\n        u_xlat5.xyz = vec3(u_xlat29)
            * u_xlat2.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat5.w = dot((-u_xlat2.xyz),
            u_xlat5.xyz);\n        u_xlat5.x = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n       
            u_xlat5.xy = (-u_xlat5.xw) + vec2(1.0, 1.0);\n        u_xlat23 = u_xlat5.y
            * 5.25 + -6.80000019;\n        u_xlat23 = u_xlat5.y * u_xlat23 + 3.82999992;\n       
            u_xlat23 = u_xlat5.y * u_xlat23 + 0.458999991;\n        u_xlat14.x =
            u_xlat5.y * u_xlat23 + -0.00286999997;\n        u_xlat14.x = u_xlat14.x
            * 1.44269502;\n        u_xlat5.y = exp2(u_xlat14.x);\n        u_xlat23
            = u_xlat5.x * 5.25 + -6.80000019;\n        u_xlat23 = u_xlat5.x * u_xlat23
            + 3.82999992;\n        u_xlat23 = u_xlat5.x * u_xlat23 + 0.458999991;\n       
            u_xlat5.x = u_xlat5.x * u_xlat23 + -0.00286999997;\n        u_xlat5.xyz
            = u_xlat5.xyy * vec3(1.44269502, 0.25, 0.249900013);\n        u_xlat5.x
            = exp2(u_xlat5.x);\n        u_xlat5.x = u_xlat5.x * 0.25 + u_xlat5.y;\n       
            u_xlat14.xz = vec2(u_xlat29) * vec2(0.5, 20.0);\n        u_xlat6.xyz
            = u_xlat2.xyz * u_xlat14.xxx;\n        u_xlat6.xyz = u_xlat6.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat29 = dot(u_xlat6.xyz,
            u_xlat6.xyz);\n        u_xlat29 = sqrt(u_xlat29);\n        u_xlat29 =
            (-u_xlat29) + 1.0;\n        u_xlat29 = u_xlat29 * 230.831207;\n       
            u_xlat29 = exp2(u_xlat29);\n        u_xlat5.x = u_xlat29 * u_xlat5.x
            + (-u_xlat5.z);\n        u_xlat5.x = max(u_xlat5.x, 0.0);\n        u_xlat5.x
            = min(u_xlat5.x, 50.0);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat5.xyz
            = (-u_xlat5.xxx) * u_xlat6.xyz;\n        u_xlat5.xyz = u_xlat5.xyz *
            vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat5.xyz);\n       
            u_xlat29 = u_xlat14.z * u_xlat29;\n        u_xlat5.xyz = u_xlat0.xyz
            * vec3(u_xlat29);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.xxx
            + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat4.xyz
            = u_xlat5.xyz * u_xlat6.xyz;\n        u_xlat16_4.xyz = u_xlat4.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat16_3.xyz = vec3(_GroundColor.x,
            _GroundColor.y, _GroundColor.z) * vec3(_GroundColor.x, _GroundColor.y,
            _GroundColor.z);\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz
            + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n   
            u_xlat16_30 = dot(_WorldSpaceLightPos0.xyz, (-u_xlat2.xyz));\n    u_xlat16_30
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_30 = u_xlat16_30 * 0.75 +
            0.75;\n    u_xlat16_7.xyz = vec3(u_xlat16_30) * u_xlat16_4.xyz;\n   
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Exposure);\n    u_xlat16_30 =
            dot(_LightColor0.xyz, _LightColor0.xyz);\n    u_xlat16_30 = sqrt(u_xlat16_30);\n   
            u_xlat16_30 = max(u_xlat16_30, 0.25);\n    u_xlat16_30 = min(u_xlat16_30,
            1.0);\n    u_xlat16_0.xyz = u_xlat16_0.xyz;\n    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz,
            0.0, 1.0);\n    u_xlat16_8.xyz = u_xlat16_0.xyz * _LightColor0.xyz;\n   
            u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(15.0, 15.0, 15.0);\n    u_xlat16_8.xyz
            = u_xlat16_8.xyz / vec3(u_xlat16_30);\n    vs_TEXCOORD1.xyz = sqrt(u_xlat16_3.xyz);\n   
            vs_TEXCOORD2.xyz = sqrt(u_xlat16_7.xyz);\n    vs_TEXCOORD3.xyz = sqrt(u_xlat16_8.xyz);\n   
            vs_TEXCOORD0.xyz = (-u_xlat2.xyz);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tmediump float _SunSize;\nuniform \tmediump float _SunSizeConvergence;\nin
            highp vec3 vs_TEXCOORD0;\nin mediump vec3 vs_TEXCOORD1;\nin mediump vec3
            vs_TEXCOORD2;\nin mediump vec3 vs_TEXCOORD3;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nmediump vec2 u_xlat16_0;\nvec3 u_xlat1;\nbool
            u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            float u_xlat16_6;\nvoid main()\n{\n    u_xlat16_0.x = log2(_SunSize);\n   
            u_xlat16_0.x = u_xlat16_0.x * 0.649999976;\n    u_xlat16_0.x = exp2(u_xlat16_0.x);\n   
            u_xlat1.x = dot(vs_TEXCOORD0.xyz, vs_TEXCOORD0.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * vs_TEXCOORD0.xyz;\n   
            u_xlat16_3.x = dot(_WorldSpaceLightPos0.xyz, (-u_xlat1.xyz));\n    u_xlat16_3.x
            = clamp(u_xlat16_3.x, 0.0, 1.0);\n    u_xlat16_3.x = log2(u_xlat16_3.x);\n   
            u_xlat16_3.x = u_xlat16_3.x * _SunSizeConvergence;\n    u_xlat16_3.x
            = exp2(u_xlat16_3.x);\n    u_xlat16_6 = (-u_xlat16_3.x) * 1.98000002
            + 1.98010004;\n    u_xlat16_0.y = u_xlat16_3.x * u_xlat16_3.x + 1.0;\n   
            u_xlat16_0.xy = u_xlat16_0.xy * vec2(10.0, 0.0100164423);\n    u_xlat16_6
            = log2(u_xlat16_6);\n    u_xlat16_0.x = u_xlat16_6 * u_xlat16_0.x;\n   
            u_xlat16_0.x = exp2(u_xlat16_0.x);\n    u_xlat16_0.x = max(u_xlat16_0.x,
            9.99999975e-05);\n    u_xlat16_0.x = u_xlat16_0.y / u_xlat16_0.x;\n   
            u_xlat16_0.x = log2(u_xlat16_0.x);\n    u_xlat16_0.x = u_xlat16_0.x *
            0.454544991;\n    u_xlat16_0.x = exp2(u_xlat16_0.x);\n    u_xlat16_3.x
            = u_xlat1.y * 50.0;\n    u_xlat16_3.x = clamp(u_xlat16_3.x, 0.0, 1.0);\n   
            u_xlatb1 = u_xlat1.y<0.0;\n    u_xlat16_2.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n   
            u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_2.xyz + vs_TEXCOORD2.xyz;\n   
            u_xlat16_2.xyz = vs_TEXCOORD3.xyz * u_xlat16_0.xxx + u_xlat16_3.xyz;\n   
            SV_Target0.xyz = (bool(u_xlatb1)) ? u_xlat16_2.xyz : u_xlat16_3.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_HIGH_QUALITY
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform
            \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nattribute
            highp vec4 in_POSITION0;\nvarying mediump float vs_TEXCOORD0;\nvarying
            mediump vec3 vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\nvec4
            u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4
            u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_4;\nvec4
            u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat8;\nvec3
            u_xlat13;\nfloat u_xlat16;\nfloat u_xlat21;\nfloat u_xlat24;\nfloat u_xlat25;\nfloat
            u_xlat26;\nmediump float u_xlat16_27;\nfloat u_xlat28;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat1.xyz = (-_SkyTint.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.300000012, 0.300000042,
            0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat1.xyz
            = u_xlat1.xyz * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat1.xyz;\n   
            u_xlat1.xyz = vec3(1.0, 1.0, 1.0) / u_xlat1.xyz;\n    u_xlat16_3.x =
            log2(_AtmosphereThickness);\n    u_xlat16_3.x = u_xlat16_3.x * 2.5;\n   
            u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_3.xy = u_xlat16_3.xx
            * vec2(0.049999997, 0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.xyz = vec3(u_xlat24) *
            u_xlat0.xyz;\n    u_xlatb0 = u_xlat2.y>=0.0;\n    if(u_xlatb0){\n       
            u_xlat0.x = u_xlat2.y * u_xlat2.y + 0.0506249666;\n        u_xlat0.x
            = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n       
            u_xlat8 = (-u_xlat0.y) * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8
            * 5.25 + -6.80000019;\n        u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n       
            u_xlat16 = u_xlat8 * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8
            * u_xlat16 + -0.00286999997;\n        u_xlat8 = u_xlat8 * 1.44269502;\n       
            u_xlat0.y = exp2(u_xlat8);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5,
            0.246031836, 20.0);\n        u_xlat4.xyz = u_xlat0.xxx * u_xlat2.xyz;\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002,
            0.0);\n        u_xlat24 = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat24
            = sqrt(u_xlat24);\n        u_xlat25 = (-u_xlat24) + 1.0;\n        u_xlat25
            = u_xlat25 * 230.831207;\n        u_xlat25 = exp2(u_xlat25);\n       
            u_xlat26 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);\n        u_xlat26
            = u_xlat26 / u_xlat24;\n        u_xlat28 = dot(u_xlat2.xyz, u_xlat4.xyz);\n       
            u_xlat24 = u_xlat28 / u_xlat24;\n        u_xlat26 = (-u_xlat26) + 1.0;\n       
            u_xlat28 = u_xlat26 * 5.25 + -6.80000019;\n        u_xlat28 = u_xlat26
            * u_xlat28 + 3.82999992;\n        u_xlat28 = u_xlat26 * u_xlat28 + 0.458999991;\n       
            u_xlat26 = u_xlat26 * u_xlat28 + -0.00286999997;\n        u_xlat26 =
            u_xlat26 * 1.44269502;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat24
            = (-u_xlat24) + 1.0;\n        u_xlat28 = u_xlat24 * 5.25 + -6.80000019;\n       
            u_xlat28 = u_xlat24 * u_xlat28 + 3.82999992;\n        u_xlat28 = u_xlat24
            * u_xlat28 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat28 + -0.00286999997;\n       
            u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n       
            u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat26 * 0.25 + (-u_xlat24);\n       
            u_xlat24 = u_xlat25 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24,
            0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat5.xyz =
            u_xlat1.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat6.xyz = (-vec3(u_xlat24)) * u_xlat5.xyz;\n        u_xlat6.xyz =
            u_xlat6.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat6.xyz
            = exp2(u_xlat6.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat25;\n       
            u_xlat4.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat4.xyz;\n        u_xlat0.x
            = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat25 = (-u_xlat0.x) + 1.0;\n        u_xlat25 = u_xlat25 * 230.831207;\n       
            u_xlat25 = exp2(u_xlat25);\n        u_xlat26 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n        u_xlat26 = u_xlat26 / u_xlat0.x;\n        u_xlat4.x
            = dot(u_xlat2.xyz, u_xlat4.xyz);\n        u_xlat0.x = u_xlat4.x / u_xlat0.x;\n       
            u_xlat26 = (-u_xlat26) + 1.0;\n        u_xlat4.x = u_xlat26 * 5.25 +
            -6.80000019;\n        u_xlat4.x = u_xlat26 * u_xlat4.x + 3.82999992;\n       
            u_xlat4.x = u_xlat26 * u_xlat4.x + 0.458999991;\n        u_xlat26 = u_xlat26
            * u_xlat4.x + -0.00286999997;\n        u_xlat26 = u_xlat26 * 1.44269502;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat4.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat4.x = u_xlat0.x
            * u_xlat4.x + 3.82999992;\n        u_xlat4.x = u_xlat0.x * u_xlat4.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat4.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat26 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat25 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat4.xyz = u_xlat5.xyz * (-u_xlat0.xxx);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat4.xyz = exp2(u_xlat4.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat25;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat0.xyz = u_xlat6.xyz
            * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat4.xyz = u_xlat1.xyz *
            u_xlat16_3.xxx;\n        u_xlat4.xyz = u_xlat0.xyz * u_xlat4.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_4.xyz = u_xlat4.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat26 = min(u_xlat2.y, -0.00100000005);\n       
            u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat5.xyz = vec3(u_xlat26)
            * u_xlat2.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat5.w = dot((-u_xlat2.xyz),
            u_xlat5.xyz);\n        u_xlat5.x = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n       
            u_xlat5.xy = (-u_xlat5.xw) + vec2(1.0, 1.0);\n        u_xlat21 = u_xlat5.y
            * 5.25 + -6.80000019;\n        u_xlat21 = u_xlat5.y * u_xlat21 + 3.82999992;\n       
            u_xlat21 = u_xlat5.y * u_xlat21 + 0.458999991;\n        u_xlat13.x =
            u_xlat5.y * u_xlat21 + -0.00286999997;\n        u_xlat13.x = u_xlat13.x
            * 1.44269502;\n        u_xlat5.y = exp2(u_xlat13.x);\n        u_xlat21
            = u_xlat5.x * 5.25 + -6.80000019;\n        u_xlat21 = u_xlat5.x * u_xlat21
            + 3.82999992;\n        u_xlat21 = u_xlat5.x * u_xlat21 + 0.458999991;\n       
            u_xlat5.x = u_xlat5.x * u_xlat21 + -0.00286999997;\n        u_xlat5.xyz
            = u_xlat5.xyy * vec3(1.44269502, 0.25, 0.249900013);\n        u_xlat5.x
            = exp2(u_xlat5.x);\n        u_xlat5.x = u_xlat5.x * 0.25 + u_xlat5.y;\n       
            u_xlat13.xz = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat6.xyz
            = u_xlat2.xyz * u_xlat13.xxx;\n        u_xlat6.xyz = u_xlat6.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat6.xyz,
            u_xlat6.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 =
            (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat5.x = u_xlat26 * u_xlat5.x
            + (-u_xlat5.z);\n        u_xlat5.x = max(u_xlat5.x, 0.0);\n        u_xlat5.x
            = min(u_xlat5.x, 50.0);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat5.xyz
            = (-u_xlat5.xxx) * u_xlat6.xyz;\n        u_xlat5.xyz = u_xlat5.xyz *
            vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat5.xyz);\n       
            u_xlat26 = u_xlat13.z * u_xlat26;\n        u_xlat5.xyz = u_xlat0.xyz
            * vec3(u_xlat26);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.xxx
            + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat4.xyz
            = u_xlat5.xyz * u_xlat6.xyz;\n        u_xlat16_4.xyz = u_xlat4.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat26 = u_xlat2.y * -50.0;\n   
            u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z)
            * vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z);\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_27 = dot(_WorldSpaceLightPos0.xyz,
            (-u_xlat2.xyz));\n    u_xlat16_27 = u_xlat16_27 * u_xlat16_27;\n    u_xlat16_27
            = u_xlat16_27 * 0.75 + 0.75;\n    u_xlat16_7.xyz = vec3(u_xlat16_27)
            * u_xlat16_4.xyz;\n    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Exposure);\n   
            vs_TEXCOORD1.xyz = sqrt(u_xlat16_3.xyz);\n    vs_TEXCOORD2.xyz = sqrt(u_xlat16_7.xyz);\n   
            vs_TEXCOORD0 = u_xlat26;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nvarying mediump float vs_TEXCOORD0;\nvarying mediump vec3
            vs_TEXCOORD1;\nvarying mediump vec3 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nmediump float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat16_0 = vs_TEXCOORD0;\n    u_xlat16_0 = clamp(u_xlat16_0,
            0.0, 1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n   
            SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_NONE
          - _SUNDISK_SIMPLE
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump float _Exposure;\nuniform
            \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform
            \tmediump float _AtmosphereThickness;\nin highp vec4 in_POSITION0;\nout
            mediump float vs_TEXCOORD0;\nout mediump vec3 vs_TEXCOORD1;\nout mediump
            vec3 vs_TEXCOORD2;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump
            vec3 u_xlat16_4;\nvec4 u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nfloat
            u_xlat8;\nvec3 u_xlat13;\nfloat u_xlat16;\nfloat u_xlat21;\nfloat u_xlat24;\nfloat
            u_xlat25;\nfloat u_xlat26;\nmediump float u_xlat16_27;\nfloat u_xlat28;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat1.xyz = (-_SkyTint.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.300000012, 0.300000042,
            0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat1.xyz
            = u_xlat1.xyz * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat1.xyz;\n   
            u_xlat1.xyz = vec3(1.0, 1.0, 1.0) / u_xlat1.xyz;\n    u_xlat16_3.x =
            log2(_AtmosphereThickness);\n    u_xlat16_3.x = u_xlat16_3.x * 2.5;\n   
            u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_3.xy = u_xlat16_3.xx
            * vec2(0.049999997, 0.0314159282);\n    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.xyz = vec3(u_xlat24) *
            u_xlat0.xyz;\n    u_xlatb0 = u_xlat2.y>=0.0;\n    if(u_xlatb0){\n       
            u_xlat0.x = u_xlat2.y * u_xlat2.y + 0.0506249666;\n        u_xlat0.x
            = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat24 + u_xlat0.x;\n       
            u_xlat8 = (-u_xlat0.y) * u_xlat24 + 1.0;\n        u_xlat16 = u_xlat8
            * 5.25 + -6.80000019;\n        u_xlat16 = u_xlat8 * u_xlat16 + 3.82999992;\n       
            u_xlat16 = u_xlat8 * u_xlat16 + 0.458999991;\n        u_xlat8 = u_xlat8
            * u_xlat16 + -0.00286999997;\n        u_xlat8 = u_xlat8 * 1.44269502;\n       
            u_xlat0.y = exp2(u_xlat8);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5,
            0.246031836, 20.0);\n        u_xlat4.xyz = u_xlat0.xxx * u_xlat2.xyz;\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002,
            0.0);\n        u_xlat24 = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat24
            = sqrt(u_xlat24);\n        u_xlat25 = (-u_xlat24) + 1.0;\n        u_xlat25
            = u_xlat25 * 230.831207;\n        u_xlat25 = exp2(u_xlat25);\n       
            u_xlat26 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);\n        u_xlat26
            = u_xlat26 / u_xlat24;\n        u_xlat28 = dot(u_xlat2.xyz, u_xlat4.xyz);\n       
            u_xlat24 = u_xlat28 / u_xlat24;\n        u_xlat26 = (-u_xlat26) + 1.0;\n       
            u_xlat28 = u_xlat26 * 5.25 + -6.80000019;\n        u_xlat28 = u_xlat26
            * u_xlat28 + 3.82999992;\n        u_xlat28 = u_xlat26 * u_xlat28 + 0.458999991;\n       
            u_xlat26 = u_xlat26 * u_xlat28 + -0.00286999997;\n        u_xlat26 =
            u_xlat26 * 1.44269502;\n        u_xlat26 = exp2(u_xlat26);\n        u_xlat24
            = (-u_xlat24) + 1.0;\n        u_xlat28 = u_xlat24 * 5.25 + -6.80000019;\n       
            u_xlat28 = u_xlat24 * u_xlat28 + 3.82999992;\n        u_xlat28 = u_xlat24
            * u_xlat28 + 0.458999991;\n        u_xlat24 = u_xlat24 * u_xlat28 + -0.00286999997;\n       
            u_xlat24 = u_xlat24 * 1.44269502;\n        u_xlat24 = exp2(u_xlat24);\n       
            u_xlat24 = u_xlat24 * 0.25;\n        u_xlat24 = u_xlat26 * 0.25 + (-u_xlat24);\n       
            u_xlat24 = u_xlat25 * u_xlat24 + u_xlat0.y;\n        u_xlat24 = max(u_xlat24,
            0.0);\n        u_xlat24 = min(u_xlat24, 50.0);\n        u_xlat5.xyz =
            u_xlat1.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat6.xyz = (-vec3(u_xlat24)) * u_xlat5.xyz;\n        u_xlat6.xyz =
            u_xlat6.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat6.xyz
            = exp2(u_xlat6.xyz);\n        u_xlat24 = u_xlat0.z * u_xlat25;\n       
            u_xlat4.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat4.xyz;\n        u_xlat0.x
            = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat25 = (-u_xlat0.x) + 1.0;\n        u_xlat25 = u_xlat25 * 230.831207;\n       
            u_xlat25 = exp2(u_xlat25);\n        u_xlat26 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n        u_xlat26 = u_xlat26 / u_xlat0.x;\n        u_xlat4.x
            = dot(u_xlat2.xyz, u_xlat4.xyz);\n        u_xlat0.x = u_xlat4.x / u_xlat0.x;\n       
            u_xlat26 = (-u_xlat26) + 1.0;\n        u_xlat4.x = u_xlat26 * 5.25 +
            -6.80000019;\n        u_xlat4.x = u_xlat26 * u_xlat4.x + 3.82999992;\n       
            u_xlat4.x = u_xlat26 * u_xlat4.x + 0.458999991;\n        u_xlat26 = u_xlat26
            * u_xlat4.x + -0.00286999997;\n        u_xlat26 = u_xlat26 * 1.44269502;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat4.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat4.x = u_xlat0.x
            * u_xlat4.x + 3.82999992;\n        u_xlat4.x = u_xlat0.x * u_xlat4.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat4.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat26 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat25 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat4.xyz = u_xlat5.xyz * (-u_xlat0.xxx);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat4.xyz = exp2(u_xlat4.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat25;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat0.xyz = u_xlat6.xyz
            * vec3(u_xlat24) + u_xlat0.xyz;\n        u_xlat4.xyz = u_xlat1.xyz *
            u_xlat16_3.xxx;\n        u_xlat4.xyz = u_xlat0.xyz * u_xlat4.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_4.xyz = u_xlat4.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat26 = min(u_xlat2.y, -0.00100000005);\n       
            u_xlat26 = -9.99999975e-05 / u_xlat26;\n        u_xlat5.xyz = vec3(u_xlat26)
            * u_xlat2.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat5.w = dot((-u_xlat2.xyz),
            u_xlat5.xyz);\n        u_xlat5.x = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n       
            u_xlat5.xy = (-u_xlat5.xw) + vec2(1.0, 1.0);\n        u_xlat21 = u_xlat5.y
            * 5.25 + -6.80000019;\n        u_xlat21 = u_xlat5.y * u_xlat21 + 3.82999992;\n       
            u_xlat21 = u_xlat5.y * u_xlat21 + 0.458999991;\n        u_xlat13.x =
            u_xlat5.y * u_xlat21 + -0.00286999997;\n        u_xlat13.x = u_xlat13.x
            * 1.44269502;\n        u_xlat5.y = exp2(u_xlat13.x);\n        u_xlat21
            = u_xlat5.x * 5.25 + -6.80000019;\n        u_xlat21 = u_xlat5.x * u_xlat21
            + 3.82999992;\n        u_xlat21 = u_xlat5.x * u_xlat21 + 0.458999991;\n       
            u_xlat5.x = u_xlat5.x * u_xlat21 + -0.00286999997;\n        u_xlat5.xyz
            = u_xlat5.xyy * vec3(1.44269502, 0.25, 0.249900013);\n        u_xlat5.x
            = exp2(u_xlat5.x);\n        u_xlat5.x = u_xlat5.x * 0.25 + u_xlat5.y;\n       
            u_xlat13.xz = vec2(u_xlat26) * vec2(0.5, 20.0);\n        u_xlat6.xyz
            = u_xlat2.xyz * u_xlat13.xxx;\n        u_xlat6.xyz = u_xlat6.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat26 = dot(u_xlat6.xyz,
            u_xlat6.xyz);\n        u_xlat26 = sqrt(u_xlat26);\n        u_xlat26 =
            (-u_xlat26) + 1.0;\n        u_xlat26 = u_xlat26 * 230.831207;\n       
            u_xlat26 = exp2(u_xlat26);\n        u_xlat5.x = u_xlat26 * u_xlat5.x
            + (-u_xlat5.z);\n        u_xlat5.x = max(u_xlat5.x, 0.0);\n        u_xlat5.x
            = min(u_xlat5.x, 50.0);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat5.xyz
            = (-u_xlat5.xxx) * u_xlat6.xyz;\n        u_xlat5.xyz = u_xlat5.xyz *
            vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat5.xyz);\n       
            u_xlat26 = u_xlat13.z * u_xlat26;\n        u_xlat5.xyz = u_xlat0.xyz
            * vec3(u_xlat26);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.xxx
            + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat4.xyz
            = u_xlat5.xyz * u_xlat6.xyz;\n        u_xlat16_4.xyz = u_xlat4.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat26 = u_xlat2.y * -50.0;\n   
            u_xlat16_3.xyz = vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z)
            * vec3(_GroundColor.x, _GroundColor.y, _GroundColor.z);\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * vec3(_Exposure);\n    u_xlat16_27 = dot(_WorldSpaceLightPos0.xyz,
            (-u_xlat2.xyz));\n    u_xlat16_27 = u_xlat16_27 * u_xlat16_27;\n    u_xlat16_27
            = u_xlat16_27 * 0.75 + 0.75;\n    u_xlat16_7.xyz = vec3(u_xlat16_27)
            * u_xlat16_4.xyz;\n    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Exposure);\n   
            vs_TEXCOORD1.xyz = sqrt(u_xlat16_3.xyz);\n    vs_TEXCOORD2.xyz = sqrt(u_xlat16_7.xyz);\n   
            vs_TEXCOORD0 = u_xlat26;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\nin mediump float vs_TEXCOORD0;\nin mediump vec3 vs_TEXCOORD1;\nin
            mediump vec3 vs_TEXCOORD2;\nlayout(location = 0) out mediump vec4 SV_Target0;\nmediump
            float u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0
            = vs_TEXCOORD0;\n    u_xlat16_0 = clamp(u_xlat16_0, 0.0, 1.0);\n    u_xlat16_1.xyz
            = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n    SV_Target0.xyz = vec3(u_xlat16_0)
            * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_NONE
          - _SUNDISK_SIMPLE
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump float _Exposure;\nuniform
            \tmediump vec3 _GroundColor;\nuniform \tmediump vec3 _SkyTint;\nuniform
            \tmediump float _AtmosphereThickness;\nattribute highp vec4 in_POSITION0;\nvarying
            mediump vec3 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying
            mediump vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\nvec4
            u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4
            u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_4;\nvec4
            u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nfloat
            u_xlat9;\nvec3 u_xlat14;\nfloat u_xlat18;\nfloat u_xlat23;\nfloat u_xlat27;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_30;\nfloat u_xlat31;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2
            = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat1.wwww + u_xlat2;\n    u_xlat1.xyz = (-_SkyTint.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.300000012, 0.300000042,
            0.300000012) + vec3(0.5, 0.419999987, 0.324999988);\n    u_xlat1.xyz
            = u_xlat1.xyz * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat1.xyz;\n   
            u_xlat1.xyz = vec3(1.0, 1.0, 1.0) / u_xlat1.xyz;\n    u_xlat16_3.x =
            log2(_AtmosphereThickness);\n    u_xlat16_3.x = u_xlat16_3.x * 2.5;\n   
            u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_3.xy = u_xlat16_3.xx
            * vec2(0.049999997, 0.0314159282);\n    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat2.xyz = vec3(u_xlat27) *
            u_xlat0.xyz;\n    u_xlatb0 = u_xlat2.y>=0.0;\n    if(u_xlatb0){\n       
            u_xlat0.x = u_xlat2.y * u_xlat2.y + 0.0506249666;\n        u_xlat0.x
            = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat27 + u_xlat0.x;\n       
            u_xlat9 = (-u_xlat0.y) * u_xlat27 + 1.0;\n        u_xlat18 = u_xlat9
            * 5.25 + -6.80000019;\n        u_xlat18 = u_xlat9 * u_xlat18 + 3.82999992;\n       
            u_xlat18 = u_xlat9 * u_xlat18 + 0.458999991;\n        u_xlat9 = u_xlat9
            * u_xlat18 + -0.00286999997;\n        u_xlat9 = u_xlat9 * 1.44269502;\n       
            u_xlat0.y = exp2(u_xlat9);\n        u_xlat0.xyz = u_xlat0.xyx * vec3(0.5,
            0.246031836, 20.0);\n        u_xlat4.xyz = u_xlat0.xxx * u_xlat2.xyz;\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.0, 1.00010002,
            0.0);\n        u_xlat27 = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat27
            = sqrt(u_xlat27);\n        u_xlat28 = (-u_xlat27) + 1.0;\n        u_xlat28
            = u_xlat28 * 230.831207;\n        u_xlat28 = exp2(u_xlat28);\n       
            u_xlat29 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);\n        u_xlat29
            = u_xlat29 / u_xlat27;\n        u_xlat31 = dot(u_xlat2.xyz, u_xlat4.xyz);\n       
            u_xlat27 = u_xlat31 / u_xlat27;\n        u_xlat29 = (-u_xlat29) + 1.0;\n       
            u_xlat31 = u_xlat29 * 5.25 + -6.80000019;\n        u_xlat31 = u_xlat29
            * u_xlat31 + 3.82999992;\n        u_xlat31 = u_xlat29 * u_xlat31 + 0.458999991;\n       
            u_xlat29 = u_xlat29 * u_xlat31 + -0.00286999997;\n        u_xlat29 =
            u_xlat29 * 1.44269502;\n        u_xlat29 = exp2(u_xlat29);\n        u_xlat27
            = (-u_xlat27) + 1.0;\n        u_xlat31 = u_xlat27 * 5.25 + -6.80000019;\n       
            u_xlat31 = u_xlat27 * u_xlat31 + 3.82999992;\n        u_xlat31 = u_xlat27
            * u_xlat31 + 0.458999991;\n        u_xlat27 = u_xlat27 * u_xlat31 + -0.00286999997;\n       
            u_xlat27 = u_xlat27 * 1.44269502;\n        u_xlat27 = exp2(u_xlat27);\n       
            u_xlat27 = u_xlat27 * 0.25;\n        u_xlat27 = u_xlat29 * 0.25 + (-u_xlat27);\n       
            u_xlat27 = u_xlat28 * u_xlat27 + u_xlat0.y;\n        u_xlat27 = max(u_xlat27,
            0.0);\n        u_xlat27 = min(u_xlat27, 50.0);\n        u_xlat5.xyz =
            u_xlat1.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat6.xyz = (-vec3(u_xlat27)) * u_xlat5.xyz;\n        u_xlat6.xyz =
            u_xlat6.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat6.xyz
            = exp2(u_xlat6.xyz);\n        u_xlat27 = u_xlat0.z * u_xlat28;\n       
            u_xlat4.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat4.xyz;\n        u_xlat0.x
            = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat28 = (-u_xlat0.x) + 1.0;\n        u_xlat28 = u_xlat28 * 230.831207;\n       
            u_xlat28 = exp2(u_xlat28);\n        u_xlat29 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n        u_xlat29 = u_xlat29 / u_xlat0.x;\n        u_xlat4.x
            = dot(u_xlat2.xyz, u_xlat4.xyz);\n        u_xlat0.x = u_xlat4.x / u_xlat0.x;\n       
            u_xlat29 = (-u_xlat29) + 1.0;\n        u_xlat4.x = u_xlat29 * 5.25 +
            -6.80000019;\n        u_xlat4.x = u_xlat29 * u_xlat4.x + 3.82999992;\n       
            u_xlat4.x = u_xlat29 * u_xlat4.x + 0.458999991;\n        u_xlat29 = u_xlat29
            * u_xlat4.x + -0.00286999997;\n        u_xlat29 = u_xlat29 * 1.44269502;\n       
            u_xlat29 = exp2(u_xlat29);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat4.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat4.x = u_xlat0.x
            * u_xlat4.x + 3.82999992;\n        u_xlat4.x = u_xlat0.x * u_xlat4.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat4.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat29 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat28 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat4.xyz = u_xlat5.xyz * (-u_xlat0.xxx);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat4.xyz = exp2(u_xlat4.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat28;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat0.xyz = u_xlat6.xyz
            * vec3(u_xlat27) + u_xlat0.xyz;\n        u_xlat4.xyz = u_xlat1.xyz *
            u_xlat16_3.xxx;\n        u_xlat4.xyz = u_xlat0.xyz * u_xlat4.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_4.xyz = u_xlat4.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat29 = min(u_xlat2.y, -0.00100000005);\n       
            u_xlat29 = -9.99999975e-05 / u_xlat29;\n        u_xlat5.xyz = vec3(u_xlat29)
            * u_xlat2.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat5.w = dot((-u_xlat2.xyz),
            u_xlat5.xyz);\n        u_xlat5.x = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n       
            u_xlat5.xy = (-u_xlat5.xw) + vec2(1.0, 1.0);\n        u_xlat23 = u_xlat5.y
            * 5.25 + -6.80000019;\n        u_xlat23 = u_xlat5.y * u_xlat23 + 3.82999992;\n       
            u_xlat23 = u_xlat5.y * u_xlat23 + 0.458999991;\n        u_xlat14.x =
            u_xlat5.y * u_xlat23 + -0.00286999997;\n        u_xlat14.x = u_xlat14.x
            * 1.44269502;\n        u_xlat5.y = exp2(u_xlat14.x);\n        u_xlat23
            = u_xlat5.x * 5.25 + -6.80000019;\n        u_xlat23 = u_xlat5.x * u_xlat23
            + 3.82999992;\n        u_xlat23 = u_xlat5.x * u_xlat23 + 0.458999991;\n       
            u_xlat5.x = u_xlat5.x * u_xlat23 + -0.00286999997;\n        u_xlat5.xyz
            = u_xlat5.xyy * vec3(1.44269502, 0.25, 0.249900013);\n        u_xlat5.x
            = exp2(u_xlat5.x);\n        u_xlat5.x = u_xlat5.x * 0.25 + u_xlat5.y;\n       
            u_xlat14.xz = vec2(u_xlat29) * vec2(0.5, 20.0);\n        u_xlat6.xyz
            = u_xlat2.xyz * u_xlat14.xxx;\n        u_xlat6.xyz = u_xlat6.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat29 = dot(u_xlat6.xyz,
            u_xlat6.xyz);\n        u_xlat29 = sqrt(u_xlat29);\n        u_xlat29 =
            (-u_xlat29) + 1.0;\n        u_xlat29 = u_xlat29 * 230.831207;\n       
            u_xlat29 = exp2(u_xlat29);\n        u_xlat5.x = u_xlat29 * u_xlat5.x
            + (-u_xlat5.z);\n        u_xlat5.x = max(u_xlat5.x, 0.0);\n        u_xlat5.x
            = min(u_xlat5.x, 50.0);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat5.xyz
            = (-u_xlat5.xxx) * u_xlat6.xyz;\n        u_xlat5.xyz = u_xlat5.xyz *
            vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat5.xyz);\n       
            u_xlat29 = u_xlat14.z * u_xlat29;\n        u_xlat5.xyz = u_xlat0.xyz
            * vec3(u_xlat29);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.xxx
            + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat4.xyz
            = u_xlat5.xyz * u_xlat6.xyz;\n        u_xlat16_4.xyz = u_xlat4.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat16_3.xyz = vec3(_GroundColor.x,
            _GroundColor.y, _GroundColor.z) * vec3(_GroundColor.x, _GroundColor.y,
            _GroundColor.z);\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz
            + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n   
            u_xlat16_30 = dot(_WorldSpaceLightPos0.xyz, (-u_xlat2.xyz));\n    u_xlat16_30
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_30 = u_xlat16_30 * 0.75 +
            0.75;\n    u_xlat16_7.xyz = vec3(u_xlat16_30) * u_xlat16_4.xyz;\n   
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Exposure);\n    u_xlat16_30 =
            dot(_LightColor0.xyz, _LightColor0.xyz);\n    u_xlat16_30 = sqrt(u_xlat16_30);\n   
            u_xlat16_30 = max(u_xlat16_30, 0.25);\n    u_xlat16_30 = min(u_xlat16_30,
            1.0);\n    u_xlat16_8.xyz = u_xlat16_0.xyz * vec3(8000.0, 8000.0, 8000.0);\n   
            u_xlat16_8.xyz = clamp(u_xlat16_8.xyz, 0.0, 1.0);\n    u_xlat16_8.xyz
            = u_xlat16_8.xyz * _LightColor0.xyz;\n    u_xlat16_8.xyz = u_xlat16_8.xyz
            * vec3(27.0, 27.0, 27.0);\n    u_xlat16_8.xyz = u_xlat16_8.xyz / vec3(u_xlat16_30);\n   
            vs_TEXCOORD1.xyz = sqrt(u_xlat16_3.xyz);\n    vs_TEXCOORD2.xyz = sqrt(u_xlat16_7.xyz);\n   
            vs_TEXCOORD3.xyz = sqrt(u_xlat16_8.xyz);\n    vs_TEXCOORD0.xyz = (-u_xlat2.xyz);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump float
            _SunSize;\nvarying mediump vec3 vs_TEXCOORD0;\nvarying mediump vec3 vs_TEXCOORD1;\nvarying
            mediump vec3 vs_TEXCOORD2;\nvarying mediump vec3 vs_TEXCOORD3;\n#define
            SV_Target0 gl_FragData[0]\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nbool
            u_xlatb2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n    u_xlat16_0.xyz
            = vs_TEXCOORD0.xyz + _WorldSpaceLightPos0.xyz;\n    u_xlat16_0.x = dot(u_xlat16_0.xyz,
            u_xlat16_0.xyz);\n    u_xlat16_0.x = sqrt(u_xlat16_0.x);\n    u_xlat16_3.x
            = float(1.0) / _SunSize;\n    u_xlat16_0.x = u_xlat16_3.x * u_xlat16_0.x;\n   
            u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);\n    u_xlat16_3.x = u_xlat16_0.x
            * -2.0 + 3.0;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;\n    u_xlat16_0.x
            = (-u_xlat16_3.x) * u_xlat16_0.x + 1.0;\n    u_xlat16_0.x = u_xlat16_0.x
            * u_xlat16_0.x;\n    u_xlat16_3.x = vs_TEXCOORD0.y * 50.0;\n    u_xlat16_3.x
            = clamp(u_xlat16_3.x, 0.0, 1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz
            + (-vs_TEXCOORD2.xyz);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_1.xyz
            + vs_TEXCOORD2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD3.xyz * u_xlat16_0.xxx
            + u_xlat16_3.xyz;\n    u_xlatb2 = vs_TEXCOORD0.y<0.0;\n    SV_Target0.xyz
            = (bool(u_xlatb2)) ? u_xlat16_1.xyz : u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_HIGH_QUALITY
          - _SUNDISK_SIMPLE
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump float _Exposure;\nuniform \tmediump vec3 _GroundColor;\nuniform
            \tmediump vec3 _SkyTint;\nuniform \tmediump float _AtmosphereThickness;\nin
            highp vec4 in_POSITION0;\nout mediump vec3 vs_TEXCOORD0;\nout mediump
            vec3 vs_TEXCOORD1;\nout mediump vec3 vs_TEXCOORD2;\nout mediump vec3
            vs_TEXCOORD3;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump
            vec3 u_xlat16_4;\nvec4 u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nfloat u_xlat9;\nvec3 u_xlat14;\nfloat u_xlat18;\nfloat
            u_xlat23;\nfloat u_xlat27;\nfloat u_xlat28;\nfloat u_xlat29;\nmediump
            float u_xlat16_30;\nfloat u_xlat31;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat1.xyz
            = (-_SkyTint.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat1.xyz = u_xlat1.xyz
            * vec3(0.300000012, 0.300000042, 0.300000012) + vec3(0.5, 0.419999987,
            0.324999988);\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat1.xyz;\n    u_xlat1.xyz
            = u_xlat1.xyz * u_xlat1.xyz;\n    u_xlat1.xyz = vec3(1.0, 1.0, 1.0) /
            u_xlat1.xyz;\n    u_xlat16_3.x = log2(_AtmosphereThickness);\n    u_xlat16_3.x
            = u_xlat16_3.x * 2.5;\n    u_xlat16_3.x = exp2(u_xlat16_3.x);\n    u_xlat16_3.xy
            = u_xlat16_3.xx * vec2(0.049999997, 0.0314159282);\n    u_xlat27 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat2.xyz
            = vec3(u_xlat27) * u_xlat0.xyz;\n    u_xlatb0 = u_xlat2.y>=0.0;\n   
            if(u_xlatb0){\n        u_xlat0.x = u_xlat2.y * u_xlat2.y + 0.0506249666;\n       
            u_xlat0.x = sqrt(u_xlat0.x);\n        u_xlat0.x = (-u_xlat0.y) * u_xlat27
            + u_xlat0.x;\n        u_xlat9 = (-u_xlat0.y) * u_xlat27 + 1.0;\n       
            u_xlat18 = u_xlat9 * 5.25 + -6.80000019;\n        u_xlat18 = u_xlat9
            * u_xlat18 + 3.82999992;\n        u_xlat18 = u_xlat9 * u_xlat18 + 0.458999991;\n       
            u_xlat9 = u_xlat9 * u_xlat18 + -0.00286999997;\n        u_xlat9 = u_xlat9
            * 1.44269502;\n        u_xlat0.y = exp2(u_xlat9);\n        u_xlat0.xyz
            = u_xlat0.xyx * vec3(0.5, 0.246031836, 20.0);\n        u_xlat4.xyz =
            u_xlat0.xxx * u_xlat2.xyz;\n        u_xlat4.xyz = u_xlat4.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat27 = dot(u_xlat4.xyz,
            u_xlat4.xyz);\n        u_xlat27 = sqrt(u_xlat27);\n        u_xlat28 =
            (-u_xlat27) + 1.0;\n        u_xlat28 = u_xlat28 * 230.831207;\n       
            u_xlat28 = exp2(u_xlat28);\n        u_xlat29 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n        u_xlat29 = u_xlat29 / u_xlat27;\n        u_xlat31
            = dot(u_xlat2.xyz, u_xlat4.xyz);\n        u_xlat27 = u_xlat31 / u_xlat27;\n       
            u_xlat29 = (-u_xlat29) + 1.0;\n        u_xlat31 = u_xlat29 * 5.25 + -6.80000019;\n       
            u_xlat31 = u_xlat29 * u_xlat31 + 3.82999992;\n        u_xlat31 = u_xlat29
            * u_xlat31 + 0.458999991;\n        u_xlat29 = u_xlat29 * u_xlat31 + -0.00286999997;\n       
            u_xlat29 = u_xlat29 * 1.44269502;\n        u_xlat29 = exp2(u_xlat29);\n       
            u_xlat27 = (-u_xlat27) + 1.0;\n        u_xlat31 = u_xlat27 * 5.25 + -6.80000019;\n       
            u_xlat31 = u_xlat27 * u_xlat31 + 3.82999992;\n        u_xlat31 = u_xlat27
            * u_xlat31 + 0.458999991;\n        u_xlat27 = u_xlat27 * u_xlat31 + -0.00286999997;\n       
            u_xlat27 = u_xlat27 * 1.44269502;\n        u_xlat27 = exp2(u_xlat27);\n       
            u_xlat27 = u_xlat27 * 0.25;\n        u_xlat27 = u_xlat29 * 0.25 + (-u_xlat27);\n       
            u_xlat27 = u_xlat28 * u_xlat27 + u_xlat0.y;\n        u_xlat27 = max(u_xlat27,
            0.0);\n        u_xlat27 = min(u_xlat27, 50.0);\n        u_xlat5.xyz =
            u_xlat1.xyz * u_xlat16_3.yyy + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n       
            u_xlat6.xyz = (-vec3(u_xlat27)) * u_xlat5.xyz;\n        u_xlat6.xyz =
            u_xlat6.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat6.xyz
            = exp2(u_xlat6.xyz);\n        u_xlat27 = u_xlat0.z * u_xlat28;\n       
            u_xlat4.xyz = u_xlat2.xyz * u_xlat0.xxx + u_xlat4.xyz;\n        u_xlat0.x
            = dot(u_xlat4.xyz, u_xlat4.xyz);\n        u_xlat0.x = sqrt(u_xlat0.x);\n       
            u_xlat28 = (-u_xlat0.x) + 1.0;\n        u_xlat28 = u_xlat28 * 230.831207;\n       
            u_xlat28 = exp2(u_xlat28);\n        u_xlat29 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n        u_xlat29 = u_xlat29 / u_xlat0.x;\n        u_xlat4.x
            = dot(u_xlat2.xyz, u_xlat4.xyz);\n        u_xlat0.x = u_xlat4.x / u_xlat0.x;\n       
            u_xlat29 = (-u_xlat29) + 1.0;\n        u_xlat4.x = u_xlat29 * 5.25 +
            -6.80000019;\n        u_xlat4.x = u_xlat29 * u_xlat4.x + 3.82999992;\n       
            u_xlat4.x = u_xlat29 * u_xlat4.x + 0.458999991;\n        u_xlat29 = u_xlat29
            * u_xlat4.x + -0.00286999997;\n        u_xlat29 = u_xlat29 * 1.44269502;\n       
            u_xlat29 = exp2(u_xlat29);\n        u_xlat0.x = (-u_xlat0.x) + 1.0;\n       
            u_xlat4.x = u_xlat0.x * 5.25 + -6.80000019;\n        u_xlat4.x = u_xlat0.x
            * u_xlat4.x + 3.82999992;\n        u_xlat4.x = u_xlat0.x * u_xlat4.x
            + 0.458999991;\n        u_xlat0.x = u_xlat0.x * u_xlat4.x + -0.00286999997;\n       
            u_xlat0.x = u_xlat0.x * 1.44269502;\n        u_xlat0.x = exp2(u_xlat0.x);\n       
            u_xlat0.x = u_xlat0.x * 0.25;\n        u_xlat0.x = u_xlat29 * 0.25 +
            (-u_xlat0.x);\n        u_xlat0.x = u_xlat28 * u_xlat0.x + u_xlat0.y;\n       
            u_xlat0.x = max(u_xlat0.x, 0.0);\n        u_xlat0.x = min(u_xlat0.x,
            50.0);\n        u_xlat4.xyz = u_xlat5.xyz * (-u_xlat0.xxx);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(1.44269502, 1.44269502, 1.44269502);\n       
            u_xlat4.xyz = exp2(u_xlat4.xyz);\n        u_xlat0.x = u_xlat0.z * u_xlat28;\n       
            u_xlat0.xyz = u_xlat0.xxx * u_xlat4.xyz;\n        u_xlat0.xyz = u_xlat6.xyz
            * vec3(u_xlat27) + u_xlat0.xyz;\n        u_xlat4.xyz = u_xlat1.xyz *
            u_xlat16_3.xxx;\n        u_xlat4.xyz = u_xlat0.xyz * u_xlat4.xyz;\n       
            u_xlat0.xyz = u_xlat0.xyz * vec3(0.0199999996, 0.0199999996, 0.0199999996);\n       
            u_xlat16_4.xyz = u_xlat4.xyz;\n        u_xlat16_0.xyz = u_xlat0.xyz;\n   
            } else {\n        u_xlat29 = min(u_xlat2.y, -0.00100000005);\n       
            u_xlat29 = -9.99999975e-05 / u_xlat29;\n        u_xlat5.xyz = vec3(u_xlat29)
            * u_xlat2.xyz + vec3(0.0, 1.00010002, 0.0);\n        u_xlat5.w = dot((-u_xlat2.xyz),
            u_xlat5.xyz);\n        u_xlat5.x = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n       
            u_xlat5.xy = (-u_xlat5.xw) + vec2(1.0, 1.0);\n        u_xlat23 = u_xlat5.y
            * 5.25 + -6.80000019;\n        u_xlat23 = u_xlat5.y * u_xlat23 + 3.82999992;\n       
            u_xlat23 = u_xlat5.y * u_xlat23 + 0.458999991;\n        u_xlat14.x =
            u_xlat5.y * u_xlat23 + -0.00286999997;\n        u_xlat14.x = u_xlat14.x
            * 1.44269502;\n        u_xlat5.y = exp2(u_xlat14.x);\n        u_xlat23
            = u_xlat5.x * 5.25 + -6.80000019;\n        u_xlat23 = u_xlat5.x * u_xlat23
            + 3.82999992;\n        u_xlat23 = u_xlat5.x * u_xlat23 + 0.458999991;\n       
            u_xlat5.x = u_xlat5.x * u_xlat23 + -0.00286999997;\n        u_xlat5.xyz
            = u_xlat5.xyy * vec3(1.44269502, 0.25, 0.249900013);\n        u_xlat5.x
            = exp2(u_xlat5.x);\n        u_xlat5.x = u_xlat5.x * 0.25 + u_xlat5.y;\n       
            u_xlat14.xz = vec2(u_xlat29) * vec2(0.5, 20.0);\n        u_xlat6.xyz
            = u_xlat2.xyz * u_xlat14.xxx;\n        u_xlat6.xyz = u_xlat6.xyz * vec3(0.5,
            0.5, 0.5) + vec3(0.0, 1.00010002, 0.0);\n        u_xlat29 = dot(u_xlat6.xyz,
            u_xlat6.xyz);\n        u_xlat29 = sqrt(u_xlat29);\n        u_xlat29 =
            (-u_xlat29) + 1.0;\n        u_xlat29 = u_xlat29 * 230.831207;\n       
            u_xlat29 = exp2(u_xlat29);\n        u_xlat5.x = u_xlat29 * u_xlat5.x
            + (-u_xlat5.z);\n        u_xlat5.x = max(u_xlat5.x, 0.0);\n        u_xlat5.x
            = min(u_xlat5.x, 50.0);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.yyy
            + vec3(0.0125663709, 0.0125663709, 0.0125663709);\n        u_xlat5.xyz
            = (-u_xlat5.xxx) * u_xlat6.xyz;\n        u_xlat5.xyz = u_xlat5.xyz *
            vec3(1.44269502, 1.44269502, 1.44269502);\n        u_xlat0.xyz = exp2(u_xlat5.xyz);\n       
            u_xlat29 = u_xlat14.z * u_xlat29;\n        u_xlat5.xyz = u_xlat0.xyz
            * vec3(u_xlat29);\n        u_xlat6.xyz = u_xlat1.xyz * u_xlat16_3.xxx
            + vec3(0.0199999996, 0.0199999996, 0.0199999996);\n        u_xlat4.xyz
            = u_xlat5.xyz * u_xlat6.xyz;\n        u_xlat16_4.xyz = u_xlat4.xyz;\n       
            u_xlat16_0.xyz = u_xlat0.xyz;\n    }\n    u_xlat16_3.xyz = vec3(_GroundColor.x,
            _GroundColor.y, _GroundColor.z) * vec3(_GroundColor.x, _GroundColor.y,
            _GroundColor.z);\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz
            + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Exposure);\n   
            u_xlat16_30 = dot(_WorldSpaceLightPos0.xyz, (-u_xlat2.xyz));\n    u_xlat16_30
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_30 = u_xlat16_30 * 0.75 +
            0.75;\n    u_xlat16_7.xyz = vec3(u_xlat16_30) * u_xlat16_4.xyz;\n   
            u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Exposure);\n    u_xlat16_30 =
            dot(_LightColor0.xyz, _LightColor0.xyz);\n    u_xlat16_30 = sqrt(u_xlat16_30);\n   
            u_xlat16_30 = max(u_xlat16_30, 0.25);\n    u_xlat16_30 = min(u_xlat16_30,
            1.0);\n    u_xlat16_8.xyz = u_xlat16_0.xyz * vec3(8000.0, 8000.0, 8000.0);\n   
            u_xlat16_8.xyz = clamp(u_xlat16_8.xyz, 0.0, 1.0);\n    u_xlat16_8.xyz
            = u_xlat16_8.xyz * _LightColor0.xyz;\n    u_xlat16_8.xyz = u_xlat16_8.xyz
            * vec3(27.0, 27.0, 27.0);\n    u_xlat16_8.xyz = u_xlat16_8.xyz / vec3(u_xlat16_30);\n   
            vs_TEXCOORD1.xyz = sqrt(u_xlat16_3.xyz);\n    vs_TEXCOORD2.xyz = sqrt(u_xlat16_7.xyz);\n   
            vs_TEXCOORD3.xyz = sqrt(u_xlat16_8.xyz);\n    vs_TEXCOORD0.xyz = (-u_xlat2.xyz);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tmediump float _SunSize;\nin mediump vec3 vs_TEXCOORD0;\nin mediump
            vec3 vs_TEXCOORD1;\nin mediump vec3 vs_TEXCOORD2;\nin mediump vec3 vs_TEXCOORD3;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec3 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nbool u_xlatb2;\nmediump vec3 u_xlat16_3;\nvoid main()\n{\n   
            u_xlat16_0.xyz = vs_TEXCOORD0.xyz + _WorldSpaceLightPos0.xyz;\n    u_xlat16_0.x
            = dot(u_xlat16_0.xyz, u_xlat16_0.xyz);\n    u_xlat16_0.x = sqrt(u_xlat16_0.x);\n   
            u_xlat16_3.x = float(1.0) / _SunSize;\n    u_xlat16_0.x = u_xlat16_3.x
            * u_xlat16_0.x;\n    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);\n   
            u_xlat16_3.x = u_xlat16_0.x * -2.0 + 3.0;\n    u_xlat16_0.x = u_xlat16_0.x
            * u_xlat16_0.x;\n    u_xlat16_0.x = (-u_xlat16_3.x) * u_xlat16_0.x +
            1.0;\n    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;\n    u_xlat16_3.x
            = vs_TEXCOORD0.y * 50.0;\n    u_xlat16_3.x = clamp(u_xlat16_3.x, 0.0,
            1.0);\n    u_xlat16_1.xyz = vs_TEXCOORD1.xyz + (-vs_TEXCOORD2.xyz);\n   
            u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_1.xyz + vs_TEXCOORD2.xyz;\n   
            u_xlat16_1.xyz = vs_TEXCOORD3.xyz * u_xlat16_0.xxx + u_xlat16_3.xyz;\n   
            u_xlatb2 = vs_TEXCOORD0.y<0.0;\n    SV_Target0.xyz = (bool(u_xlatb2))
            ? u_xlat16_1.xyz : u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - _SUNDISK_HIGH_QUALITY
          - _SUNDISK_SIMPLE
          Tags:
          - Key: PreviewType
            Value: Skybox
          - Key: QUEUE
            Value: Background
          - Key: RenderType
            Value: Background
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _SUNDISK_HIGH_QUALITY
        - _SUNDISK_NONE
        - _SUNDISK_SIMPLE
        KeywordGroups:
        - Keywords:
          - _SUNDISK_NONE
          - _SUNDISK_SIMPLE
          - _SUNDISK_HIGH_QUALITY
          hasDiscard: 0
        KeywordsMinimalCardinality: 1
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_NONE
        - shaderCompilerPlatform: 9
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_NONE
        - shaderCompilerPlatform: 5
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_SIMPLE
        - shaderCompilerPlatform: 9
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_SIMPLE
        - shaderCompilerPlatform: 5
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_HIGH_QUALITY
        - shaderCompilerPlatform: 9
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_HIGH_QUALITY
        - shaderCompilerPlatform: 5
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_NONE
          - _SUNDISK_SIMPLE
        - shaderCompilerPlatform: 9
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_NONE
          - _SUNDISK_SIMPLE
        - shaderCompilerPlatform: 5
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_HIGH_QUALITY
          - _SUNDISK_SIMPLE
        - shaderCompilerPlatform: 9
          shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - _SUNDISK_HIGH_QUALITY
          - _SUNDISK_SIMPLE
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: PreviewType
          Value: Skybox
        - Key: QUEUE
          Value: Background
        - Key: RenderType
          Value: Background
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: PreviewType
        Value: Skybox
      - Key: QUEUE
        Value: Background
      - Key: RenderType
        Value: Background
    Shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - _SUNDISK_HIGH_QUALITY
    - _SUNDISK_NONE
    - _SUNDISK_SIMPLE
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_NONE
    - shaderCompilerPlatform: 9
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_NONE
    - shaderCompilerPlatform: 5
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_SIMPLE
    - shaderCompilerPlatform: 9
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_SIMPLE
    - shaderCompilerPlatform: 5
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_HIGH_QUALITY
    - shaderCompilerPlatform: 9
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_HIGH_QUALITY
    - shaderCompilerPlatform: 5
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_NONE
      - _SUNDISK_SIMPLE
    - shaderCompilerPlatform: 9
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_NONE
      - _SUNDISK_SIMPLE
    - shaderCompilerPlatform: 5
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_HIGH_QUALITY
      - _SUNDISK_SIMPLE
    - shaderCompilerPlatform: 9
      shader: {fileID: 106, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - _SUNDISK_HIGH_QUALITY
      - _SUNDISK_SIMPLE
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _RendererColor;\nuniform
            \tmediump vec2 _Flip;\nuniform \tmediump vec4 _Color;\nattribute highp
            vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp
            vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0.xy
            = in_POSITION0.xy * _Flip.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    u_xlat0
            = u_xlat0 * _RendererColor;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nmediump
            vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat10_0
            * vs_COLOR0;\n    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_0.xyz;\n   
            SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _RendererColor;\nuniform \tmediump vec2 _Flip;\nuniform
            \tmediump vec4 _Color;\nin highp vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin
            highp vec2 in_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nout highp vec2
            vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0.xy
            = in_POSITION0.xy * _Flip.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    u_xlat0
            = u_xlat0 * _RendererColor;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat16_0
            * vs_COLOR0;\n    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_0.xyz;\n   
            SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _RendererColor;\nuniform \tmediump vec2 _Flip;\nuniform
            \tmediump vec4 _Color;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5);
            return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2
            a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a;
            }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a)
            { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z);
            a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.xy
            = in_POSITION0.xy * _Flip.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0.xy = u_xlat0.xy / u_xlat0.ww;\n   
            u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat0.xy = u_xlat0.xy
            * u_xlat1.xy;\n    u_xlat0.xy = unity_roundEven(u_xlat0.xy);\n    u_xlat0.xy
            = u_xlat0.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat0.ww * u_xlat0.xy;\n   
            gl_Position.zw = u_xlat0.zw;\n    u_xlat0 = in_COLOR0 * _Color;\n   
            u_xlat0 = u_xlat0 * _RendererColor;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nmediump
            vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat10_0
            * vs_COLOR0;\n    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_0.xyz;\n   
            SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - PIXELSNAP_ON
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _RendererColor;\nuniform
            \tmediump vec2 _Flip;\nuniform \tmediump vec4 _Color;\nin highp vec4
            in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy * _Flip.xy;\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlat0.xy = u_xlat0.xy / u_xlat0.ww;\n   
            u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat0.xy = u_xlat0.xy
            * u_xlat1.xy;\n    u_xlat0.xy = roundEven(u_xlat0.xy);\n    u_xlat0.xy
            = u_xlat0.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat0.ww * u_xlat0.xy;\n   
            gl_Position.zw = u_xlat0.zw;\n    u_xlat0 = in_COLOR0 * _Color;\n   
            u_xlat0 = u_xlat0 * _RendererColor;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy
            = in_TEXCOORD0.xy;\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nmediump vec4 u_xlat16_0;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat16_0
            * vs_COLOR0;\n    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_0.xyz;\n   
            SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - PIXELSNAP_ON
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - ETC1_EXTERNAL_ALPHA
        - INSTANCING_ON
        - PIXELSNAP_ON
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _
        - __
        KeywordGroups:
        - Keywords:
          - _
          - ETC1_EXTERNAL_ALPHA
          hasDiscard: 1
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - _
          - PIXELSNAP_ON
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - PIXELSNAP_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - PIXELSNAP_ON
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - PIXELSNAP_ON
    - ETC1_EXTERNAL_ALPHA
    - INSTANCING_ON
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    - __
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - PIXELSNAP_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 10753, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - PIXELSNAP_ON
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _OcclusionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform
            lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nlowp vec4 u_xlat10_4;\nvec3
            u_xlat5;\nlowp vec4 u_xlat10_5;\nbool u_xlatb5;\nvec3 u_xlat6;\nvec3
            u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3 u_xlat16_9;\nbvec3
            u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nfloat
            u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump
            vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nfloat
            u_xlat40;\nlowp float u_xlat10_40;\nmediump float u_xlat16_41;\nmediump
            float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat u_xlat44;\nbool
            u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat10_0.xyz
            * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat10_0.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat10_40 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat10_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat10_5 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat10_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat10_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat10_4 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat10_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat10_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat10_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2)
            uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(3) uniform
            mediump samplerCube unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin highp vec3
            vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec4 u_xlat16_4;\nvec3
            u_xlat5;\nmediump vec4 u_xlat16_5;\nbool u_xlatb5;\nvec3 u_xlat6;\nvec3
            u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3 u_xlat16_9;\nbvec3
            u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nfloat
            u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump
            vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nfloat
            u_xlat40;\nmediump float u_xlat16_40;\nmediump float u_xlat16_41;\nmediump
            float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat u_xlat44;\nbool
            u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n    u_xlat16_0.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat16_0.xyz
            * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat16_0.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat16_40 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat16_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat16_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat16_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat16_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat16_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4
            unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float
            _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform lowp
            samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD8;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nvec3 u_xlat1;\nbool
            u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat4;\nlowp float u_xlat10_4;\nmediump vec3 u_xlat16_5;\nlowp vec4
            u_xlat10_5;\nmediump vec3 u_xlat16_6;\nlowp vec4 u_xlat10_6;\nvec3 u_xlat7;\nvec3
            u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump
            vec4 u_xlat16_12;\nmediump vec3 u_xlat16_13;\nfloat u_xlat14;\nvec3 u_xlat15;\nvec3
            u_xlat18;\nvec3 u_xlat25;\nmediump vec3 u_xlat16_25;\nmediump float u_xlat16_26;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_40;\nfloat u_xlat42;\nbool
            u_xlatb42;\nfloat u_xlat43;\nmediump float u_xlat16_44;\nmediump float
            u_xlat16_45;\nmediump float u_xlat16_47;\nmediump float u_xlat16_53;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.x = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb42 = u_xlat16_2.x<0.0;\n    if(u_xlatb42){discard;}\n   
            u_xlat16_2.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_44 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_44);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat15.xyz
            = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n    u_xlat10_4 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_45 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_45 = u_xlat10_4 * _OcclusionStrength + u_xlat16_45;\n    u_xlat4
            = (-_Glossiness) + 1.0;\n    u_xlat16_5.x = dot(u_xlat15.xyz, u_xlat0.xyz);\n   
            u_xlat16_5.x = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz
            * (-u_xlat16_5.xxx) + u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x
            = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n   
            u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlat18.xyz = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz
            = u_xlat18.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat18.xyz
            = exp2(u_xlat18.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat18.xyz = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42
            = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb42){\n        u_xlat42
            = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n        u_xlat42 = inversesqrt(u_xlat42);\n       
            u_xlat7.xyz = vec3(u_xlat42) * u_xlat16_5.xyz;\n        u_xlat8.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat8.xyz
            = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat10_6 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat10_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat10_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat10_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat10_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat10_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float
            _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump
            samplerCube unity_SpecCube0;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nin highp vec3
            vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat4;\nmediump float
            u_xlat16_4;\nmediump vec4 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec3
            u_xlat7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb10;\nmediump vec3
            u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump vec3 u_xlat16_13;\nfloat
            u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3 u_xlat25;\nmediump vec3
            u_xlat16_25;\nmediump float u_xlat16_26;\nfloat u_xlat28;\nfloat u_xlat29;\nmediump
            float u_xlat16_40;\nfloat u_xlat42;\nbool u_xlatb42;\nfloat u_xlat43;\nmediump
            float u_xlat16_44;\nmediump float u_xlat16_45;\nmediump float u_xlat16_47;\nmediump
            float u_xlat16_53;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_2.x = u_xlat16_0.w * _Color.w + (-_Cutoff);\n    u_xlatb42 =
            u_xlat16_2.x<0.0;\n    if(u_xlatb42){discard;}\n    u_xlat16_2.xyz =
            u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_44 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_44);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat15.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat16_4 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_45
            = (-_OcclusionStrength) + 1.0;\n    u_xlat16_45 = u_xlat16_4 * _OcclusionStrength
            + u_xlat16_45;\n    u_xlat4 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x
            = dot(u_xlat15.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x +
            u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) +
            u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr,
            u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z
            = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n   
            u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat18.xyz
            = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(0.416666657,
            0.416666657, 0.416666657);\n    u_xlat18.xyz = exp2(u_xlat18.xyz);\n   
            u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995, 1.05499995, 1.05499995)
            + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat18.xyz
            = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb42){\n        u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat42 = inversesqrt(u_xlat42);\n        u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat16_6 = textureLod(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat16_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat16_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat16_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat16_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat16_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4
            unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform lowp
            sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform lowp
            samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat4;\nlowp float u_xlat10_4;\nmediump vec3
            u_xlat16_5;\nlowp vec4 u_xlat10_5;\nmediump vec3 u_xlat16_6;\nlowp vec4
            u_xlat10_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb10;\nmediump
            vec3 u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump vec3 u_xlat16_13;\nfloat
            u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3 u_xlat25;\nmediump vec3
            u_xlat16_25;\nmediump float u_xlat16_26;\nfloat u_xlat28;\nfloat u_xlat29;\nmediump
            float u_xlat16_40;\nfloat u_xlat42;\nbool u_xlatb42;\nfloat u_xlat43;\nmediump
            float u_xlat16_44;\nmediump float u_xlat16_45;\nmediump float u_xlat16_47;\nmediump
            float u_xlat16_53;\nvoid main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_2.xyz = _Color.xyz * u_xlat10_0.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_44 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_44);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat15.xyz
            = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n    u_xlat10_4 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_45 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_45 = u_xlat10_4 * _OcclusionStrength + u_xlat16_45;\n    u_xlat4
            = (-_Glossiness) + 1.0;\n    u_xlat16_5.x = dot(u_xlat15.xyz, u_xlat0.xyz);\n   
            u_xlat16_5.x = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz
            * (-u_xlat16_5.xxx) + u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x
            = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n   
            u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlat18.xyz = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz
            = u_xlat18.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat18.xyz
            = exp2(u_xlat18.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat18.xyz = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42
            = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb42){\n        u_xlat42
            = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n        u_xlat42 = inversesqrt(u_xlat42);\n       
            u_xlat7.xyz = vec3(u_xlat42) * u_xlat16_5.xyz;\n        u_xlat8.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat8.xyz
            = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat10_6 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat10_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat10_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat10_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat10_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat10_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube1;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nin highp vec3 vs_TEXCOORD8;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat4;\nmediump float u_xlat16_4;\nmediump vec4 u_xlat16_5;\nmediump
            vec4 u_xlat16_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3
            u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump
            vec3 u_xlat16_13;\nfloat u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3
            u_xlat25;\nmediump vec3 u_xlat16_25;\nmediump float u_xlat16_26;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_40;\nfloat u_xlat42;\nbool
            u_xlatb42;\nfloat u_xlat43;\nmediump float u_xlat16_44;\nmediump float
            u_xlat16_45;\nmediump float u_xlat16_47;\nmediump float u_xlat16_53;\nvoid
            main()\n{\n    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat1.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz
            * u_xlat16_0.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_44 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_44);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat15.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat16_4 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_45
            = (-_OcclusionStrength) + 1.0;\n    u_xlat16_45 = u_xlat16_4 * _OcclusionStrength
            + u_xlat16_45;\n    u_xlat4 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x
            = dot(u_xlat15.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x +
            u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) +
            u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr,
            u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z
            = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n   
            u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat18.xyz
            = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(0.416666657,
            0.416666657, 0.416666657);\n    u_xlat18.xyz = exp2(u_xlat18.xyz);\n   
            u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995, 1.05499995, 1.05499995)
            + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat18.xyz
            = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb42){\n        u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat42 = inversesqrt(u_xlat42);\n        u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat16_6 = textureLod(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat16_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat16_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat16_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat16_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat16_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD8;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nvec3 u_xlat1;\nbool
            u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nlowp vec4 u_xlat10_4;\nvec3 u_xlat5;\nlowp vec4 u_xlat10_5;\nbool
            u_xlatb5;\nvec3 u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump
            vec3 u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump
            vec3 u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump
            vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat
            u_xlat27;\nfloat u_xlat39;\nbool u_xlatb39;\nfloat u_xlat40;\nlowp float
            u_xlat10_40;\nmediump float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump
            float u_xlat16_43;\nfloat u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.x = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb39 = u_xlat16_2.x<0.0;\n    if(u_xlatb39){discard;}\n   
            u_xlat16_2.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat10_40 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat10_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat10_5 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat10_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat10_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat10_4 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat10_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat10_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat10_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube1;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin highp vec3 vs_TEXCOORD8;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec3
            u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec4 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec4 u_xlat16_5;\nbool u_xlatb5;\nvec3
            u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3
            u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3
            u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump
            vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat
            u_xlat27;\nfloat u_xlat39;\nbool u_xlatb39;\nfloat u_xlat40;\nmediump
            float u_xlat16_40;\nmediump float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump
            float u_xlat16_43;\nfloat u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.x = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb39 = u_xlat16_2.x<0.0;\n    if(u_xlatb39){discard;}\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat16_40 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat16_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat16_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat16_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat16_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat16_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _OcclusionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform
            lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nlowp vec4 u_xlat10_4;\nvec3
            u_xlat5;\nlowp vec4 u_xlat10_5;\nbool u_xlatb5;\nvec3 u_xlat6;\nvec3
            u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3 u_xlat16_9;\nbvec3
            u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nfloat
            u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump
            vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nfloat
            u_xlat40;\nlowp float u_xlat10_40;\nmediump float u_xlat16_41;\nmediump
            float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat u_xlat44;\nbool
            u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat10_0.xyz
            * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat10_0.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat10_40 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat10_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat10_5 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat10_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat10_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat10_4 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat10_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat10_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat10_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2)
            uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(3) uniform
            mediump samplerCube unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin highp vec3
            vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec4 u_xlat16_4;\nvec3
            u_xlat5;\nmediump vec4 u_xlat16_5;\nbool u_xlatb5;\nvec3 u_xlat6;\nvec3
            u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3 u_xlat16_9;\nbvec3
            u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nfloat
            u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump
            vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nfloat
            u_xlat40;\nmediump float u_xlat16_40;\nmediump float u_xlat16_41;\nmediump
            float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat u_xlat44;\nbool
            u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n    u_xlat16_0.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat16_0.xyz
            * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat16_0.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat16_40 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat16_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat16_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat16_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat16_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat16_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4
            unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float
            _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform lowp
            samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD8;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nvec3 u_xlat1;\nbool
            u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat4;\nlowp float u_xlat10_4;\nmediump vec3 u_xlat16_5;\nlowp vec4
            u_xlat10_5;\nmediump vec3 u_xlat16_6;\nlowp vec4 u_xlat10_6;\nvec3 u_xlat7;\nvec3
            u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump
            vec4 u_xlat16_12;\nmediump vec3 u_xlat16_13;\nfloat u_xlat14;\nvec3 u_xlat15;\nvec3
            u_xlat18;\nvec3 u_xlat25;\nmediump vec3 u_xlat16_25;\nmediump float u_xlat16_26;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_40;\nfloat u_xlat42;\nbool
            u_xlatb42;\nfloat u_xlat43;\nmediump float u_xlat16_44;\nmediump float
            u_xlat16_45;\nmediump float u_xlat16_47;\nmediump float u_xlat16_53;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.x = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb42 = u_xlat16_2.x<0.0;\n    if(u_xlatb42){discard;}\n   
            u_xlat16_2.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_44 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_44);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat15.xyz
            = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n    u_xlat10_4 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_45 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_45 = u_xlat10_4 * _OcclusionStrength + u_xlat16_45;\n    u_xlat4
            = (-_Glossiness) + 1.0;\n    u_xlat16_5.x = dot(u_xlat15.xyz, u_xlat0.xyz);\n   
            u_xlat16_5.x = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz
            * (-u_xlat16_5.xxx) + u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x
            = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n   
            u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlat18.xyz = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz
            = u_xlat18.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat18.xyz
            = exp2(u_xlat18.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat18.xyz = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42
            = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb42){\n        u_xlat42
            = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n        u_xlat42 = inversesqrt(u_xlat42);\n       
            u_xlat7.xyz = vec3(u_xlat42) * u_xlat16_5.xyz;\n        u_xlat8.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat8.xyz
            = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat10_6 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat10_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat10_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat10_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat10_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat10_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec4
            u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float
            _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump
            samplerCube unity_SpecCube0;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nin highp vec3
            vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat4;\nmediump float
            u_xlat16_4;\nmediump vec4 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec3
            u_xlat7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb10;\nmediump vec3
            u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump vec3 u_xlat16_13;\nfloat
            u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3 u_xlat25;\nmediump vec3
            u_xlat16_25;\nmediump float u_xlat16_26;\nfloat u_xlat28;\nfloat u_xlat29;\nmediump
            float u_xlat16_40;\nfloat u_xlat42;\nbool u_xlatb42;\nfloat u_xlat43;\nmediump
            float u_xlat16_44;\nmediump float u_xlat16_45;\nmediump float u_xlat16_47;\nmediump
            float u_xlat16_53;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_2.x = u_xlat16_0.w * _Color.w + (-_Cutoff);\n    u_xlatb42 =
            u_xlat16_2.x<0.0;\n    if(u_xlatb42){discard;}\n    u_xlat16_2.xyz =
            u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_44 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_44);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat15.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat16_4 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_45
            = (-_OcclusionStrength) + 1.0;\n    u_xlat16_45 = u_xlat16_4 * _OcclusionStrength
            + u_xlat16_45;\n    u_xlat4 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x
            = dot(u_xlat15.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x +
            u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) +
            u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr,
            u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z
            = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n   
            u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat18.xyz
            = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(0.416666657,
            0.416666657, 0.416666657);\n    u_xlat18.xyz = exp2(u_xlat18.xyz);\n   
            u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995, 1.05499995, 1.05499995)
            + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat18.xyz
            = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb42){\n        u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat42 = inversesqrt(u_xlat42);\n        u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat16_6 = textureLod(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat16_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat16_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat16_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat16_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat16_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4
            unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform lowp
            sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform lowp
            samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat4;\nlowp float u_xlat10_4;\nmediump vec3
            u_xlat16_5;\nlowp vec4 u_xlat10_5;\nmediump vec3 u_xlat16_6;\nlowp vec4
            u_xlat10_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb10;\nmediump
            vec3 u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump vec3 u_xlat16_13;\nfloat
            u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3 u_xlat25;\nmediump vec3
            u_xlat16_25;\nmediump float u_xlat16_26;\nfloat u_xlat28;\nfloat u_xlat29;\nmediump
            float u_xlat16_40;\nfloat u_xlat42;\nbool u_xlatb42;\nfloat u_xlat43;\nmediump
            float u_xlat16_44;\nmediump float u_xlat16_45;\nmediump float u_xlat16_47;\nmediump
            float u_xlat16_53;\nvoid main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_2.xyz = _Color.xyz * u_xlat10_0.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_44 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_44);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat15.xyz
            = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n    u_xlat10_4 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_45 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_45 = u_xlat10_4 * _OcclusionStrength + u_xlat16_45;\n    u_xlat4
            = (-_Glossiness) + 1.0;\n    u_xlat16_5.x = dot(u_xlat15.xyz, u_xlat0.xyz);\n   
            u_xlat16_5.x = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz
            * (-u_xlat16_5.xxx) + u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x
            = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n   
            u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlat18.xyz = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz
            = u_xlat18.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat18.xyz
            = exp2(u_xlat18.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat18.xyz = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42
            = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb42){\n        u_xlat42
            = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n        u_xlat42 = inversesqrt(u_xlat42);\n       
            u_xlat7.xyz = vec3(u_xlat42) * u_xlat16_5.xyz;\n        u_xlat8.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat8.xyz
            = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat10_6 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat10_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat10_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat10_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat10_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat10_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec4
            u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube1;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nin highp vec3 vs_TEXCOORD8;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat4;\nmediump float u_xlat16_4;\nmediump vec4 u_xlat16_5;\nmediump
            vec4 u_xlat16_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3
            u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump
            vec3 u_xlat16_13;\nfloat u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3
            u_xlat25;\nmediump vec3 u_xlat16_25;\nmediump float u_xlat16_26;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_40;\nfloat u_xlat42;\nbool
            u_xlatb42;\nfloat u_xlat43;\nmediump float u_xlat16_44;\nmediump float
            u_xlat16_45;\nmediump float u_xlat16_47;\nmediump float u_xlat16_53;\nvoid
            main()\n{\n    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat1.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz
            * u_xlat16_0.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_44 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_44);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat15.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat16_4 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_45
            = (-_OcclusionStrength) + 1.0;\n    u_xlat16_45 = u_xlat16_4 * _OcclusionStrength
            + u_xlat16_45;\n    u_xlat4 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x
            = dot(u_xlat15.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x +
            u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) +
            u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr,
            u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z
            = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n   
            u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat18.xyz
            = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(0.416666657,
            0.416666657, 0.416666657);\n    u_xlat18.xyz = exp2(u_xlat18.xyz);\n   
            u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995, 1.05499995, 1.05499995)
            + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat18.xyz
            = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb42){\n        u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat42 = inversesqrt(u_xlat42);\n        u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat16_6 = textureLod(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat16_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat16_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat16_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat16_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat16_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD8;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nvec3 u_xlat1;\nbool
            u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nlowp vec4 u_xlat10_4;\nvec3 u_xlat5;\nlowp vec4 u_xlat10_5;\nbool
            u_xlatb5;\nvec3 u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump
            vec3 u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump
            vec3 u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump
            vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat
            u_xlat27;\nfloat u_xlat39;\nbool u_xlatb39;\nfloat u_xlat40;\nlowp float
            u_xlat10_40;\nmediump float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump
            float u_xlat16_43;\nfloat u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.x = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb39 = u_xlat16_2.x<0.0;\n    if(u_xlatb39){discard;}\n   
            u_xlat16_2.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat10_40 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat10_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat10_5 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat10_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat10_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat10_4 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat10_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat10_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat10_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube1;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin highp vec3 vs_TEXCOORD8;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec3
            u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec4 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec4 u_xlat16_5;\nbool u_xlatb5;\nvec3
            u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3
            u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3
            u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump
            vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat
            u_xlat27;\nfloat u_xlat39;\nbool u_xlatb39;\nfloat u_xlat40;\nmediump
            float u_xlat16_40;\nmediump float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump
            float u_xlat16_43;\nfloat u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.x = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb39 = u_xlat16_2.x<0.0;\n    if(u_xlatb39){discard;}\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat16_40 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat16_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat16_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat16_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat16_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat16_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp
            sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec4
            u_xlat1;\nlowp vec4 u_xlat10_1;\nvec3 u_xlat2;\nbool u_xlatb2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nvec3 u_xlat7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat14;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nfloat
            u_xlat21;\nfloat u_xlat22;\nfloat u_xlat23;\nmediump float u_xlat16_24;\nmediump
            float u_xlat16_25;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat7.xyz,
            u_xlat7.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x
            = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat7.xyz;\n   
            u_xlat21 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat7.x = (-_Glossiness) + 1.0;\n    u_xlat14 = u_xlat7.x
            * u_xlat7.x;\n    u_xlat14 = max(u_xlat14, 0.00200000009);\n    u_xlat22
            = u_xlat14 * u_xlat14;\n    u_xlat23 = u_xlat21 * u_xlat22 + (-u_xlat21);\n   
            u_xlat21 = u_xlat23 * u_xlat21 + 1.0;\n    u_xlat21 = u_xlat21 * u_xlat21
            + 1.00000001e-07;\n    u_xlat22 = u_xlat22 * 0.318309873;\n    u_xlat21
            = u_xlat22 / u_xlat21;\n    u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n   
            u_xlat8 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8 =
            clamp(u_xlat8, 0.0, 1.0);\n    u_xlat15 = (-u_xlat14) + 1.0;\n    u_xlat22
            = abs(u_xlat1.x) * u_xlat15 + u_xlat14;\n    u_xlat15 = u_xlat8 * u_xlat15
            + u_xlat14;\n    u_xlat14 = u_xlat14 * u_xlat7.x;\n    u_xlat14 = (-u_xlat14)
            * 0.280000001 + 1.0;\n    u_xlat15 = u_xlat15 * abs(u_xlat1.x);\n   
            u_xlat16_3.x = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat8 * u_xlat22
            + u_xlat15;\n    u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x
            = 0.5 / u_xlat1.x;\n    u_xlat21 = u_xlat21 * u_xlat1.x;\n    u_xlat21
            = u_xlat21 * 3.14159274;\n    u_xlat21 = max(u_xlat21, 9.99999975e-05);\n   
            u_xlat21 = sqrt(u_xlat21);\n    u_xlat21 = u_xlat8 * u_xlat21;\n    u_xlat10_1.xzw
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_10.xyz = _Color.xyz
            * u_xlat10_1.xzw + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xzw = u_xlat10_1.xzw * _Color.xyz;\n    u_xlat16_10.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_10.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.x = dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n   
            u_xlatb2 = u_xlat16_4.x!=0.0;\n    u_xlat2.x = u_xlatb2 ? 1.0 : float(0.0);\n   
            u_xlat21 = u_xlat21 * u_xlat2.x;\n    u_xlat2.xyz = vec3(u_xlat21) *
            _LightColor0.xyz;\n    u_xlat16_4.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_11.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_4.xyz = u_xlat16_11.xyz * u_xlat16_4.xxx
            + u_xlat16_10.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_4.xyz;\n   
            u_xlat16_4.x = u_xlat0.x + u_xlat0.x;\n    u_xlat16_4.x = u_xlat0.x *
            u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat7.x + -0.5;\n   
            u_xlat16_11.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_11.x = u_xlat16_11.x
            * u_xlat16_11.x;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_11.x;\n   
            u_xlat16_11.x = u_xlat16_4.x * u_xlat16_3.x + 1.0;\n    u_xlat16_18 =
            (-u_xlat8) + 1.0;\n    u_xlat16_25 = u_xlat16_18 * u_xlat16_18;\n   
            u_xlat16_25 = u_xlat16_25 * u_xlat16_25;\n    u_xlat16_18 = u_xlat16_18
            * u_xlat16_25;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_18 + 1.0;\n   
            u_xlat16_4.x = u_xlat16_11.x * u_xlat16_4.x;\n    u_xlat0.x = u_xlat8
            * u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_25 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz
            = u_xlat1.xzw * vec3(u_xlat16_25);\n    u_xlat16_25 = (-u_xlat16_25)
            + 1.0;\n    u_xlat16_25 = u_xlat16_25 + _Glossiness;\n    u_xlat16_25
            = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat16_6.xyz = (-u_xlat16_10.xyz)
            + vec3(u_xlat16_25);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz
            + u_xlat16_10.xyz;\n    u_xlat0.xyw = u_xlat16_5.xyz * u_xlat16_4.xyz
            + u_xlat2.xyz;\n    u_xlat10_1.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_24 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_24 = u_xlat10_1.x
            * _OcclusionStrength + u_xlat16_24;\n    u_xlat16_4.xyz = vec3(u_xlat16_24)
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat14) *
            u_xlat16_4.xyz;\n    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_3.xyz +
            u_xlat0.xyw;\n    u_xlat10_1.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump
            sampler2D _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec3 u_xlat2;\nbool
            u_xlatb2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nfloat u_xlat8;\nmediump
            vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat14;\nfloat
            u_xlat15;\nmediump float u_xlat16_18;\nfloat u_xlat21;\nfloat u_xlat22;\nfloat
            u_xlat23;\nmediump float u_xlat16_24;\nmediump float u_xlat16_25;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat7.xyz = (-vs_TEXCOORD1.xyz)
            * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx
            * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat7.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat7.xyz;\n    u_xlat21 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz
            = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat7.x = (-_Glossiness) + 1.0;\n    u_xlat14 = u_xlat7.x
            * u_xlat7.x;\n    u_xlat14 = max(u_xlat14, 0.00200000009);\n    u_xlat22
            = u_xlat14 * u_xlat14;\n    u_xlat23 = u_xlat21 * u_xlat22 + (-u_xlat21);\n   
            u_xlat21 = u_xlat23 * u_xlat21 + 1.0;\n    u_xlat21 = u_xlat21 * u_xlat21
            + 1.00000001e-07;\n    u_xlat22 = u_xlat22 * 0.318309873;\n    u_xlat21
            = u_xlat22 / u_xlat21;\n    u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n   
            u_xlat8 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8 =
            clamp(u_xlat8, 0.0, 1.0);\n    u_xlat15 = (-u_xlat14) + 1.0;\n    u_xlat22
            = abs(u_xlat1.x) * u_xlat15 + u_xlat14;\n    u_xlat15 = u_xlat8 * u_xlat15
            + u_xlat14;\n    u_xlat14 = u_xlat14 * u_xlat7.x;\n    u_xlat14 = (-u_xlat14)
            * 0.280000001 + 1.0;\n    u_xlat15 = u_xlat15 * abs(u_xlat1.x);\n   
            u_xlat16_3.x = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat8 * u_xlat22
            + u_xlat15;\n    u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x
            = 0.5 / u_xlat1.x;\n    u_xlat21 = u_xlat21 * u_xlat1.x;\n    u_xlat21
            = u_xlat21 * 3.14159274;\n    u_xlat21 = max(u_xlat21, 9.99999975e-05);\n   
            u_xlat21 = sqrt(u_xlat21);\n    u_xlat21 = u_xlat8 * u_xlat21;\n    u_xlat16_1.xzw
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_10.xyz = _Color.xyz
            * u_xlat16_1.xzw + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xzw = u_xlat16_1.xzw * _Color.xyz;\n    u_xlat16_10.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_10.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.x = dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n   
            u_xlatb2 = u_xlat16_4.x!=0.0;\n    u_xlat2.x = u_xlatb2 ? 1.0 : float(0.0);\n   
            u_xlat21 = u_xlat21 * u_xlat2.x;\n    u_xlat2.xyz = vec3(u_xlat21) *
            _LightColor0.xyz;\n    u_xlat16_4.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_11.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_4.xyz = u_xlat16_11.xyz * u_xlat16_4.xxx
            + u_xlat16_10.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_4.xyz;\n   
            u_xlat16_4.x = u_xlat0.x + u_xlat0.x;\n    u_xlat16_4.x = u_xlat0.x *
            u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat7.x + -0.5;\n   
            u_xlat16_11.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_11.x = u_xlat16_11.x
            * u_xlat16_11.x;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_11.x;\n   
            u_xlat16_11.x = u_xlat16_4.x * u_xlat16_3.x + 1.0;\n    u_xlat16_18 =
            (-u_xlat8) + 1.0;\n    u_xlat16_25 = u_xlat16_18 * u_xlat16_18;\n   
            u_xlat16_25 = u_xlat16_25 * u_xlat16_25;\n    u_xlat16_18 = u_xlat16_18
            * u_xlat16_25;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_18 + 1.0;\n   
            u_xlat16_4.x = u_xlat16_11.x * u_xlat16_4.x;\n    u_xlat0.x = u_xlat8
            * u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_25 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz
            = u_xlat1.xzw * vec3(u_xlat16_25);\n    u_xlat16_25 = (-u_xlat16_25)
            + 1.0;\n    u_xlat16_25 = u_xlat16_25 + _Glossiness;\n    u_xlat16_25
            = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat16_6.xyz = (-u_xlat16_10.xyz)
            + vec3(u_xlat16_25);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz
            + u_xlat16_10.xyz;\n    u_xlat0.xyw = u_xlat16_5.xyz * u_xlat16_4.xyz
            + u_xlat2.xyz;\n    u_xlat16_1.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_24 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_24 = u_xlat16_1.x
            * _OcclusionStrength + u_xlat16_24;\n    u_xlat16_4.xyz = vec3(u_xlat16_24)
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat14) *
            u_xlat16_4.xyz;\n    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_3.xyz +
            u_xlat0.xyw;\n    u_xlat16_1.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat16_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform
            \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_1;\nvec4 u_xlat2;\nlowp vec3 u_xlat10_2;\nvec4 u_xlat3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat11;\nfloat u_xlat12;\nmediump
            vec3 u_xlat16_13;\nmediump vec3 u_xlat16_14;\nfloat u_xlat20;\nfloat
            u_xlat21;\nmediump float u_xlat16_23;\nfloat u_xlat27;\nlowp float u_xlat10_27;\nbool
            u_xlatb27;\nfloat u_xlat29;\nbool u_xlatb29;\nfloat u_xlat30;\nmediump
            float u_xlat16_32;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_0.w * _Color.w + (-_Cutoff);\n   
            u_xlatb27 = u_xlat16_1<0.0;\n    if(u_xlatb27){discard;}\n    u_xlat27
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat27) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat27) * vs_TEXCOORD1.xyz;\n    u_xlat27 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat27 = max(u_xlat27, 0.00100000005);\n    u_xlat27
            = inversesqrt(u_xlat27);\n    u_xlat2.xyz = vec3(u_xlat27) * u_xlat2.xyz;\n   
            u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat1.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(u_xlat1.xyz,
            u_xlat2.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat2.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);\n    u_xlat2.x = clamp(u_xlat2.x,
            0.0, 1.0);\n    u_xlat11 = (-_Glossiness) + 1.0;\n    u_xlat20 = u_xlat11
            * u_xlat11;\n    u_xlat20 = max(u_xlat20, 0.00200000009);\n    u_xlat29
            = u_xlat20 * u_xlat20;\n    u_xlat30 = u_xlat27 * u_xlat29 + (-u_xlat27);\n   
            u_xlat27 = u_xlat30 * u_xlat27 + 1.0;\n    u_xlat27 = u_xlat27 * u_xlat27
            + 1.00000001e-07;\n    u_xlat29 = u_xlat29 * 0.318309873;\n    u_xlat27
            = u_xlat29 / u_xlat27;\n    u_xlat29 = dot(u_xlat1.xyz, (-u_xlat3.xyz));\n   
            u_xlat3.x = (-u_xlat20) + 1.0;\n    u_xlat12 = abs(u_xlat29) * u_xlat3.x
            + u_xlat20;\n    u_xlat21 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat3.x = u_xlat21 * u_xlat3.x
            + u_xlat20;\n    u_xlat20 = u_xlat20 * u_xlat11;\n    u_xlat20 = (-u_xlat20)
            * 0.280000001 + 1.0;\n    u_xlat3.x = abs(u_xlat29) * u_xlat3.x;\n   
            u_xlat16_4.x = -abs(u_xlat29) + 1.0;\n    u_xlat29 = u_xlat21 * u_xlat12
            + u_xlat3.x;\n    u_xlat29 = u_xlat29 + 9.99999975e-06;\n    u_xlat29
            = 0.5 / u_xlat29;\n    u_xlat27 = u_xlat27 * u_xlat29;\n    u_xlat27
            = u_xlat27 * 3.14159274;\n    u_xlat27 = max(u_xlat27, 9.99999975e-05);\n   
            u_xlat27 = sqrt(u_xlat27);\n    u_xlat27 = u_xlat21 * u_xlat27;\n   
            u_xlat16_13.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_13.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_13.xyz, u_xlat16_13.xyz);\n   
            u_xlatb29 = u_xlat16_5.x!=0.0;\n    u_xlat29 = u_xlatb29 ? 1.0 : float(0.0);\n   
            u_xlat27 = u_xlat27 * u_xlat29;\n    u_xlat3.xyw = vec3(u_xlat27) * _LightColor0.xyz;\n   
            u_xlat16_5.x = (-u_xlat2.x) + 1.0;\n    u_xlat16_14.x = u_xlat16_5.x
            * u_xlat16_5.x;\n    u_xlat16_14.x = u_xlat16_14.x * u_xlat16_14.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_14.x;\n    u_xlat16_14.xyz = (-u_xlat16_13.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_14.xyz * u_xlat16_5.xxx
            + u_xlat16_13.xyz;\n    u_xlat3.xyw = u_xlat3.xyw * u_xlat16_5.xyz;\n   
            u_xlat16_5.x = u_xlat2.x + u_xlat2.x;\n    u_xlat16_5.x = u_xlat2.x *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat11 + -0.5;\n   
            u_xlat16_14.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_14.x = u_xlat16_14.x
            * u_xlat16_14.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_14.x;\n   
            u_xlat16_14.x = u_xlat16_5.x * u_xlat16_4.x + 1.0;\n    u_xlat16_23 =
            (-u_xlat21) + 1.0;\n    u_xlat16_32 = u_xlat16_23 * u_xlat16_23;\n   
            u_xlat16_32 = u_xlat16_32 * u_xlat16_32;\n    u_xlat16_23 = u_xlat16_23
            * u_xlat16_32;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_23 + 1.0;\n   
            u_xlat16_5.x = u_xlat16_14.x * u_xlat16_5.x;\n    u_xlat27 = u_xlat21
            * u_xlat16_5.x;\n    u_xlat16_5.xyz = vec3(u_xlat27) * _LightColor0.xyz;\n   
            u_xlat1.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n   
            u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz
            = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyw = log2(u_xlat16_6.xyz);\n   
            u_xlat2.xyw = u_xlat2.xyw * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat2.xyw = exp2(u_xlat2.xyw);\n    u_xlat2.xyw = u_xlat2.xyw * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat2.xyw = max(u_xlat2.xyw, vec3(0.0, 0.0, 0.0));\n    u_xlat10_27
            = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_32 = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_32 = u_xlat10_27 * _OcclusionStrength + u_xlat16_32;\n   
            u_xlat16_5.xyz = u_xlat2.xyw * vec3(u_xlat16_32) + u_xlat16_5.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat16_32) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat20) * u_xlat16_6.xyz;\n    u_xlat16_32 =
            (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_7.xyz = u_xlat0.xyz
            * vec3(u_xlat16_32);\n    u_xlat16_32 = (-u_xlat16_32) + 1.0;\n    u_xlat16_32
            = u_xlat16_32 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0,
            1.0);\n    u_xlat16_8.xyz = (-u_xlat16_13.xyz) + vec3(u_xlat16_32);\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat16_13.xyz;\n   
            u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat3.xyw;\n    u_xlat0.xyz
            = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat0.xyz;\n    u_xlat10_2.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_2.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform
            \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2)
            uniform mediump sampler2D _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4
            vs_TEXCOORD5;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump float u_xlat16_1;\nvec4
            u_xlat2;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nfloat u_xlat11;\nfloat u_xlat12;\nmediump vec3 u_xlat16_13;\nmediump
            vec3 u_xlat16_14;\nfloat u_xlat20;\nfloat u_xlat21;\nmediump float u_xlat16_23;\nfloat
            u_xlat27;\nmediump float u_xlat16_27;\nbool u_xlatb27;\nfloat u_xlat29;\nbool
            u_xlatb29;\nfloat u_xlat30;\nmediump float u_xlat16_32;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb27 = u_xlat16_1<0.0;\n    if(u_xlatb27){discard;}\n   
            u_xlat27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat27) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat27) * vs_TEXCOORD1.xyz;\n    u_xlat27 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat27 = max(u_xlat27, 0.00100000005);\n    u_xlat27
            = inversesqrt(u_xlat27);\n    u_xlat2.xyz = vec3(u_xlat27) * u_xlat2.xyz;\n   
            u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat1.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(u_xlat1.xyz,
            u_xlat2.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat2.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);\n    u_xlat2.x = clamp(u_xlat2.x,
            0.0, 1.0);\n    u_xlat11 = (-_Glossiness) + 1.0;\n    u_xlat20 = u_xlat11
            * u_xlat11;\n    u_xlat20 = max(u_xlat20, 0.00200000009);\n    u_xlat29
            = u_xlat20 * u_xlat20;\n    u_xlat30 = u_xlat27 * u_xlat29 + (-u_xlat27);\n   
            u_xlat27 = u_xlat30 * u_xlat27 + 1.0;\n    u_xlat27 = u_xlat27 * u_xlat27
            + 1.00000001e-07;\n    u_xlat29 = u_xlat29 * 0.318309873;\n    u_xlat27
            = u_xlat29 / u_xlat27;\n    u_xlat29 = dot(u_xlat1.xyz, (-u_xlat3.xyz));\n   
            u_xlat3.x = (-u_xlat20) + 1.0;\n    u_xlat12 = abs(u_xlat29) * u_xlat3.x
            + u_xlat20;\n    u_xlat21 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat3.x = u_xlat21 * u_xlat3.x
            + u_xlat20;\n    u_xlat20 = u_xlat20 * u_xlat11;\n    u_xlat20 = (-u_xlat20)
            * 0.280000001 + 1.0;\n    u_xlat3.x = abs(u_xlat29) * u_xlat3.x;\n   
            u_xlat16_4.x = -abs(u_xlat29) + 1.0;\n    u_xlat29 = u_xlat21 * u_xlat12
            + u_xlat3.x;\n    u_xlat29 = u_xlat29 + 9.99999975e-06;\n    u_xlat29
            = 0.5 / u_xlat29;\n    u_xlat27 = u_xlat27 * u_xlat29;\n    u_xlat27
            = u_xlat27 * 3.14159274;\n    u_xlat27 = max(u_xlat27, 9.99999975e-05);\n   
            u_xlat27 = sqrt(u_xlat27);\n    u_xlat27 = u_xlat21 * u_xlat27;\n   
            u_xlat16_13.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_13.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_13.xyz, u_xlat16_13.xyz);\n   
            u_xlatb29 = u_xlat16_5.x!=0.0;\n    u_xlat29 = u_xlatb29 ? 1.0 : float(0.0);\n   
            u_xlat27 = u_xlat27 * u_xlat29;\n    u_xlat3.xyw = vec3(u_xlat27) * _LightColor0.xyz;\n   
            u_xlat16_5.x = (-u_xlat2.x) + 1.0;\n    u_xlat16_14.x = u_xlat16_5.x
            * u_xlat16_5.x;\n    u_xlat16_14.x = u_xlat16_14.x * u_xlat16_14.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_14.x;\n    u_xlat16_14.xyz = (-u_xlat16_13.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_14.xyz * u_xlat16_5.xxx
            + u_xlat16_13.xyz;\n    u_xlat3.xyw = u_xlat3.xyw * u_xlat16_5.xyz;\n   
            u_xlat16_5.x = u_xlat2.x + u_xlat2.x;\n    u_xlat16_5.x = u_xlat2.x *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat11 + -0.5;\n   
            u_xlat16_14.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_14.x = u_xlat16_14.x
            * u_xlat16_14.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_14.x;\n   
            u_xlat16_14.x = u_xlat16_5.x * u_xlat16_4.x + 1.0;\n    u_xlat16_23 =
            (-u_xlat21) + 1.0;\n    u_xlat16_32 = u_xlat16_23 * u_xlat16_23;\n   
            u_xlat16_32 = u_xlat16_32 * u_xlat16_32;\n    u_xlat16_23 = u_xlat16_23
            * u_xlat16_32;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_23 + 1.0;\n   
            u_xlat16_5.x = u_xlat16_14.x * u_xlat16_5.x;\n    u_xlat27 = u_xlat21
            * u_xlat16_5.x;\n    u_xlat16_5.xyz = vec3(u_xlat27) * _LightColor0.xyz;\n   
            u_xlat1.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n   
            u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz
            = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyw = log2(u_xlat16_6.xyz);\n   
            u_xlat2.xyw = u_xlat2.xyw * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat2.xyw = exp2(u_xlat2.xyw);\n    u_xlat2.xyw = u_xlat2.xyw * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat2.xyw = max(u_xlat2.xyw, vec3(0.0, 0.0, 0.0));\n    u_xlat16_27
            = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_32 = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_32 = u_xlat16_27 * _OcclusionStrength + u_xlat16_32;\n   
            u_xlat16_5.xyz = u_xlat2.xyw * vec3(u_xlat16_32) + u_xlat16_5.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat16_32) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat20) * u_xlat16_6.xyz;\n    u_xlat16_32 =
            (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_7.xyz = u_xlat0.xyz
            * vec3(u_xlat16_32);\n    u_xlat16_32 = (-u_xlat16_32) + 1.0;\n    u_xlat16_32
            = u_xlat16_32 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0,
            1.0);\n    u_xlat16_8.xyz = (-u_xlat16_13.xyz) + vec3(u_xlat16_32);\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat16_13.xyz;\n   
            u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat3.xyw;\n    u_xlat0.xyz
            = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat0.xyz;\n    u_xlat16_2.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_2.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp sampler2D _EmissionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec3
            u_xlat1;\nlowp vec3 u_xlat10_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nbool u_xlatb3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nfloat u_xlat10;\nmediump
            vec3 u_xlat16_13;\nmediump vec3 u_xlat16_14;\nfloat u_xlat18;\nfloat
            u_xlat19;\nmediump float u_xlat16_23;\nfloat u_xlat27;\nfloat u_xlat28;\nlowp
            float u_xlat10_28;\nmediump float u_xlat16_32;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat9.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat9.xyz,
            u_xlat9.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x
            = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat9.xyz;\n   
            u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat2.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat9.x = (-_Glossiness) + 1.0;\n    u_xlat18 = u_xlat9.x
            * u_xlat9.x;\n    u_xlat18 = max(u_xlat18, 0.00200000009);\n    u_xlat28
            = u_xlat18 * u_xlat18;\n    u_xlat3.x = u_xlat27 * u_xlat28 + (-u_xlat27);\n   
            u_xlat27 = u_xlat3.x * u_xlat27 + 1.0;\n    u_xlat27 = u_xlat27 * u_xlat27
            + 1.00000001e-07;\n    u_xlat28 = u_xlat28 * 0.318309873;\n    u_xlat27
            = u_xlat28 / u_xlat27;\n    u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n   
            u_xlat10 = (-u_xlat18) + 1.0;\n    u_xlat19 = abs(u_xlat1.x) * u_xlat10
            + u_xlat18;\n    u_xlat28 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat28 = clamp(u_xlat28, 0.0, 1.0);\n    u_xlat10 = u_xlat28 * u_xlat10
            + u_xlat18;\n    u_xlat18 = u_xlat18 * u_xlat9.x;\n    u_xlat18 = (-u_xlat18)
            * 0.280000001 + 1.0;\n    u_xlat10 = u_xlat10 * abs(u_xlat1.x);\n   
            u_xlat16_4.x = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat28 * u_xlat19
            + u_xlat10;\n    u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x
            = 0.5 / u_xlat1.x;\n    u_xlat27 = u_xlat27 * u_xlat1.x;\n    u_xlat27
            = u_xlat27 * 3.14159274;\n    u_xlat27 = max(u_xlat27, 9.99999975e-05);\n   
            u_xlat27 = sqrt(u_xlat27);\n    u_xlat27 = u_xlat28 * u_xlat27;\n   
            u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz
            = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_13.xyz, u_xlat16_13.xyz);\n   
            u_xlatb3 = u_xlat16_5.x!=0.0;\n    u_xlat3.x = u_xlatb3 ? 1.0 : float(0.0);\n   
            u_xlat27 = u_xlat27 * u_xlat3.x;\n    u_xlat3.xyz = vec3(u_xlat27) *
            _LightColor0.xyz;\n    u_xlat16_5.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_14.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_14.x = u_xlat16_14.x * u_xlat16_14.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_14.x;\n    u_xlat16_14.xyz = (-u_xlat16_13.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_14.xyz * u_xlat16_5.xxx
            + u_xlat16_13.xyz;\n    u_xlat3.xyz = u_xlat3.xyz * u_xlat16_5.xyz;\n   
            u_xlat16_5.x = u_xlat0.x + u_xlat0.x;\n    u_xlat16_5.x = u_xlat0.x *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat9.x + -0.5;\n   
            u_xlat16_14.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_14.x = u_xlat16_14.x
            * u_xlat16_14.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_14.x;\n   
            u_xlat16_14.x = u_xlat16_5.x * u_xlat16_4.x + 1.0;\n    u_xlat16_23 =
            (-u_xlat28) + 1.0;\n    u_xlat16_32 = u_xlat16_23 * u_xlat16_23;\n   
            u_xlat16_32 = u_xlat16_32 * u_xlat16_32;\n    u_xlat16_23 = u_xlat16_23
            * u_xlat16_32;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_23 + 1.0;\n   
            u_xlat16_5.x = u_xlat16_14.x * u_xlat16_5.x;\n    u_xlat0.x = u_xlat28
            * u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat2.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat2);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat2);\n   
            u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz
            = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyw = log2(u_xlat16_6.xyz);\n   
            u_xlat0.xyw = u_xlat0.xyw * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat0.xyw = exp2(u_xlat0.xyw);\n    u_xlat0.xyw = u_xlat0.xyw * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyw = max(u_xlat0.xyw, vec3(0.0, 0.0, 0.0));\n    u_xlat10_28
            = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_32 = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_32 = u_xlat10_28 * _OcclusionStrength + u_xlat16_32;\n   
            u_xlat16_5.xyz = u_xlat0.xyw * vec3(u_xlat16_32) + u_xlat16_5.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat16_32) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat18) * u_xlat16_6.xyz;\n    u_xlat16_32 =
            (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_7.xyz = u_xlat1.xyz
            * vec3(u_xlat16_32);\n    u_xlat16_32 = (-u_xlat16_32) + 1.0;\n    u_xlat16_32
            = u_xlat16_32 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0,
            1.0);\n    u_xlat16_8.xyz = (-u_xlat16_13.xyz) + vec3(u_xlat16_32);\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat16_13.xyz;\n   
            u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat3.xyz;\n    u_xlat0.xyz
            = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec3 u_xlat1;\nmediump
            vec3 u_xlat16_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nbool u_xlatb3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nfloat u_xlat10;\nmediump
            vec3 u_xlat16_13;\nmediump vec3 u_xlat16_14;\nfloat u_xlat18;\nfloat
            u_xlat19;\nmediump float u_xlat16_23;\nfloat u_xlat27;\nfloat u_xlat28;\nmediump
            float u_xlat16_28;\nmediump float u_xlat16_32;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat9.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat9.xyz,
            u_xlat9.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x
            = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat9.xyz;\n   
            u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat2.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat9.x = (-_Glossiness) + 1.0;\n    u_xlat18 = u_xlat9.x
            * u_xlat9.x;\n    u_xlat18 = max(u_xlat18, 0.00200000009);\n    u_xlat28
            = u_xlat18 * u_xlat18;\n    u_xlat3.x = u_xlat27 * u_xlat28 + (-u_xlat27);\n   
            u_xlat27 = u_xlat3.x * u_xlat27 + 1.0;\n    u_xlat27 = u_xlat27 * u_xlat27
            + 1.00000001e-07;\n    u_xlat28 = u_xlat28 * 0.318309873;\n    u_xlat27
            = u_xlat28 / u_xlat27;\n    u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n   
            u_xlat10 = (-u_xlat18) + 1.0;\n    u_xlat19 = abs(u_xlat1.x) * u_xlat10
            + u_xlat18;\n    u_xlat28 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat28 = clamp(u_xlat28, 0.0, 1.0);\n    u_xlat10 = u_xlat28 * u_xlat10
            + u_xlat18;\n    u_xlat18 = u_xlat18 * u_xlat9.x;\n    u_xlat18 = (-u_xlat18)
            * 0.280000001 + 1.0;\n    u_xlat10 = u_xlat10 * abs(u_xlat1.x);\n   
            u_xlat16_4.x = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat28 * u_xlat19
            + u_xlat10;\n    u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x
            = 0.5 / u_xlat1.x;\n    u_xlat27 = u_xlat27 * u_xlat1.x;\n    u_xlat27
            = u_xlat27 * 3.14159274;\n    u_xlat27 = max(u_xlat27, 9.99999975e-05);\n   
            u_xlat27 = sqrt(u_xlat27);\n    u_xlat27 = u_xlat28 * u_xlat27;\n   
            u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz
            = _Color.xyz * u_xlat16_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_13.xyz, u_xlat16_13.xyz);\n   
            u_xlatb3 = u_xlat16_5.x!=0.0;\n    u_xlat3.x = u_xlatb3 ? 1.0 : float(0.0);\n   
            u_xlat27 = u_xlat27 * u_xlat3.x;\n    u_xlat3.xyz = vec3(u_xlat27) *
            _LightColor0.xyz;\n    u_xlat16_5.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_14.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_14.x = u_xlat16_14.x * u_xlat16_14.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_14.x;\n    u_xlat16_14.xyz = (-u_xlat16_13.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_14.xyz * u_xlat16_5.xxx
            + u_xlat16_13.xyz;\n    u_xlat3.xyz = u_xlat3.xyz * u_xlat16_5.xyz;\n   
            u_xlat16_5.x = u_xlat0.x + u_xlat0.x;\n    u_xlat16_5.x = u_xlat0.x *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat9.x + -0.5;\n   
            u_xlat16_14.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_14.x = u_xlat16_14.x
            * u_xlat16_14.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_14.x;\n   
            u_xlat16_14.x = u_xlat16_5.x * u_xlat16_4.x + 1.0;\n    u_xlat16_23 =
            (-u_xlat28) + 1.0;\n    u_xlat16_32 = u_xlat16_23 * u_xlat16_23;\n   
            u_xlat16_32 = u_xlat16_32 * u_xlat16_32;\n    u_xlat16_23 = u_xlat16_23
            * u_xlat16_32;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_23 + 1.0;\n   
            u_xlat16_5.x = u_xlat16_14.x * u_xlat16_5.x;\n    u_xlat0.x = u_xlat28
            * u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat2.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat2);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat2);\n   
            u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz
            = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyw = log2(u_xlat16_6.xyz);\n   
            u_xlat0.xyw = u_xlat0.xyw * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat0.xyw = exp2(u_xlat0.xyw);\n    u_xlat0.xyw = u_xlat0.xyw * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyw = max(u_xlat0.xyw, vec3(0.0, 0.0, 0.0));\n    u_xlat16_28
            = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_32 = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_32 = u_xlat16_28 * _OcclusionStrength + u_xlat16_32;\n   
            u_xlat16_5.xyz = u_xlat0.xyw * vec3(u_xlat16_32) + u_xlat16_5.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat16_32) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat18) * u_xlat16_6.xyz;\n    u_xlat16_32 =
            (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_7.xyz = u_xlat1.xyz
            * vec3(u_xlat16_32);\n    u_xlat16_32 = (-u_xlat16_32) + 1.0;\n    u_xlat16_32
            = u_xlat16_32 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0,
            1.0);\n    u_xlat16_8.xyz = (-u_xlat16_13.xyz) + vec3(u_xlat16_32);\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat16_13.xyz;\n   
            u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat3.xyz;\n    u_xlat0.xyz
            = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float
            _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp sampler2D _EmissionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvec3
            u_xlat2;\nlowp vec3 u_xlat10_2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_9;\nfloat u_xlat10;\nvec3 u_xlat11;\nmediump vec3 u_xlat16_13;\nfloat
            u_xlat18;\nfloat u_xlat19;\nmediump float u_xlat16_21;\nfloat u_xlat24;\nlowp
            float u_xlat10_24;\nbool u_xlatb24;\nmediump float u_xlat16_25;\nfloat
            u_xlat26;\nbool u_xlatb26;\nfloat u_xlat27;\nmediump float u_xlat16_29;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.x = u_xlat10_0.w * _Color.w + (-_Cutoff);\n    u_xlatb24 =
            u_xlat16_1.x<0.0;\n    if(u_xlatb24){discard;}\n    u_xlat24 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat24) * vs_TEXCOORD1.xyz;\n    u_xlat24 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat24 = max(u_xlat24, 0.00100000005);\n    u_xlat24
            = inversesqrt(u_xlat24);\n    u_xlat2.xyz = vec3(u_xlat24) * u_xlat2.xyz;\n   
            u_xlat24 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n   
            u_xlat4.xyz = vec3(u_xlat24) * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot(u_xlat4.xyz,
            u_xlat2.xyz);\n    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat2.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);\n    u_xlat2.x = clamp(u_xlat2.x,
            0.0, 1.0);\n    u_xlat10 = (-_Glossiness) + 1.0;\n    u_xlat18 = u_xlat10
            * u_xlat10;\n    u_xlat18 = max(u_xlat18, 0.00200000009);\n    u_xlat26
            = u_xlat18 * u_xlat18;\n    u_xlat27 = u_xlat24 * u_xlat26 + (-u_xlat24);\n   
            u_xlat24 = u_xlat27 * u_xlat24 + 1.0;\n    u_xlat24 = u_xlat24 * u_xlat24
            + 1.00000001e-07;\n    u_xlat26 = u_xlat26 * 0.318309873;\n    u_xlat24
            = u_xlat26 / u_xlat24;\n    u_xlat26 = dot(u_xlat4.xyz, (-u_xlat3.xyz));\n   
            u_xlat3.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat3.x
            = clamp(u_xlat3.x, 0.0, 1.0);\n    u_xlat11.x = (-u_xlat18) + 1.0;\n   
            u_xlat19 = abs(u_xlat26) * u_xlat11.x + u_xlat18;\n    u_xlat11.x = u_xlat3.x
            * u_xlat11.x + u_xlat18;\n    u_xlat18 = u_xlat18 * u_xlat10;\n    u_xlat18
            = (-u_xlat18) * 0.280000001 + 1.0;\n    u_xlat11.x = abs(u_xlat26) *
            u_xlat11.x;\n    u_xlat16_1.x = -abs(u_xlat26) + 1.0;\n    u_xlat26 =
            u_xlat3.x * u_xlat19 + u_xlat11.x;\n    u_xlat26 = u_xlat26 + 9.99999975e-06;\n   
            u_xlat26 = 0.5 / u_xlat26;\n    u_xlat24 = u_xlat24 * u_xlat26;\n   
            u_xlat24 = u_xlat24 * 3.14159274;\n    u_xlat24 = max(u_xlat24, 9.99999975e-05);\n   
            u_xlat24 = sqrt(u_xlat24);\n    u_xlat24 = u_xlat3.x * u_xlat24;\n   
            u_xlat16_9.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_9.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_9.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_9.xyz, u_xlat16_9.xyz);\n   
            u_xlatb26 = u_xlat16_5.x!=0.0;\n    u_xlat26 = u_xlatb26 ? 1.0 : float(0.0);\n   
            u_xlat24 = u_xlat24 * u_xlat26;\n    u_xlat11.xyz = vec3(u_xlat24) *
            _LightColor0.xyz;\n    u_xlat16_5.x = (-u_xlat2.x) + 1.0;\n    u_xlat16_13.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_13.x = u_xlat16_13.x * u_xlat16_13.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_13.x;\n    u_xlat16_13.xyz = (-u_xlat16_9.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_13.xyz * u_xlat16_5.xxx
            + u_xlat16_9.xyz;\n    u_xlat11.xyz = u_xlat11.xyz * u_xlat16_5.xyz;\n   
            u_xlat16_5.x = u_xlat2.x + u_xlat2.x;\n    u_xlat16_5.x = u_xlat2.x *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat10 + -0.5;\n   
            u_xlat16_13.x = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat16_13.x = u_xlat16_13.x
            * u_xlat16_13.x;\n    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_13.x;\n   
            u_xlat16_13.x = u_xlat16_5.x * u_xlat16_1.x + 1.0;\n    u_xlat16_21 =
            (-u_xlat3.x) + 1.0;\n    u_xlat16_29 = u_xlat16_21 * u_xlat16_21;\n   
            u_xlat16_29 = u_xlat16_29 * u_xlat16_29;\n    u_xlat16_21 = u_xlat16_21
            * u_xlat16_29;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_21 + 1.0;\n   
            u_xlat16_5.x = u_xlat16_13.x * u_xlat16_5.x;\n    u_xlat24 = u_xlat3.x
            * u_xlat16_5.x;\n    u_xlat16_5.xyz = vec3(u_xlat24) * _LightColor0.xyz;\n   
            u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_6.xyz
            = u_xlat0.xyz * vec3(u_xlat16_29);\n    u_xlat16_29 = (-u_xlat16_29)
            + 1.0;\n    u_xlat16_29 = u_xlat16_29 + _Glossiness;\n    u_xlat16_29
            = clamp(u_xlat16_29, 0.0, 1.0);\n    u_xlat16_7.xyz = (-u_xlat16_9.xyz)
            + vec3(u_xlat16_29);\n    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz
            + u_xlat16_9.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat11.xyz;\n    u_xlat10_24 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_25 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_25 = u_xlat10_24
            * _OcclusionStrength + u_xlat16_25;\n    u_xlat16_5.xyz = vec3(u_xlat16_25)
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat18) *
            u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz +
            u_xlat0.xyz;\n    u_xlat10_2.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat10_2.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float
            _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat10;\nvec3 u_xlat11;\nmediump vec3 u_xlat16_13;\nfloat u_xlat18;\nfloat
            u_xlat19;\nmediump float u_xlat16_21;\nfloat u_xlat24;\nmediump float
            u_xlat16_24;\nbool u_xlatb24;\nmediump float u_xlat16_25;\nfloat u_xlat26;\nbool
            u_xlatb26;\nfloat u_xlat27;\nmediump float u_xlat16_29;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x =
            u_xlat16_0.w * _Color.w + (-_Cutoff);\n    u_xlatb24 = u_xlat16_1.x<0.0;\n   
            if(u_xlatb24){discard;}\n    u_xlat24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.xyz = (-vs_TEXCOORD1.xyz)
            * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;\n    u_xlat3.xyz = vec3(u_xlat24)
            * vs_TEXCOORD1.xyz;\n    u_xlat24 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat24 = max(u_xlat24, 0.00100000005);\n    u_xlat24 = inversesqrt(u_xlat24);\n   
            u_xlat2.xyz = vec3(u_xlat24) * u_xlat2.xyz;\n    u_xlat24 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat4.xyz
            = vec3(u_xlat24) * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot(u_xlat4.xyz,
            u_xlat2.xyz);\n    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat2.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);\n    u_xlat2.x = clamp(u_xlat2.x,
            0.0, 1.0);\n    u_xlat10 = (-_Glossiness) + 1.0;\n    u_xlat18 = u_xlat10
            * u_xlat10;\n    u_xlat18 = max(u_xlat18, 0.00200000009);\n    u_xlat26
            = u_xlat18 * u_xlat18;\n    u_xlat27 = u_xlat24 * u_xlat26 + (-u_xlat24);\n   
            u_xlat24 = u_xlat27 * u_xlat24 + 1.0;\n    u_xlat24 = u_xlat24 * u_xlat24
            + 1.00000001e-07;\n    u_xlat26 = u_xlat26 * 0.318309873;\n    u_xlat24
            = u_xlat26 / u_xlat24;\n    u_xlat26 = dot(u_xlat4.xyz, (-u_xlat3.xyz));\n   
            u_xlat3.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat3.x
            = clamp(u_xlat3.x, 0.0, 1.0);\n    u_xlat11.x = (-u_xlat18) + 1.0;\n   
            u_xlat19 = abs(u_xlat26) * u_xlat11.x + u_xlat18;\n    u_xlat11.x = u_xlat3.x
            * u_xlat11.x + u_xlat18;\n    u_xlat18 = u_xlat18 * u_xlat10;\n    u_xlat18
            = (-u_xlat18) * 0.280000001 + 1.0;\n    u_xlat11.x = abs(u_xlat26) *
            u_xlat11.x;\n    u_xlat16_1.x = -abs(u_xlat26) + 1.0;\n    u_xlat26 =
            u_xlat3.x * u_xlat19 + u_xlat11.x;\n    u_xlat26 = u_xlat26 + 9.99999975e-06;\n   
            u_xlat26 = 0.5 / u_xlat26;\n    u_xlat24 = u_xlat24 * u_xlat26;\n   
            u_xlat24 = u_xlat24 * 3.14159274;\n    u_xlat24 = max(u_xlat24, 9.99999975e-05);\n   
            u_xlat24 = sqrt(u_xlat24);\n    u_xlat24 = u_xlat3.x * u_xlat24;\n   
            u_xlat16_9.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_9.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_9.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_9.xyz, u_xlat16_9.xyz);\n   
            u_xlatb26 = u_xlat16_5.x!=0.0;\n    u_xlat26 = u_xlatb26 ? 1.0 : float(0.0);\n   
            u_xlat24 = u_xlat24 * u_xlat26;\n    u_xlat11.xyz = vec3(u_xlat24) *
            _LightColor0.xyz;\n    u_xlat16_5.x = (-u_xlat2.x) + 1.0;\n    u_xlat16_13.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_13.x = u_xlat16_13.x * u_xlat16_13.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_13.x;\n    u_xlat16_13.xyz = (-u_xlat16_9.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_13.xyz * u_xlat16_5.xxx
            + u_xlat16_9.xyz;\n    u_xlat11.xyz = u_xlat11.xyz * u_xlat16_5.xyz;\n   
            u_xlat16_5.x = u_xlat2.x + u_xlat2.x;\n    u_xlat16_5.x = u_xlat2.x *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat10 + -0.5;\n   
            u_xlat16_13.x = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat16_13.x = u_xlat16_13.x
            * u_xlat16_13.x;\n    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_13.x;\n   
            u_xlat16_13.x = u_xlat16_5.x * u_xlat16_1.x + 1.0;\n    u_xlat16_21 =
            (-u_xlat3.x) + 1.0;\n    u_xlat16_29 = u_xlat16_21 * u_xlat16_21;\n   
            u_xlat16_29 = u_xlat16_29 * u_xlat16_29;\n    u_xlat16_21 = u_xlat16_21
            * u_xlat16_29;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_21 + 1.0;\n   
            u_xlat16_5.x = u_xlat16_13.x * u_xlat16_5.x;\n    u_xlat24 = u_xlat3.x
            * u_xlat16_5.x;\n    u_xlat16_5.xyz = vec3(u_xlat24) * _LightColor0.xyz;\n   
            u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_6.xyz
            = u_xlat0.xyz * vec3(u_xlat16_29);\n    u_xlat16_29 = (-u_xlat16_29)
            + 1.0;\n    u_xlat16_29 = u_xlat16_29 + _Glossiness;\n    u_xlat16_29
            = clamp(u_xlat16_29, 0.0, 1.0);\n    u_xlat16_7.xyz = (-u_xlat16_9.xyz)
            + vec3(u_xlat16_29);\n    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz
            + u_xlat16_9.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat11.xyz;\n    u_xlat16_24 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_25 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_25 = u_xlat16_24
            * _OcclusionStrength + u_xlat16_25;\n    u_xlat16_5.xyz = vec3(u_xlat16_25)
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat18) *
            u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz +
            u_xlat0.xyz;\n    u_xlat16_2.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat16_2.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp
            sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec4
            u_xlat1;\nlowp vec4 u_xlat10_1;\nvec3 u_xlat2;\nbool u_xlatb2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nvec3 u_xlat7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat14;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nfloat
            u_xlat21;\nfloat u_xlat22;\nfloat u_xlat23;\nmediump float u_xlat16_24;\nmediump
            float u_xlat16_25;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat7.xyz,
            u_xlat7.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x
            = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat7.xyz;\n   
            u_xlat21 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat7.x = (-_Glossiness) + 1.0;\n    u_xlat14 = u_xlat7.x
            * u_xlat7.x;\n    u_xlat14 = max(u_xlat14, 0.00200000009);\n    u_xlat22
            = u_xlat14 * u_xlat14;\n    u_xlat23 = u_xlat21 * u_xlat22 + (-u_xlat21);\n   
            u_xlat21 = u_xlat23 * u_xlat21 + 1.0;\n    u_xlat21 = u_xlat21 * u_xlat21
            + 1.00000001e-07;\n    u_xlat22 = u_xlat22 * 0.318309873;\n    u_xlat21
            = u_xlat22 / u_xlat21;\n    u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n   
            u_xlat8 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8 =
            clamp(u_xlat8, 0.0, 1.0);\n    u_xlat15 = (-u_xlat14) + 1.0;\n    u_xlat22
            = abs(u_xlat1.x) * u_xlat15 + u_xlat14;\n    u_xlat15 = u_xlat8 * u_xlat15
            + u_xlat14;\n    u_xlat14 = u_xlat14 * u_xlat7.x;\n    u_xlat14 = (-u_xlat14)
            * 0.280000001 + 1.0;\n    u_xlat15 = u_xlat15 * abs(u_xlat1.x);\n   
            u_xlat16_3.x = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat8 * u_xlat22
            + u_xlat15;\n    u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x
            = 0.5 / u_xlat1.x;\n    u_xlat21 = u_xlat21 * u_xlat1.x;\n    u_xlat21
            = u_xlat21 * 3.14159274;\n    u_xlat21 = max(u_xlat21, 9.99999975e-05);\n   
            u_xlat21 = sqrt(u_xlat21);\n    u_xlat21 = u_xlat8 * u_xlat21;\n    u_xlat10_1.xzw
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_10.xyz = _Color.xyz
            * u_xlat10_1.xzw + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xzw = u_xlat10_1.xzw * _Color.xyz;\n    u_xlat16_10.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_10.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.x = dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n   
            u_xlatb2 = u_xlat16_4.x!=0.0;\n    u_xlat2.x = u_xlatb2 ? 1.0 : float(0.0);\n   
            u_xlat21 = u_xlat21 * u_xlat2.x;\n    u_xlat2.xyz = vec3(u_xlat21) *
            _LightColor0.xyz;\n    u_xlat16_4.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_11.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_4.xyz = u_xlat16_11.xyz * u_xlat16_4.xxx
            + u_xlat16_10.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_4.xyz;\n   
            u_xlat16_4.x = u_xlat0.x + u_xlat0.x;\n    u_xlat16_4.x = u_xlat0.x *
            u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat7.x + -0.5;\n   
            u_xlat16_11.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_11.x = u_xlat16_11.x
            * u_xlat16_11.x;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_11.x;\n   
            u_xlat16_11.x = u_xlat16_4.x * u_xlat16_3.x + 1.0;\n    u_xlat16_18 =
            (-u_xlat8) + 1.0;\n    u_xlat16_25 = u_xlat16_18 * u_xlat16_18;\n   
            u_xlat16_25 = u_xlat16_25 * u_xlat16_25;\n    u_xlat16_18 = u_xlat16_18
            * u_xlat16_25;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_18 + 1.0;\n   
            u_xlat16_4.x = u_xlat16_11.x * u_xlat16_4.x;\n    u_xlat0.x = u_xlat8
            * u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_25 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz
            = u_xlat1.xzw * vec3(u_xlat16_25);\n    u_xlat16_25 = (-u_xlat16_25)
            + 1.0;\n    u_xlat16_25 = u_xlat16_25 + _Glossiness;\n    u_xlat16_25
            = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat16_6.xyz = (-u_xlat16_10.xyz)
            + vec3(u_xlat16_25);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz
            + u_xlat16_10.xyz;\n    u_xlat0.xyw = u_xlat16_5.xyz * u_xlat16_4.xyz
            + u_xlat2.xyz;\n    u_xlat10_1.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_24 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_24 = u_xlat10_1.x
            * _OcclusionStrength + u_xlat16_24;\n    u_xlat16_4.xyz = vec3(u_xlat16_24)
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat14) *
            u_xlat16_4.xyz;\n    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_3.xyz +
            u_xlat0.xyw;\n    u_xlat10_1.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump
            sampler2D _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec3 u_xlat2;\nbool
            u_xlatb2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nfloat u_xlat8;\nmediump
            vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat14;\nfloat
            u_xlat15;\nmediump float u_xlat16_18;\nfloat u_xlat21;\nfloat u_xlat22;\nfloat
            u_xlat23;\nmediump float u_xlat16_24;\nmediump float u_xlat16_25;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat7.xyz = (-vs_TEXCOORD1.xyz)
            * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx
            * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat7.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat7.xyz;\n    u_xlat21 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz
            = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat7.x = (-_Glossiness) + 1.0;\n    u_xlat14 = u_xlat7.x
            * u_xlat7.x;\n    u_xlat14 = max(u_xlat14, 0.00200000009);\n    u_xlat22
            = u_xlat14 * u_xlat14;\n    u_xlat23 = u_xlat21 * u_xlat22 + (-u_xlat21);\n   
            u_xlat21 = u_xlat23 * u_xlat21 + 1.0;\n    u_xlat21 = u_xlat21 * u_xlat21
            + 1.00000001e-07;\n    u_xlat22 = u_xlat22 * 0.318309873;\n    u_xlat21
            = u_xlat22 / u_xlat21;\n    u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n   
            u_xlat8 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8 =
            clamp(u_xlat8, 0.0, 1.0);\n    u_xlat15 = (-u_xlat14) + 1.0;\n    u_xlat22
            = abs(u_xlat1.x) * u_xlat15 + u_xlat14;\n    u_xlat15 = u_xlat8 * u_xlat15
            + u_xlat14;\n    u_xlat14 = u_xlat14 * u_xlat7.x;\n    u_xlat14 = (-u_xlat14)
            * 0.280000001 + 1.0;\n    u_xlat15 = u_xlat15 * abs(u_xlat1.x);\n   
            u_xlat16_3.x = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat8 * u_xlat22
            + u_xlat15;\n    u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x
            = 0.5 / u_xlat1.x;\n    u_xlat21 = u_xlat21 * u_xlat1.x;\n    u_xlat21
            = u_xlat21 * 3.14159274;\n    u_xlat21 = max(u_xlat21, 9.99999975e-05);\n   
            u_xlat21 = sqrt(u_xlat21);\n    u_xlat21 = u_xlat8 * u_xlat21;\n    u_xlat16_1.xzw
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_10.xyz = _Color.xyz
            * u_xlat16_1.xzw + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xzw = u_xlat16_1.xzw * _Color.xyz;\n    u_xlat16_10.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_10.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.x = dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n   
            u_xlatb2 = u_xlat16_4.x!=0.0;\n    u_xlat2.x = u_xlatb2 ? 1.0 : float(0.0);\n   
            u_xlat21 = u_xlat21 * u_xlat2.x;\n    u_xlat2.xyz = vec3(u_xlat21) *
            _LightColor0.xyz;\n    u_xlat16_4.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_11.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_4.xyz = u_xlat16_11.xyz * u_xlat16_4.xxx
            + u_xlat16_10.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_4.xyz;\n   
            u_xlat16_4.x = u_xlat0.x + u_xlat0.x;\n    u_xlat16_4.x = u_xlat0.x *
            u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat7.x + -0.5;\n   
            u_xlat16_11.x = u_xlat16_3.x * u_xlat16_3.x;\n    u_xlat16_11.x = u_xlat16_11.x
            * u_xlat16_11.x;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_11.x;\n   
            u_xlat16_11.x = u_xlat16_4.x * u_xlat16_3.x + 1.0;\n    u_xlat16_18 =
            (-u_xlat8) + 1.0;\n    u_xlat16_25 = u_xlat16_18 * u_xlat16_18;\n   
            u_xlat16_25 = u_xlat16_25 * u_xlat16_25;\n    u_xlat16_18 = u_xlat16_18
            * u_xlat16_25;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_18 + 1.0;\n   
            u_xlat16_4.x = u_xlat16_11.x * u_xlat16_4.x;\n    u_xlat0.x = u_xlat8
            * u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_25 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz
            = u_xlat1.xzw * vec3(u_xlat16_25);\n    u_xlat16_25 = (-u_xlat16_25)
            + 1.0;\n    u_xlat16_25 = u_xlat16_25 + _Glossiness;\n    u_xlat16_25
            = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat16_6.xyz = (-u_xlat16_10.xyz)
            + vec3(u_xlat16_25);\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_6.xyz
            + u_xlat16_10.xyz;\n    u_xlat0.xyw = u_xlat16_5.xyz * u_xlat16_4.xyz
            + u_xlat2.xyz;\n    u_xlat16_1.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_24 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_24 = u_xlat16_1.x
            * _OcclusionStrength + u_xlat16_24;\n    u_xlat16_4.xyz = vec3(u_xlat16_24)
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat14) *
            u_xlat16_4.xyz;\n    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_3.xyz +
            u_xlat0.xyw;\n    u_xlat16_1.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat16_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform
            \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_1;\nvec4 u_xlat2;\nlowp vec3 u_xlat10_2;\nvec4 u_xlat3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat11;\nfloat u_xlat12;\nmediump
            vec3 u_xlat16_13;\nmediump vec3 u_xlat16_14;\nfloat u_xlat20;\nfloat
            u_xlat21;\nmediump float u_xlat16_23;\nfloat u_xlat27;\nlowp float u_xlat10_27;\nbool
            u_xlatb27;\nfloat u_xlat29;\nbool u_xlatb29;\nfloat u_xlat30;\nmediump
            float u_xlat16_32;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_0.w * _Color.w + (-_Cutoff);\n   
            u_xlatb27 = u_xlat16_1<0.0;\n    if(u_xlatb27){discard;}\n    u_xlat27
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat27) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat27) * vs_TEXCOORD1.xyz;\n    u_xlat27 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat27 = max(u_xlat27, 0.00100000005);\n    u_xlat27
            = inversesqrt(u_xlat27);\n    u_xlat2.xyz = vec3(u_xlat27) * u_xlat2.xyz;\n   
            u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat1.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(u_xlat1.xyz,
            u_xlat2.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat2.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);\n    u_xlat2.x = clamp(u_xlat2.x,
            0.0, 1.0);\n    u_xlat11 = (-_Glossiness) + 1.0;\n    u_xlat20 = u_xlat11
            * u_xlat11;\n    u_xlat20 = max(u_xlat20, 0.00200000009);\n    u_xlat29
            = u_xlat20 * u_xlat20;\n    u_xlat30 = u_xlat27 * u_xlat29 + (-u_xlat27);\n   
            u_xlat27 = u_xlat30 * u_xlat27 + 1.0;\n    u_xlat27 = u_xlat27 * u_xlat27
            + 1.00000001e-07;\n    u_xlat29 = u_xlat29 * 0.318309873;\n    u_xlat27
            = u_xlat29 / u_xlat27;\n    u_xlat29 = dot(u_xlat1.xyz, (-u_xlat3.xyz));\n   
            u_xlat3.x = (-u_xlat20) + 1.0;\n    u_xlat12 = abs(u_xlat29) * u_xlat3.x
            + u_xlat20;\n    u_xlat21 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat3.x = u_xlat21 * u_xlat3.x
            + u_xlat20;\n    u_xlat20 = u_xlat20 * u_xlat11;\n    u_xlat20 = (-u_xlat20)
            * 0.280000001 + 1.0;\n    u_xlat3.x = abs(u_xlat29) * u_xlat3.x;\n   
            u_xlat16_4.x = -abs(u_xlat29) + 1.0;\n    u_xlat29 = u_xlat21 * u_xlat12
            + u_xlat3.x;\n    u_xlat29 = u_xlat29 + 9.99999975e-06;\n    u_xlat29
            = 0.5 / u_xlat29;\n    u_xlat27 = u_xlat27 * u_xlat29;\n    u_xlat27
            = u_xlat27 * 3.14159274;\n    u_xlat27 = max(u_xlat27, 9.99999975e-05);\n   
            u_xlat27 = sqrt(u_xlat27);\n    u_xlat27 = u_xlat21 * u_xlat27;\n   
            u_xlat16_13.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_13.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_13.xyz, u_xlat16_13.xyz);\n   
            u_xlatb29 = u_xlat16_5.x!=0.0;\n    u_xlat29 = u_xlatb29 ? 1.0 : float(0.0);\n   
            u_xlat27 = u_xlat27 * u_xlat29;\n    u_xlat3.xyw = vec3(u_xlat27) * _LightColor0.xyz;\n   
            u_xlat16_5.x = (-u_xlat2.x) + 1.0;\n    u_xlat16_14.x = u_xlat16_5.x
            * u_xlat16_5.x;\n    u_xlat16_14.x = u_xlat16_14.x * u_xlat16_14.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_14.x;\n    u_xlat16_14.xyz = (-u_xlat16_13.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_14.xyz * u_xlat16_5.xxx
            + u_xlat16_13.xyz;\n    u_xlat3.xyw = u_xlat3.xyw * u_xlat16_5.xyz;\n   
            u_xlat16_5.x = u_xlat2.x + u_xlat2.x;\n    u_xlat16_5.x = u_xlat2.x *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat11 + -0.5;\n   
            u_xlat16_14.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_14.x = u_xlat16_14.x
            * u_xlat16_14.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_14.x;\n   
            u_xlat16_14.x = u_xlat16_5.x * u_xlat16_4.x + 1.0;\n    u_xlat16_23 =
            (-u_xlat21) + 1.0;\n    u_xlat16_32 = u_xlat16_23 * u_xlat16_23;\n   
            u_xlat16_32 = u_xlat16_32 * u_xlat16_32;\n    u_xlat16_23 = u_xlat16_23
            * u_xlat16_32;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_23 + 1.0;\n   
            u_xlat16_5.x = u_xlat16_14.x * u_xlat16_5.x;\n    u_xlat27 = u_xlat21
            * u_xlat16_5.x;\n    u_xlat16_5.xyz = vec3(u_xlat27) * _LightColor0.xyz;\n   
            u_xlat1.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n   
            u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz
            = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyw = log2(u_xlat16_6.xyz);\n   
            u_xlat2.xyw = u_xlat2.xyw * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat2.xyw = exp2(u_xlat2.xyw);\n    u_xlat2.xyw = u_xlat2.xyw * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat2.xyw = max(u_xlat2.xyw, vec3(0.0, 0.0, 0.0));\n    u_xlat10_27
            = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_32 = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_32 = u_xlat10_27 * _OcclusionStrength + u_xlat16_32;\n   
            u_xlat16_5.xyz = u_xlat2.xyw * vec3(u_xlat16_32) + u_xlat16_5.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat16_32) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat20) * u_xlat16_6.xyz;\n    u_xlat16_32 =
            (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_7.xyz = u_xlat0.xyz
            * vec3(u_xlat16_32);\n    u_xlat16_32 = (-u_xlat16_32) + 1.0;\n    u_xlat16_32
            = u_xlat16_32 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0,
            1.0);\n    u_xlat16_8.xyz = (-u_xlat16_13.xyz) + vec3(u_xlat16_32);\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat16_13.xyz;\n   
            u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat3.xyw;\n    u_xlat0.xyz
            = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat0.xyz;\n    u_xlat10_2.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_2.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec4
            u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform
            \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2)
            uniform mediump sampler2D _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4
            vs_TEXCOORD5;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump float u_xlat16_1;\nvec4
            u_xlat2;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nfloat u_xlat11;\nfloat u_xlat12;\nmediump vec3 u_xlat16_13;\nmediump
            vec3 u_xlat16_14;\nfloat u_xlat20;\nfloat u_xlat21;\nmediump float u_xlat16_23;\nfloat
            u_xlat27;\nmediump float u_xlat16_27;\nbool u_xlatb27;\nfloat u_xlat29;\nbool
            u_xlatb29;\nfloat u_xlat30;\nmediump float u_xlat16_32;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb27 = u_xlat16_1<0.0;\n    if(u_xlatb27){discard;}\n   
            u_xlat27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat27) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat27) * vs_TEXCOORD1.xyz;\n    u_xlat27 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat27 = max(u_xlat27, 0.00100000005);\n    u_xlat27
            = inversesqrt(u_xlat27);\n    u_xlat2.xyz = vec3(u_xlat27) * u_xlat2.xyz;\n   
            u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat1.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(u_xlat1.xyz,
            u_xlat2.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat2.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);\n    u_xlat2.x = clamp(u_xlat2.x,
            0.0, 1.0);\n    u_xlat11 = (-_Glossiness) + 1.0;\n    u_xlat20 = u_xlat11
            * u_xlat11;\n    u_xlat20 = max(u_xlat20, 0.00200000009);\n    u_xlat29
            = u_xlat20 * u_xlat20;\n    u_xlat30 = u_xlat27 * u_xlat29 + (-u_xlat27);\n   
            u_xlat27 = u_xlat30 * u_xlat27 + 1.0;\n    u_xlat27 = u_xlat27 * u_xlat27
            + 1.00000001e-07;\n    u_xlat29 = u_xlat29 * 0.318309873;\n    u_xlat27
            = u_xlat29 / u_xlat27;\n    u_xlat29 = dot(u_xlat1.xyz, (-u_xlat3.xyz));\n   
            u_xlat3.x = (-u_xlat20) + 1.0;\n    u_xlat12 = abs(u_xlat29) * u_xlat3.x
            + u_xlat20;\n    u_xlat21 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat3.x = u_xlat21 * u_xlat3.x
            + u_xlat20;\n    u_xlat20 = u_xlat20 * u_xlat11;\n    u_xlat20 = (-u_xlat20)
            * 0.280000001 + 1.0;\n    u_xlat3.x = abs(u_xlat29) * u_xlat3.x;\n   
            u_xlat16_4.x = -abs(u_xlat29) + 1.0;\n    u_xlat29 = u_xlat21 * u_xlat12
            + u_xlat3.x;\n    u_xlat29 = u_xlat29 + 9.99999975e-06;\n    u_xlat29
            = 0.5 / u_xlat29;\n    u_xlat27 = u_xlat27 * u_xlat29;\n    u_xlat27
            = u_xlat27 * 3.14159274;\n    u_xlat27 = max(u_xlat27, 9.99999975e-05);\n   
            u_xlat27 = sqrt(u_xlat27);\n    u_xlat27 = u_xlat21 * u_xlat27;\n   
            u_xlat16_13.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_13.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_13.xyz, u_xlat16_13.xyz);\n   
            u_xlatb29 = u_xlat16_5.x!=0.0;\n    u_xlat29 = u_xlatb29 ? 1.0 : float(0.0);\n   
            u_xlat27 = u_xlat27 * u_xlat29;\n    u_xlat3.xyw = vec3(u_xlat27) * _LightColor0.xyz;\n   
            u_xlat16_5.x = (-u_xlat2.x) + 1.0;\n    u_xlat16_14.x = u_xlat16_5.x
            * u_xlat16_5.x;\n    u_xlat16_14.x = u_xlat16_14.x * u_xlat16_14.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_14.x;\n    u_xlat16_14.xyz = (-u_xlat16_13.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_14.xyz * u_xlat16_5.xxx
            + u_xlat16_13.xyz;\n    u_xlat3.xyw = u_xlat3.xyw * u_xlat16_5.xyz;\n   
            u_xlat16_5.x = u_xlat2.x + u_xlat2.x;\n    u_xlat16_5.x = u_xlat2.x *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat11 + -0.5;\n   
            u_xlat16_14.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_14.x = u_xlat16_14.x
            * u_xlat16_14.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_14.x;\n   
            u_xlat16_14.x = u_xlat16_5.x * u_xlat16_4.x + 1.0;\n    u_xlat16_23 =
            (-u_xlat21) + 1.0;\n    u_xlat16_32 = u_xlat16_23 * u_xlat16_23;\n   
            u_xlat16_32 = u_xlat16_32 * u_xlat16_32;\n    u_xlat16_23 = u_xlat16_23
            * u_xlat16_32;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_23 + 1.0;\n   
            u_xlat16_5.x = u_xlat16_14.x * u_xlat16_5.x;\n    u_xlat27 = u_xlat21
            * u_xlat16_5.x;\n    u_xlat16_5.xyz = vec3(u_xlat27) * _LightColor0.xyz;\n   
            u_xlat1.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n   
            u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz
            = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyw = log2(u_xlat16_6.xyz);\n   
            u_xlat2.xyw = u_xlat2.xyw * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat2.xyw = exp2(u_xlat2.xyw);\n    u_xlat2.xyw = u_xlat2.xyw * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat2.xyw = max(u_xlat2.xyw, vec3(0.0, 0.0, 0.0));\n    u_xlat16_27
            = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_32 = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_32 = u_xlat16_27 * _OcclusionStrength + u_xlat16_32;\n   
            u_xlat16_5.xyz = u_xlat2.xyw * vec3(u_xlat16_32) + u_xlat16_5.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat16_32) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat20) * u_xlat16_6.xyz;\n    u_xlat16_32 =
            (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_7.xyz = u_xlat0.xyz
            * vec3(u_xlat16_32);\n    u_xlat16_32 = (-u_xlat16_32) + 1.0;\n    u_xlat16_32
            = u_xlat16_32 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0,
            1.0);\n    u_xlat16_8.xyz = (-u_xlat16_13.xyz) + vec3(u_xlat16_32);\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat16_13.xyz;\n   
            u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat3.xyw;\n    u_xlat0.xyz
            = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat0.xyz;\n    u_xlat16_2.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_2.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp sampler2D _EmissionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec3
            u_xlat1;\nlowp vec3 u_xlat10_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nbool u_xlatb3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nfloat u_xlat10;\nmediump
            vec3 u_xlat16_13;\nmediump vec3 u_xlat16_14;\nfloat u_xlat18;\nfloat
            u_xlat19;\nmediump float u_xlat16_23;\nfloat u_xlat27;\nfloat u_xlat28;\nlowp
            float u_xlat10_28;\nmediump float u_xlat16_32;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat9.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat9.xyz,
            u_xlat9.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x
            = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat9.xyz;\n   
            u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat2.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat9.x = (-_Glossiness) + 1.0;\n    u_xlat18 = u_xlat9.x
            * u_xlat9.x;\n    u_xlat18 = max(u_xlat18, 0.00200000009);\n    u_xlat28
            = u_xlat18 * u_xlat18;\n    u_xlat3.x = u_xlat27 * u_xlat28 + (-u_xlat27);\n   
            u_xlat27 = u_xlat3.x * u_xlat27 + 1.0;\n    u_xlat27 = u_xlat27 * u_xlat27
            + 1.00000001e-07;\n    u_xlat28 = u_xlat28 * 0.318309873;\n    u_xlat27
            = u_xlat28 / u_xlat27;\n    u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n   
            u_xlat10 = (-u_xlat18) + 1.0;\n    u_xlat19 = abs(u_xlat1.x) * u_xlat10
            + u_xlat18;\n    u_xlat28 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat28 = clamp(u_xlat28, 0.0, 1.0);\n    u_xlat10 = u_xlat28 * u_xlat10
            + u_xlat18;\n    u_xlat18 = u_xlat18 * u_xlat9.x;\n    u_xlat18 = (-u_xlat18)
            * 0.280000001 + 1.0;\n    u_xlat10 = u_xlat10 * abs(u_xlat1.x);\n   
            u_xlat16_4.x = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat28 * u_xlat19
            + u_xlat10;\n    u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x
            = 0.5 / u_xlat1.x;\n    u_xlat27 = u_xlat27 * u_xlat1.x;\n    u_xlat27
            = u_xlat27 * 3.14159274;\n    u_xlat27 = max(u_xlat27, 9.99999975e-05);\n   
            u_xlat27 = sqrt(u_xlat27);\n    u_xlat27 = u_xlat28 * u_xlat27;\n   
            u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz
            = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_13.xyz, u_xlat16_13.xyz);\n   
            u_xlatb3 = u_xlat16_5.x!=0.0;\n    u_xlat3.x = u_xlatb3 ? 1.0 : float(0.0);\n   
            u_xlat27 = u_xlat27 * u_xlat3.x;\n    u_xlat3.xyz = vec3(u_xlat27) *
            _LightColor0.xyz;\n    u_xlat16_5.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_14.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_14.x = u_xlat16_14.x * u_xlat16_14.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_14.x;\n    u_xlat16_14.xyz = (-u_xlat16_13.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_14.xyz * u_xlat16_5.xxx
            + u_xlat16_13.xyz;\n    u_xlat3.xyz = u_xlat3.xyz * u_xlat16_5.xyz;\n   
            u_xlat16_5.x = u_xlat0.x + u_xlat0.x;\n    u_xlat16_5.x = u_xlat0.x *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat9.x + -0.5;\n   
            u_xlat16_14.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_14.x = u_xlat16_14.x
            * u_xlat16_14.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_14.x;\n   
            u_xlat16_14.x = u_xlat16_5.x * u_xlat16_4.x + 1.0;\n    u_xlat16_23 =
            (-u_xlat28) + 1.0;\n    u_xlat16_32 = u_xlat16_23 * u_xlat16_23;\n   
            u_xlat16_32 = u_xlat16_32 * u_xlat16_32;\n    u_xlat16_23 = u_xlat16_23
            * u_xlat16_32;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_23 + 1.0;\n   
            u_xlat16_5.x = u_xlat16_14.x * u_xlat16_5.x;\n    u_xlat0.x = u_xlat28
            * u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat2.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat2);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat2);\n   
            u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz
            = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyw = log2(u_xlat16_6.xyz);\n   
            u_xlat0.xyw = u_xlat0.xyw * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat0.xyw = exp2(u_xlat0.xyw);\n    u_xlat0.xyw = u_xlat0.xyw * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyw = max(u_xlat0.xyw, vec3(0.0, 0.0, 0.0));\n    u_xlat10_28
            = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_32 = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_32 = u_xlat10_28 * _OcclusionStrength + u_xlat16_32;\n   
            u_xlat16_5.xyz = u_xlat0.xyw * vec3(u_xlat16_32) + u_xlat16_5.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat16_32) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat18) * u_xlat16_6.xyz;\n    u_xlat16_32 =
            (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_7.xyz = u_xlat1.xyz
            * vec3(u_xlat16_32);\n    u_xlat16_32 = (-u_xlat16_32) + 1.0;\n    u_xlat16_32
            = u_xlat16_32 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0,
            1.0);\n    u_xlat16_8.xyz = (-u_xlat16_13.xyz) + vec3(u_xlat16_32);\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat16_13.xyz;\n   
            u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat3.xyz;\n    u_xlat0.xyz
            = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec4
            u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec3 u_xlat1;\nmediump
            vec3 u_xlat16_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nbool u_xlatb3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nfloat u_xlat10;\nmediump
            vec3 u_xlat16_13;\nmediump vec3 u_xlat16_14;\nfloat u_xlat18;\nfloat
            u_xlat19;\nmediump float u_xlat16_23;\nfloat u_xlat27;\nfloat u_xlat28;\nmediump
            float u_xlat16_28;\nmediump float u_xlat16_32;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat9.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat9.xyz,
            u_xlat9.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x
            = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat9.xyz;\n   
            u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat2.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat0.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat9.x = (-_Glossiness) + 1.0;\n    u_xlat18 = u_xlat9.x
            * u_xlat9.x;\n    u_xlat18 = max(u_xlat18, 0.00200000009);\n    u_xlat28
            = u_xlat18 * u_xlat18;\n    u_xlat3.x = u_xlat27 * u_xlat28 + (-u_xlat27);\n   
            u_xlat27 = u_xlat3.x * u_xlat27 + 1.0;\n    u_xlat27 = u_xlat27 * u_xlat27
            + 1.00000001e-07;\n    u_xlat28 = u_xlat28 * 0.318309873;\n    u_xlat27
            = u_xlat28 / u_xlat27;\n    u_xlat1.x = dot(u_xlat2.xyz, (-u_xlat1.xyz));\n   
            u_xlat10 = (-u_xlat18) + 1.0;\n    u_xlat19 = abs(u_xlat1.x) * u_xlat10
            + u_xlat18;\n    u_xlat28 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat28 = clamp(u_xlat28, 0.0, 1.0);\n    u_xlat10 = u_xlat28 * u_xlat10
            + u_xlat18;\n    u_xlat18 = u_xlat18 * u_xlat9.x;\n    u_xlat18 = (-u_xlat18)
            * 0.280000001 + 1.0;\n    u_xlat10 = u_xlat10 * abs(u_xlat1.x);\n   
            u_xlat16_4.x = -abs(u_xlat1.x) + 1.0;\n    u_xlat1.x = u_xlat28 * u_xlat19
            + u_xlat10;\n    u_xlat1.x = u_xlat1.x + 9.99999975e-06;\n    u_xlat1.x
            = 0.5 / u_xlat1.x;\n    u_xlat27 = u_xlat27 * u_xlat1.x;\n    u_xlat27
            = u_xlat27 * 3.14159274;\n    u_xlat27 = max(u_xlat27, 9.99999975e-05);\n   
            u_xlat27 = sqrt(u_xlat27);\n    u_xlat27 = u_xlat28 * u_xlat27;\n   
            u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz
            = _Color.xyz * u_xlat16_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_13.xyz, u_xlat16_13.xyz);\n   
            u_xlatb3 = u_xlat16_5.x!=0.0;\n    u_xlat3.x = u_xlatb3 ? 1.0 : float(0.0);\n   
            u_xlat27 = u_xlat27 * u_xlat3.x;\n    u_xlat3.xyz = vec3(u_xlat27) *
            _LightColor0.xyz;\n    u_xlat16_5.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_14.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_14.x = u_xlat16_14.x * u_xlat16_14.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_14.x;\n    u_xlat16_14.xyz = (-u_xlat16_13.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_14.xyz * u_xlat16_5.xxx
            + u_xlat16_13.xyz;\n    u_xlat3.xyz = u_xlat3.xyz * u_xlat16_5.xyz;\n   
            u_xlat16_5.x = u_xlat0.x + u_xlat0.x;\n    u_xlat16_5.x = u_xlat0.x *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat9.x + -0.5;\n   
            u_xlat16_14.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_14.x = u_xlat16_14.x
            * u_xlat16_14.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_14.x;\n   
            u_xlat16_14.x = u_xlat16_5.x * u_xlat16_4.x + 1.0;\n    u_xlat16_23 =
            (-u_xlat28) + 1.0;\n    u_xlat16_32 = u_xlat16_23 * u_xlat16_23;\n   
            u_xlat16_32 = u_xlat16_32 * u_xlat16_32;\n    u_xlat16_23 = u_xlat16_23
            * u_xlat16_32;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_23 + 1.0;\n   
            u_xlat16_5.x = u_xlat16_14.x * u_xlat16_5.x;\n    u_xlat0.x = u_xlat28
            * u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat2.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_6.y
            = dot(unity_SHAg, u_xlat2);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat2);\n   
            u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz
            = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyw = log2(u_xlat16_6.xyz);\n   
            u_xlat0.xyw = u_xlat0.xyw * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat0.xyw = exp2(u_xlat0.xyw);\n    u_xlat0.xyw = u_xlat0.xyw * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyw = max(u_xlat0.xyw, vec3(0.0, 0.0, 0.0));\n    u_xlat16_28
            = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_32 = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_32 = u_xlat16_28 * _OcclusionStrength + u_xlat16_32;\n   
            u_xlat16_5.xyz = u_xlat0.xyw * vec3(u_xlat16_32) + u_xlat16_5.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat16_32) * unity_IndirectSpecColor.xyz;\n   
            u_xlat16_6.xyz = vec3(u_xlat18) * u_xlat16_6.xyz;\n    u_xlat16_32 =
            (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_7.xyz = u_xlat1.xyz
            * vec3(u_xlat16_32);\n    u_xlat16_32 = (-u_xlat16_32) + 1.0;\n    u_xlat16_32
            = u_xlat16_32 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0,
            1.0);\n    u_xlat16_8.xyz = (-u_xlat16_13.xyz) + vec3(u_xlat16_32);\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * u_xlat16_8.xyz + u_xlat16_13.xyz;\n   
            u_xlat0.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat3.xyz;\n    u_xlat0.xyz
            = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float
            _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp sampler2D _EmissionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvec3
            u_xlat2;\nlowp vec3 u_xlat10_2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_9;\nfloat u_xlat10;\nvec3 u_xlat11;\nmediump vec3 u_xlat16_13;\nfloat
            u_xlat18;\nfloat u_xlat19;\nmediump float u_xlat16_21;\nfloat u_xlat24;\nlowp
            float u_xlat10_24;\nbool u_xlatb24;\nmediump float u_xlat16_25;\nfloat
            u_xlat26;\nbool u_xlatb26;\nfloat u_xlat27;\nmediump float u_xlat16_29;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.x = u_xlat10_0.w * _Color.w + (-_Cutoff);\n    u_xlatb24 =
            u_xlat16_1.x<0.0;\n    if(u_xlatb24){discard;}\n    u_xlat24 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat24) * vs_TEXCOORD1.xyz;\n    u_xlat24 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat24 = max(u_xlat24, 0.00100000005);\n    u_xlat24
            = inversesqrt(u_xlat24);\n    u_xlat2.xyz = vec3(u_xlat24) * u_xlat2.xyz;\n   
            u_xlat24 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n   
            u_xlat4.xyz = vec3(u_xlat24) * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot(u_xlat4.xyz,
            u_xlat2.xyz);\n    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat2.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);\n    u_xlat2.x = clamp(u_xlat2.x,
            0.0, 1.0);\n    u_xlat10 = (-_Glossiness) + 1.0;\n    u_xlat18 = u_xlat10
            * u_xlat10;\n    u_xlat18 = max(u_xlat18, 0.00200000009);\n    u_xlat26
            = u_xlat18 * u_xlat18;\n    u_xlat27 = u_xlat24 * u_xlat26 + (-u_xlat24);\n   
            u_xlat24 = u_xlat27 * u_xlat24 + 1.0;\n    u_xlat24 = u_xlat24 * u_xlat24
            + 1.00000001e-07;\n    u_xlat26 = u_xlat26 * 0.318309873;\n    u_xlat24
            = u_xlat26 / u_xlat24;\n    u_xlat26 = dot(u_xlat4.xyz, (-u_xlat3.xyz));\n   
            u_xlat3.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat3.x
            = clamp(u_xlat3.x, 0.0, 1.0);\n    u_xlat11.x = (-u_xlat18) + 1.0;\n   
            u_xlat19 = abs(u_xlat26) * u_xlat11.x + u_xlat18;\n    u_xlat11.x = u_xlat3.x
            * u_xlat11.x + u_xlat18;\n    u_xlat18 = u_xlat18 * u_xlat10;\n    u_xlat18
            = (-u_xlat18) * 0.280000001 + 1.0;\n    u_xlat11.x = abs(u_xlat26) *
            u_xlat11.x;\n    u_xlat16_1.x = -abs(u_xlat26) + 1.0;\n    u_xlat26 =
            u_xlat3.x * u_xlat19 + u_xlat11.x;\n    u_xlat26 = u_xlat26 + 9.99999975e-06;\n   
            u_xlat26 = 0.5 / u_xlat26;\n    u_xlat24 = u_xlat24 * u_xlat26;\n   
            u_xlat24 = u_xlat24 * 3.14159274;\n    u_xlat24 = max(u_xlat24, 9.99999975e-05);\n   
            u_xlat24 = sqrt(u_xlat24);\n    u_xlat24 = u_xlat3.x * u_xlat24;\n   
            u_xlat16_9.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_9.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_9.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_9.xyz, u_xlat16_9.xyz);\n   
            u_xlatb26 = u_xlat16_5.x!=0.0;\n    u_xlat26 = u_xlatb26 ? 1.0 : float(0.0);\n   
            u_xlat24 = u_xlat24 * u_xlat26;\n    u_xlat11.xyz = vec3(u_xlat24) *
            _LightColor0.xyz;\n    u_xlat16_5.x = (-u_xlat2.x) + 1.0;\n    u_xlat16_13.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_13.x = u_xlat16_13.x * u_xlat16_13.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_13.x;\n    u_xlat16_13.xyz = (-u_xlat16_9.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_13.xyz * u_xlat16_5.xxx
            + u_xlat16_9.xyz;\n    u_xlat11.xyz = u_xlat11.xyz * u_xlat16_5.xyz;\n   
            u_xlat16_5.x = u_xlat2.x + u_xlat2.x;\n    u_xlat16_5.x = u_xlat2.x *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat10 + -0.5;\n   
            u_xlat16_13.x = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat16_13.x = u_xlat16_13.x
            * u_xlat16_13.x;\n    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_13.x;\n   
            u_xlat16_13.x = u_xlat16_5.x * u_xlat16_1.x + 1.0;\n    u_xlat16_21 =
            (-u_xlat3.x) + 1.0;\n    u_xlat16_29 = u_xlat16_21 * u_xlat16_21;\n   
            u_xlat16_29 = u_xlat16_29 * u_xlat16_29;\n    u_xlat16_21 = u_xlat16_21
            * u_xlat16_29;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_21 + 1.0;\n   
            u_xlat16_5.x = u_xlat16_13.x * u_xlat16_5.x;\n    u_xlat24 = u_xlat3.x
            * u_xlat16_5.x;\n    u_xlat16_5.xyz = vec3(u_xlat24) * _LightColor0.xyz;\n   
            u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_6.xyz
            = u_xlat0.xyz * vec3(u_xlat16_29);\n    u_xlat16_29 = (-u_xlat16_29)
            + 1.0;\n    u_xlat16_29 = u_xlat16_29 + _Glossiness;\n    u_xlat16_29
            = clamp(u_xlat16_29, 0.0, 1.0);\n    u_xlat16_7.xyz = (-u_xlat16_9.xyz)
            + vec3(u_xlat16_29);\n    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz
            + u_xlat16_9.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat11.xyz;\n    u_xlat10_24 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_25 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_25 = u_xlat10_24
            * _OcclusionStrength + u_xlat16_25;\n    u_xlat16_5.xyz = vec3(u_xlat16_25)
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat18) *
            u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz +
            u_xlat0.xyz;\n    u_xlat10_2.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat10_2.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float
            _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat10;\nvec3 u_xlat11;\nmediump vec3 u_xlat16_13;\nfloat u_xlat18;\nfloat
            u_xlat19;\nmediump float u_xlat16_21;\nfloat u_xlat24;\nmediump float
            u_xlat16_24;\nbool u_xlatb24;\nmediump float u_xlat16_25;\nfloat u_xlat26;\nbool
            u_xlatb26;\nfloat u_xlat27;\nmediump float u_xlat16_29;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x =
            u_xlat16_0.w * _Color.w + (-_Cutoff);\n    u_xlatb24 = u_xlat16_1.x<0.0;\n   
            if(u_xlatb24){discard;}\n    u_xlat24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.xyz = (-vs_TEXCOORD1.xyz)
            * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;\n    u_xlat3.xyz = vec3(u_xlat24)
            * vs_TEXCOORD1.xyz;\n    u_xlat24 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat24 = max(u_xlat24, 0.00100000005);\n    u_xlat24 = inversesqrt(u_xlat24);\n   
            u_xlat2.xyz = vec3(u_xlat24) * u_xlat2.xyz;\n    u_xlat24 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat4.xyz
            = vec3(u_xlat24) * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot(u_xlat4.xyz,
            u_xlat2.xyz);\n    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat2.x
            = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);\n    u_xlat2.x = clamp(u_xlat2.x,
            0.0, 1.0);\n    u_xlat10 = (-_Glossiness) + 1.0;\n    u_xlat18 = u_xlat10
            * u_xlat10;\n    u_xlat18 = max(u_xlat18, 0.00200000009);\n    u_xlat26
            = u_xlat18 * u_xlat18;\n    u_xlat27 = u_xlat24 * u_xlat26 + (-u_xlat24);\n   
            u_xlat24 = u_xlat27 * u_xlat24 + 1.0;\n    u_xlat24 = u_xlat24 * u_xlat24
            + 1.00000001e-07;\n    u_xlat26 = u_xlat26 * 0.318309873;\n    u_xlat24
            = u_xlat26 / u_xlat24;\n    u_xlat26 = dot(u_xlat4.xyz, (-u_xlat3.xyz));\n   
            u_xlat3.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat3.x
            = clamp(u_xlat3.x, 0.0, 1.0);\n    u_xlat11.x = (-u_xlat18) + 1.0;\n   
            u_xlat19 = abs(u_xlat26) * u_xlat11.x + u_xlat18;\n    u_xlat11.x = u_xlat3.x
            * u_xlat11.x + u_xlat18;\n    u_xlat18 = u_xlat18 * u_xlat10;\n    u_xlat18
            = (-u_xlat18) * 0.280000001 + 1.0;\n    u_xlat11.x = abs(u_xlat26) *
            u_xlat11.x;\n    u_xlat16_1.x = -abs(u_xlat26) + 1.0;\n    u_xlat26 =
            u_xlat3.x * u_xlat19 + u_xlat11.x;\n    u_xlat26 = u_xlat26 + 9.99999975e-06;\n   
            u_xlat26 = 0.5 / u_xlat26;\n    u_xlat24 = u_xlat24 * u_xlat26;\n   
            u_xlat24 = u_xlat24 * 3.14159274;\n    u_xlat24 = max(u_xlat24, 9.99999975e-05);\n   
            u_xlat24 = sqrt(u_xlat24);\n    u_xlat24 = u_xlat3.x * u_xlat24;\n   
            u_xlat16_9.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_9.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_9.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_9.xyz, u_xlat16_9.xyz);\n   
            u_xlatb26 = u_xlat16_5.x!=0.0;\n    u_xlat26 = u_xlatb26 ? 1.0 : float(0.0);\n   
            u_xlat24 = u_xlat24 * u_xlat26;\n    u_xlat11.xyz = vec3(u_xlat24) *
            _LightColor0.xyz;\n    u_xlat16_5.x = (-u_xlat2.x) + 1.0;\n    u_xlat16_13.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_13.x = u_xlat16_13.x * u_xlat16_13.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_13.x;\n    u_xlat16_13.xyz = (-u_xlat16_9.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz = u_xlat16_13.xyz * u_xlat16_5.xxx
            + u_xlat16_9.xyz;\n    u_xlat11.xyz = u_xlat11.xyz * u_xlat16_5.xyz;\n   
            u_xlat16_5.x = u_xlat2.x + u_xlat2.x;\n    u_xlat16_5.x = u_xlat2.x *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat10 + -0.5;\n   
            u_xlat16_13.x = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat16_13.x = u_xlat16_13.x
            * u_xlat16_13.x;\n    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_13.x;\n   
            u_xlat16_13.x = u_xlat16_5.x * u_xlat16_1.x + 1.0;\n    u_xlat16_21 =
            (-u_xlat3.x) + 1.0;\n    u_xlat16_29 = u_xlat16_21 * u_xlat16_21;\n   
            u_xlat16_29 = u_xlat16_29 * u_xlat16_29;\n    u_xlat16_21 = u_xlat16_21
            * u_xlat16_29;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_21 + 1.0;\n   
            u_xlat16_5.x = u_xlat16_13.x * u_xlat16_5.x;\n    u_xlat24 = u_xlat3.x
            * u_xlat16_5.x;\n    u_xlat16_5.xyz = vec3(u_xlat24) * _LightColor0.xyz;\n   
            u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_6.xyz
            = u_xlat0.xyz * vec3(u_xlat16_29);\n    u_xlat16_29 = (-u_xlat16_29)
            + 1.0;\n    u_xlat16_29 = u_xlat16_29 + _Glossiness;\n    u_xlat16_29
            = clamp(u_xlat16_29, 0.0, 1.0);\n    u_xlat16_7.xyz = (-u_xlat16_9.xyz)
            + vec3(u_xlat16_29);\n    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_7.xyz
            + u_xlat16_9.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat11.xyz;\n    u_xlat16_24 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_25 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_25 = u_xlat16_24
            * _OcclusionStrength + u_xlat16_25;\n    u_xlat16_5.xyz = vec3(u_xlat16_25)
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat18) *
            u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz +
            u_xlat0.xyz;\n    u_xlat16_2.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat16_2.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp
            sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nmediump
            float u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3 u_xlat8;\nlowp float
            u_xlat10_8;\nmediump vec3 u_xlat16_11;\nmediump vec3 u_xlat16_13;\nmediump
            float u_xlat16_19;\nfloat u_xlat24;\nmediump float u_xlat16_27;\nmediump
            float u_xlat16_28;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat1.xyz
            = vec3(u_xlat24) * vs_TEXCOORD1.xyz;\n    u_xlat2.xyz = (-vs_TEXCOORD1.xyz)
            * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;\n    u_xlat24 = dot(u_xlat0.xyz,
            (-u_xlat1.xyz));\n    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3 = -abs(u_xlat24)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_3 * u_xlat16_3;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_3 = u_xlat16_3 * u_xlat16_11.x;\n   
            u_xlat8.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat8.x = max(u_xlat8.x,
            0.00100000005);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n    u_xlat8.xyz
            = u_xlat8.xxx * u_xlat2.xyz;\n    u_xlat8.x = dot(_WorldSpaceLightPos0.xyz,
            u_xlat8.xyz);\n    u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_11.x
            = u_xlat8.x + u_xlat8.x;\n    u_xlat16_11.x = u_xlat8.x * u_xlat16_11.x;\n   
            u_xlat8.x = (-_Glossiness) + 1.0;\n    u_xlat16_11.x = u_xlat16_11.x
            * u_xlat8.x + -0.5;\n    u_xlat16_19 = u_xlat16_11.x * u_xlat16_3 + 1.0;\n   
            u_xlat16_27 = (-u_xlat0.x) + 1.0;\n    u_xlat16_4.x = u_xlat16_27 * u_xlat16_27;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_27 = u_xlat16_27
            * u_xlat16_4.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_27 + 1.0;\n   
            u_xlat16_11.x = u_xlat16_19 * u_xlat16_11.x;\n    u_xlat0.x = u_xlat0.x
            * u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = u_xlat8.x * u_xlat8.x;\n    u_xlat0.x = max(u_xlat0.x, 0.00200000009);\n   
            u_xlat0.x = u_xlat0.x * u_xlat8.x;\n    u_xlat0.x = (-u_xlat0.x) * 0.280000001
            + 1.0;\n    u_xlat10_8 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_4.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_4.x = u_xlat10_8
            * _OcclusionStrength + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat16_4.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n   
            u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.x
            = (-u_xlat16_28) + 1.0;\n    u_xlat16_5.x = u_xlat16_5.x + _Glossiness;\n   
            u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz = _Color.xyz * u_xlat10_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz =
            u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_28)
            * u_xlat0.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_7.xyz = (-u_xlat16_13.xyz) + u_xlat16_5.xxx;\n    u_xlat16_5.xyz
            = vec3(u_xlat16_3) * u_xlat16_7.xyz + u_xlat16_13.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz
            * u_xlat16_11.xyz + u_xlat16_4.xyz;\n    u_xlat10_1.xyz = texture2D(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_1.xyz * _EmissionColor.xyz
            + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump
            sampler2D _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_1;\nvec3
            u_xlat2;\nmediump float u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3
            u_xlat8;\nmediump float u_xlat16_8;\nmediump vec3 u_xlat16_11;\nmediump
            vec3 u_xlat16_13;\nmediump float u_xlat16_19;\nfloat u_xlat24;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat1.xyz
            = vec3(u_xlat24) * vs_TEXCOORD1.xyz;\n    u_xlat2.xyz = (-vs_TEXCOORD1.xyz)
            * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;\n    u_xlat24 = dot(u_xlat0.xyz,
            (-u_xlat1.xyz));\n    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3 = -abs(u_xlat24)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_3 * u_xlat16_3;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_3 = u_xlat16_3 * u_xlat16_11.x;\n   
            u_xlat8.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat8.x = max(u_xlat8.x,
            0.00100000005);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n    u_xlat8.xyz
            = u_xlat8.xxx * u_xlat2.xyz;\n    u_xlat8.x = dot(_WorldSpaceLightPos0.xyz,
            u_xlat8.xyz);\n    u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_11.x
            = u_xlat8.x + u_xlat8.x;\n    u_xlat16_11.x = u_xlat8.x * u_xlat16_11.x;\n   
            u_xlat8.x = (-_Glossiness) + 1.0;\n    u_xlat16_11.x = u_xlat16_11.x
            * u_xlat8.x + -0.5;\n    u_xlat16_19 = u_xlat16_11.x * u_xlat16_3 + 1.0;\n   
            u_xlat16_27 = (-u_xlat0.x) + 1.0;\n    u_xlat16_4.x = u_xlat16_27 * u_xlat16_27;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_27 = u_xlat16_27
            * u_xlat16_4.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_27 + 1.0;\n   
            u_xlat16_11.x = u_xlat16_19 * u_xlat16_11.x;\n    u_xlat0.x = u_xlat0.x
            * u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = u_xlat8.x * u_xlat8.x;\n    u_xlat0.x = max(u_xlat0.x, 0.00200000009);\n   
            u_xlat0.x = u_xlat0.x * u_xlat8.x;\n    u_xlat0.x = (-u_xlat0.x) * 0.280000001
            + 1.0;\n    u_xlat16_8 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_4.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_4.x = u_xlat16_8
            * _OcclusionStrength + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat16_4.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n   
            u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.x
            = (-u_xlat16_28) + 1.0;\n    u_xlat16_5.x = u_xlat16_5.x + _Glossiness;\n   
            u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz = _Color.xyz * u_xlat16_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz =
            u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_28)
            * u_xlat0.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_7.xyz = (-u_xlat16_13.xyz) + u_xlat16_5.xxx;\n    u_xlat16_5.xyz
            = vec3(u_xlat16_3) * u_xlat16_7.xyz + u_xlat16_13.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz
            * u_xlat16_11.xyz + u_xlat16_4.xyz;\n    u_xlat16_1.xyz = texture(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * _EmissionColor.xyz
            + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform
            \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nvec4
            u_xlat2;\nlowp vec3 u_xlat10_2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            float u_xlat16_9;\nmediump float u_xlat16_17;\nfloat u_xlat24;\nbool
            u_xlatb24;\nmediump float u_xlat16_25;\nlowp float u_xlat10_26;\nmediump
            float u_xlat16_28;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb24 = u_xlat16_1.x<0.0;\n    if(u_xlatb24){discard;}\n   
            u_xlat24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n   
            u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat24) * vs_TEXCOORD1.xyz;\n    u_xlat24 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat24 = max(u_xlat24, 0.00100000005);\n    u_xlat24
            = inversesqrt(u_xlat24);\n    u_xlat2.xyz = vec3(u_xlat24) * u_xlat2.xyz;\n   
            u_xlat24 = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);\n    u_xlat24
            = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat16_1.x = u_xlat24 + u_xlat24;\n   
            u_xlat16_1.x = u_xlat24 * u_xlat16_1.x;\n    u_xlat24 = (-_Glossiness)
            + 1.0;\n    u_xlat16_1.x = u_xlat16_1.x * u_xlat24 + -0.5;\n    u_xlat2.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat2.x = inversesqrt(u_xlat2.x);\n   
            u_xlat2.xyz = u_xlat2.xxx * vs_TEXCOORD4.xyz;\n    u_xlat3.x = dot(u_xlat2.xyz,
            (-u_xlat3.xyz));\n    u_xlat16_9 = -abs(u_xlat3.x) + 1.0;\n    u_xlat16_17
            = u_xlat16_9 * u_xlat16_9;\n    u_xlat16_17 = u_xlat16_17 * u_xlat16_17;\n   
            u_xlat16_9 = u_xlat16_9 * u_xlat16_17;\n    u_xlat16_17 = u_xlat16_1.x
            * u_xlat16_9 + 1.0;\n    u_xlat3.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);\n    u_xlat16_25 = (-u_xlat3.x)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_25 * u_xlat16_25;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_25 = u_xlat16_25 * u_xlat16_4.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * u_xlat16_25 + 1.0;\n    u_xlat16_1.x =
            u_xlat16_17 * u_xlat16_1.x;\n    u_xlat3.x = u_xlat3.x * u_xlat16_1.x;\n   
            u_xlat16_1.xzw = u_xlat3.xxx * _LightColor0.xyz;\n    u_xlat2.w = 1.0;\n   
            u_xlat16_4.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_4.y = dot(unity_SHAg,
            u_xlat2);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_4.xyz);\n    u_xlat2.xyz
            = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat2.xyz
            = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat10_26
            = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.x = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_4.x = u_xlat10_26 * _OcclusionStrength + u_xlat16_4.x;\n   
            u_xlat16_1.xzw = u_xlat2.xyz * u_xlat16_4.xxx + u_xlat16_1.xzw;\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat2.x
            = u_xlat24 * u_xlat24;\n    u_xlat2.x = max(u_xlat2.x, 0.00200000009);\n   
            u_xlat24 = u_xlat24 * u_xlat2.x;\n    u_xlat24 = (-u_xlat24) * 0.280000001
            + 1.0;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(u_xlat24);\n    u_xlat16_5.xyz
            = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_5.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_29 = (-u_xlat16_28) + 1.0;\n    u_xlat16_6.xyz = u_xlat0.xyz
            * vec3(u_xlat16_28);\n    u_xlat16_28 = u_xlat16_29 + _Glossiness;\n   
            u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);\n    u_xlat16_7.xyz = (-u_xlat16_5.xyz)
            + vec3(u_xlat16_28);\n    u_xlat16_5.xyz = vec3(u_xlat16_9) * u_xlat16_7.xyz
            + u_xlat16_5.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;\n   
            u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_1.xzw + u_xlat16_4.xyz;\n   
            u_xlat10_2.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat10_2.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform
            \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2)
            uniform mediump sampler2D _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4
            vs_TEXCOORD5;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump
            vec3 u_xlat16_2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3
            u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            float u_xlat16_9;\nmediump float u_xlat16_17;\nfloat u_xlat24;\nbool
            u_xlatb24;\nmediump float u_xlat16_25;\nmediump float u_xlat16_26;\nmediump
            float u_xlat16_28;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat16_0
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb24 = u_xlat16_1.x<0.0;\n    if(u_xlatb24){discard;}\n   
            u_xlat24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n   
            u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat24) * vs_TEXCOORD1.xyz;\n    u_xlat24 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat24 = max(u_xlat24, 0.00100000005);\n    u_xlat24
            = inversesqrt(u_xlat24);\n    u_xlat2.xyz = vec3(u_xlat24) * u_xlat2.xyz;\n   
            u_xlat24 = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);\n    u_xlat24
            = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat16_1.x = u_xlat24 + u_xlat24;\n   
            u_xlat16_1.x = u_xlat24 * u_xlat16_1.x;\n    u_xlat24 = (-_Glossiness)
            + 1.0;\n    u_xlat16_1.x = u_xlat16_1.x * u_xlat24 + -0.5;\n    u_xlat2.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat2.x = inversesqrt(u_xlat2.x);\n   
            u_xlat2.xyz = u_xlat2.xxx * vs_TEXCOORD4.xyz;\n    u_xlat3.x = dot(u_xlat2.xyz,
            (-u_xlat3.xyz));\n    u_xlat16_9 = -abs(u_xlat3.x) + 1.0;\n    u_xlat16_17
            = u_xlat16_9 * u_xlat16_9;\n    u_xlat16_17 = u_xlat16_17 * u_xlat16_17;\n   
            u_xlat16_9 = u_xlat16_9 * u_xlat16_17;\n    u_xlat16_17 = u_xlat16_1.x
            * u_xlat16_9 + 1.0;\n    u_xlat3.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);\n    u_xlat16_25 = (-u_xlat3.x)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_25 * u_xlat16_25;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_25 = u_xlat16_25 * u_xlat16_4.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * u_xlat16_25 + 1.0;\n    u_xlat16_1.x =
            u_xlat16_17 * u_xlat16_1.x;\n    u_xlat3.x = u_xlat3.x * u_xlat16_1.x;\n   
            u_xlat16_1.xzw = u_xlat3.xxx * _LightColor0.xyz;\n    u_xlat2.w = 1.0;\n   
            u_xlat16_4.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_4.y = dot(unity_SHAg,
            u_xlat2);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_4.xyz);\n    u_xlat2.xyz
            = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat2.xyz
            = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_26
            = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.x = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_26 * _OcclusionStrength + u_xlat16_4.x;\n   
            u_xlat16_1.xzw = u_xlat2.xyz * u_xlat16_4.xxx + u_xlat16_1.xzw;\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat2.x
            = u_xlat24 * u_xlat24;\n    u_xlat2.x = max(u_xlat2.x, 0.00200000009);\n   
            u_xlat24 = u_xlat24 * u_xlat2.x;\n    u_xlat24 = (-u_xlat24) * 0.280000001
            + 1.0;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(u_xlat24);\n    u_xlat16_5.xyz
            = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_5.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_29 = (-u_xlat16_28) + 1.0;\n    u_xlat16_6.xyz = u_xlat0.xyz
            * vec3(u_xlat16_28);\n    u_xlat16_28 = u_xlat16_29 + _Glossiness;\n   
            u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);\n    u_xlat16_7.xyz = (-u_xlat16_5.xyz)
            + vec3(u_xlat16_28);\n    u_xlat16_5.xyz = vec3(u_xlat16_9) * u_xlat16_7.xyz
            + u_xlat16_5.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;\n   
            u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_1.xzw + u_xlat16_4.xyz;\n   
            u_xlat16_2.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat16_2.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp sampler2D _EmissionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump vec4
            u_xlat16_2;\nvec4 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3 u_xlat8;\nmediump float
            u_xlat16_10;\nmediump vec3 u_xlat16_13;\nmediump float u_xlat16_18;\nmediump
            float u_xlat16_26;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat8.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat8.xyz,
            u_xlat8.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x
            = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat8.xyz;\n   
            u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x;\n    u_xlat0.x = (-_Glossiness)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * u_xlat0.x + -0.5;\n    u_xlat8.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n   
            u_xlat3.xyz = u_xlat8.xxx * vs_TEXCOORD4.xyz;\n    u_xlat8.x = dot(u_xlat3.xyz,
            (-u_xlat1.xyz));\n    u_xlat16_10 = -abs(u_xlat8.x) + 1.0;\n    u_xlat16_18
            = u_xlat16_10 * u_xlat16_10;\n    u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n   
            u_xlat16_10 = u_xlat16_10 * u_xlat16_18;\n    u_xlat16_18 = u_xlat16_2.x
            * u_xlat16_10 + 1.0;\n    u_xlat8.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_26 = (-u_xlat8.x)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_4.x;\n   
            u_xlat16_2.x = u_xlat16_2.x * u_xlat16_26 + 1.0;\n    u_xlat16_2.x =
            u_xlat16_18 * u_xlat16_2.x;\n    u_xlat8.x = u_xlat8.x * u_xlat16_2.x;\n   
            u_xlat16_2.xzw = u_xlat8.xxx * _LightColor0.xyz;\n    u_xlat3.w = 1.0;\n   
            u_xlat16_4.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_4.y = dot(unity_SHAg,
            u_xlat3);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat3);\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat8.xyz = log2(u_xlat16_4.xyz);\n    u_xlat8.xyz
            = u_xlat8.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat8.xyz
            = exp2(u_xlat8.xyz);\n    u_xlat8.xyz = u_xlat8.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat8.xyz = max(u_xlat8.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat10_1.x
            = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.x = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_4.x = u_xlat10_1.x * _OcclusionStrength + u_xlat16_4.x;\n   
            u_xlat16_2.xzw = u_xlat8.xyz * u_xlat16_4.xxx + u_xlat16_2.xzw;\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat8.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat8.x = max(u_xlat8.x, 0.00200000009);\n   
            u_xlat0.x = u_xlat8.x * u_xlat0.x;\n    u_xlat0.x = (-u_xlat0.x) * 0.280000001
            + 1.0;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat0.xxx;\n    u_xlat16_28
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.x = (-u_xlat16_28)
            + 1.0;\n    u_xlat16_5.x = u_xlat16_5.x + _Glossiness;\n    u_xlat16_5.x
            = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz = _Color.xyz * u_xlat10_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz =
            u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_28)
            * u_xlat0.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_7.xyz = (-u_xlat16_13.xyz) + u_xlat16_5.xxx;\n    u_xlat16_5.xyz
            = vec3(u_xlat16_10) * u_xlat16_7.xyz + u_xlat16_13.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz
            * u_xlat16_2.xzw + u_xlat16_4.xyz;\n    u_xlat10_1.xyz = texture2D(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_1.xyz * _EmissionColor.xyz
            + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nmediump vec3 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nvec3 u_xlat8;\nmediump float u_xlat16_10;\nmediump
            vec3 u_xlat16_13;\nmediump float u_xlat16_18;\nmediump float u_xlat16_26;\nmediump
            float u_xlat16_28;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat8.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat8.xyz,
            u_xlat8.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x
            = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat8.xyz;\n   
            u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x;\n    u_xlat0.x = (-_Glossiness)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * u_xlat0.x + -0.5;\n    u_xlat8.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n   
            u_xlat3.xyz = u_xlat8.xxx * vs_TEXCOORD4.xyz;\n    u_xlat8.x = dot(u_xlat3.xyz,
            (-u_xlat1.xyz));\n    u_xlat16_10 = -abs(u_xlat8.x) + 1.0;\n    u_xlat16_18
            = u_xlat16_10 * u_xlat16_10;\n    u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n   
            u_xlat16_10 = u_xlat16_10 * u_xlat16_18;\n    u_xlat16_18 = u_xlat16_2.x
            * u_xlat16_10 + 1.0;\n    u_xlat8.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_26 = (-u_xlat8.x)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_4.x;\n   
            u_xlat16_2.x = u_xlat16_2.x * u_xlat16_26 + 1.0;\n    u_xlat16_2.x =
            u_xlat16_18 * u_xlat16_2.x;\n    u_xlat8.x = u_xlat8.x * u_xlat16_2.x;\n   
            u_xlat16_2.xzw = u_xlat8.xxx * _LightColor0.xyz;\n    u_xlat3.w = 1.0;\n   
            u_xlat16_4.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_4.y = dot(unity_SHAg,
            u_xlat3);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat3);\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat8.xyz = log2(u_xlat16_4.xyz);\n    u_xlat8.xyz
            = u_xlat8.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat8.xyz
            = exp2(u_xlat8.xyz);\n    u_xlat8.xyz = u_xlat8.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat8.xyz = max(u_xlat8.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_1.x
            = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.x = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_1.x * _OcclusionStrength + u_xlat16_4.x;\n   
            u_xlat16_2.xzw = u_xlat8.xyz * u_xlat16_4.xxx + u_xlat16_2.xzw;\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat8.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat8.x = max(u_xlat8.x, 0.00200000009);\n   
            u_xlat0.x = u_xlat8.x * u_xlat0.x;\n    u_xlat0.x = (-u_xlat0.x) * 0.280000001
            + 1.0;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat0.xxx;\n    u_xlat16_28
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.x = (-u_xlat16_28)
            + 1.0;\n    u_xlat16_5.x = u_xlat16_5.x + _Glossiness;\n    u_xlat16_5.x
            = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz = _Color.xyz * u_xlat16_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz =
            u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_28)
            * u_xlat0.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_7.xyz = (-u_xlat16_13.xyz) + u_xlat16_5.xxx;\n    u_xlat16_5.xyz
            = vec3(u_xlat16_10) * u_xlat16_7.xyz + u_xlat16_13.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz
            * u_xlat16_2.xzw + u_xlat16_4.xyz;\n    u_xlat16_1.xyz = texture(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * _EmissionColor.xyz
            + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float
            _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp sampler2D _EmissionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nvec3
            u_xlat2;\nlowp vec3 u_xlat10_2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_10;\nvec3 u_xlat11;\nmediump
            float u_xlat16_19;\nfloat u_xlat27;\nbool u_xlatb27;\nmediump float u_xlat16_28;\nmediump
            float u_xlat16_32;\nmediump float u_xlat16_33;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb27 = u_xlat16_1<0.0;\n    if(u_xlatb27){discard;}\n   
            u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat2.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat3.xyz
            = vec3(u_xlat27) * vs_TEXCOORD1.xyz;\n    u_xlat4.xyz = (-vs_TEXCOORD1.xyz)
            * vec3(u_xlat27) + _WorldSpaceLightPos0.xyz;\n    u_xlat27 = dot(u_xlat2.xyz,
            (-u_xlat3.xyz));\n    u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat16_1 = -abs(u_xlat27)
            + 1.0;\n    u_xlat16_10.x = u_xlat16_1 * u_xlat16_1;\n    u_xlat16_10.x
            = u_xlat16_10.x * u_xlat16_10.x;\n    u_xlat16_1 = u_xlat16_1 * u_xlat16_10.x;\n   
            u_xlat27 = dot(u_xlat4.xyz, u_xlat4.xyz);\n    u_xlat27 = max(u_xlat27,
            0.00100000005);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat11.xyz
            = vec3(u_xlat27) * u_xlat4.xyz;\n    u_xlat27 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat11.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat16_10.x
            = u_xlat27 + u_xlat27;\n    u_xlat16_10.x = u_xlat27 * u_xlat16_10.x;\n   
            u_xlat27 = (-_Glossiness) + 1.0;\n    u_xlat16_10.x = u_xlat16_10.x *
            u_xlat27 + -0.5;\n    u_xlat16_19 = u_xlat16_10.x * u_xlat16_1 + 1.0;\n   
            u_xlat16_28 = (-u_xlat2.x) + 1.0;\n    u_xlat16_5.x = u_xlat16_28 * u_xlat16_28;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_28 = u_xlat16_28
            * u_xlat16_5.x;\n    u_xlat16_10.x = u_xlat16_10.x * u_xlat16_28 + 1.0;\n   
            u_xlat16_10.x = u_xlat16_19 * u_xlat16_10.x;\n    u_xlat2.x = u_xlat2.x
            * u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat2.xxx * _LightColor0.xyz;\n   
            u_xlat2.x = u_xlat27 * u_xlat27;\n    u_xlat2.x = max(u_xlat2.x, 0.00200000009);\n   
            u_xlat27 = u_xlat27 * u_xlat2.x;\n    u_xlat27 = (-u_xlat27) * 0.280000001
            + 1.0;\n    u_xlat10_2.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_5.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_5.x = u_xlat10_2.x
            * _OcclusionStrength + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat16_5.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat27) *
            u_xlat16_5.xyz;\n    u_xlat16_6.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_32 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_33 = (-u_xlat16_32) + 1.0;\n   
            u_xlat16_7.xyz = u_xlat0.xyz * vec3(u_xlat16_32);\n    u_xlat16_32 =
            u_xlat16_33 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0,
            1.0);\n    u_xlat16_8.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_32);\n   
            u_xlat16_6.xyz = vec3(u_xlat16_1) * u_xlat16_8.xyz + u_xlat16_6.xyz;\n   
            u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz;\n    u_xlat0.xyz =
            u_xlat16_7.xyz * u_xlat16_10.xyz + u_xlat16_5.xyz;\n    u_xlat10_2.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_2.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float
            _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump float u_xlat16_1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump
            vec3 u_xlat16_10;\nvec3 u_xlat11;\nmediump float u_xlat16_19;\nfloat
            u_xlat27;\nbool u_xlatb27;\nmediump float u_xlat16_28;\nmediump float
            u_xlat16_32;\nmediump float u_xlat16_33;\nvoid main()\n{\n    u_xlat16_0
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb27 = u_xlat16_1<0.0;\n    if(u_xlatb27){discard;}\n   
            u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat2.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat3.xyz
            = vec3(u_xlat27) * vs_TEXCOORD1.xyz;\n    u_xlat4.xyz = (-vs_TEXCOORD1.xyz)
            * vec3(u_xlat27) + _WorldSpaceLightPos0.xyz;\n    u_xlat27 = dot(u_xlat2.xyz,
            (-u_xlat3.xyz));\n    u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat16_1 = -abs(u_xlat27)
            + 1.0;\n    u_xlat16_10.x = u_xlat16_1 * u_xlat16_1;\n    u_xlat16_10.x
            = u_xlat16_10.x * u_xlat16_10.x;\n    u_xlat16_1 = u_xlat16_1 * u_xlat16_10.x;\n   
            u_xlat27 = dot(u_xlat4.xyz, u_xlat4.xyz);\n    u_xlat27 = max(u_xlat27,
            0.00100000005);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat11.xyz
            = vec3(u_xlat27) * u_xlat4.xyz;\n    u_xlat27 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat11.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat16_10.x
            = u_xlat27 + u_xlat27;\n    u_xlat16_10.x = u_xlat27 * u_xlat16_10.x;\n   
            u_xlat27 = (-_Glossiness) + 1.0;\n    u_xlat16_10.x = u_xlat16_10.x *
            u_xlat27 + -0.5;\n    u_xlat16_19 = u_xlat16_10.x * u_xlat16_1 + 1.0;\n   
            u_xlat16_28 = (-u_xlat2.x) + 1.0;\n    u_xlat16_5.x = u_xlat16_28 * u_xlat16_28;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_28 = u_xlat16_28
            * u_xlat16_5.x;\n    u_xlat16_10.x = u_xlat16_10.x * u_xlat16_28 + 1.0;\n   
            u_xlat16_10.x = u_xlat16_19 * u_xlat16_10.x;\n    u_xlat2.x = u_xlat2.x
            * u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat2.xxx * _LightColor0.xyz;\n   
            u_xlat2.x = u_xlat27 * u_xlat27;\n    u_xlat2.x = max(u_xlat2.x, 0.00200000009);\n   
            u_xlat27 = u_xlat27 * u_xlat2.x;\n    u_xlat27 = (-u_xlat27) * 0.280000001
            + 1.0;\n    u_xlat16_2.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_5.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_5.x = u_xlat16_2.x
            * _OcclusionStrength + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat16_5.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat27) *
            u_xlat16_5.xyz;\n    u_xlat16_6.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_32 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_33 = (-u_xlat16_32) + 1.0;\n   
            u_xlat16_7.xyz = u_xlat0.xyz * vec3(u_xlat16_32);\n    u_xlat16_32 =
            u_xlat16_33 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0,
            1.0);\n    u_xlat16_8.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_32);\n   
            u_xlat16_6.xyz = vec3(u_xlat16_1) * u_xlat16_8.xyz + u_xlat16_6.xyz;\n   
            u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz;\n    u_xlat0.xyz =
            u_xlat16_7.xyz * u_xlat16_10.xyz + u_xlat16_5.xyz;\n    u_xlat16_2.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_2.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp
            sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nmediump
            float u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3 u_xlat8;\nlowp float
            u_xlat10_8;\nmediump vec3 u_xlat16_11;\nmediump vec3 u_xlat16_13;\nmediump
            float u_xlat16_19;\nfloat u_xlat24;\nmediump float u_xlat16_27;\nmediump
            float u_xlat16_28;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat1.xyz
            = vec3(u_xlat24) * vs_TEXCOORD1.xyz;\n    u_xlat2.xyz = (-vs_TEXCOORD1.xyz)
            * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;\n    u_xlat24 = dot(u_xlat0.xyz,
            (-u_xlat1.xyz));\n    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3 = -abs(u_xlat24)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_3 * u_xlat16_3;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_3 = u_xlat16_3 * u_xlat16_11.x;\n   
            u_xlat8.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat8.x = max(u_xlat8.x,
            0.00100000005);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n    u_xlat8.xyz
            = u_xlat8.xxx * u_xlat2.xyz;\n    u_xlat8.x = dot(_WorldSpaceLightPos0.xyz,
            u_xlat8.xyz);\n    u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_11.x
            = u_xlat8.x + u_xlat8.x;\n    u_xlat16_11.x = u_xlat8.x * u_xlat16_11.x;\n   
            u_xlat8.x = (-_Glossiness) + 1.0;\n    u_xlat16_11.x = u_xlat16_11.x
            * u_xlat8.x + -0.5;\n    u_xlat16_19 = u_xlat16_11.x * u_xlat16_3 + 1.0;\n   
            u_xlat16_27 = (-u_xlat0.x) + 1.0;\n    u_xlat16_4.x = u_xlat16_27 * u_xlat16_27;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_27 = u_xlat16_27
            * u_xlat16_4.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_27 + 1.0;\n   
            u_xlat16_11.x = u_xlat16_19 * u_xlat16_11.x;\n    u_xlat0.x = u_xlat0.x
            * u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = u_xlat8.x * u_xlat8.x;\n    u_xlat0.x = max(u_xlat0.x, 0.00200000009);\n   
            u_xlat0.x = u_xlat0.x * u_xlat8.x;\n    u_xlat0.x = (-u_xlat0.x) * 0.280000001
            + 1.0;\n    u_xlat10_8 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_4.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_4.x = u_xlat10_8
            * _OcclusionStrength + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat16_4.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n   
            u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.x
            = (-u_xlat16_28) + 1.0;\n    u_xlat16_5.x = u_xlat16_5.x + _Glossiness;\n   
            u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz = _Color.xyz * u_xlat10_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz =
            u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_28)
            * u_xlat0.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_7.xyz = (-u_xlat16_13.xyz) + u_xlat16_5.xxx;\n    u_xlat16_5.xyz
            = vec3(u_xlat16_3) * u_xlat16_7.xyz + u_xlat16_13.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz
            * u_xlat16_11.xyz + u_xlat16_4.xyz;\n    u_xlat10_1.xyz = texture2D(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_1.xyz * _EmissionColor.xyz
            + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump
            sampler2D _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_1;\nvec3
            u_xlat2;\nmediump float u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3
            u_xlat8;\nmediump float u_xlat16_8;\nmediump vec3 u_xlat16_11;\nmediump
            vec3 u_xlat16_13;\nmediump float u_xlat16_19;\nfloat u_xlat24;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat1.xyz
            = vec3(u_xlat24) * vs_TEXCOORD1.xyz;\n    u_xlat2.xyz = (-vs_TEXCOORD1.xyz)
            * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;\n    u_xlat24 = dot(u_xlat0.xyz,
            (-u_xlat1.xyz));\n    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3 = -abs(u_xlat24)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_3 * u_xlat16_3;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_3 = u_xlat16_3 * u_xlat16_11.x;\n   
            u_xlat8.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat8.x = max(u_xlat8.x,
            0.00100000005);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n    u_xlat8.xyz
            = u_xlat8.xxx * u_xlat2.xyz;\n    u_xlat8.x = dot(_WorldSpaceLightPos0.xyz,
            u_xlat8.xyz);\n    u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_11.x
            = u_xlat8.x + u_xlat8.x;\n    u_xlat16_11.x = u_xlat8.x * u_xlat16_11.x;\n   
            u_xlat8.x = (-_Glossiness) + 1.0;\n    u_xlat16_11.x = u_xlat16_11.x
            * u_xlat8.x + -0.5;\n    u_xlat16_19 = u_xlat16_11.x * u_xlat16_3 + 1.0;\n   
            u_xlat16_27 = (-u_xlat0.x) + 1.0;\n    u_xlat16_4.x = u_xlat16_27 * u_xlat16_27;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_27 = u_xlat16_27
            * u_xlat16_4.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_27 + 1.0;\n   
            u_xlat16_11.x = u_xlat16_19 * u_xlat16_11.x;\n    u_xlat0.x = u_xlat0.x
            * u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = u_xlat8.x * u_xlat8.x;\n    u_xlat0.x = max(u_xlat0.x, 0.00200000009);\n   
            u_xlat0.x = u_xlat0.x * u_xlat8.x;\n    u_xlat0.x = (-u_xlat0.x) * 0.280000001
            + 1.0;\n    u_xlat16_8 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_4.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_4.x = u_xlat16_8
            * _OcclusionStrength + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat16_4.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n   
            u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.x
            = (-u_xlat16_28) + 1.0;\n    u_xlat16_5.x = u_xlat16_5.x + _Glossiness;\n   
            u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz = _Color.xyz * u_xlat16_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz =
            u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_28)
            * u_xlat0.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_7.xyz = (-u_xlat16_13.xyz) + u_xlat16_5.xxx;\n    u_xlat16_5.xyz
            = vec3(u_xlat16_3) * u_xlat16_7.xyz + u_xlat16_13.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz
            * u_xlat16_11.xyz + u_xlat16_4.xyz;\n    u_xlat16_1.xyz = texture(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * _EmissionColor.xyz
            + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform
            \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nvec4
            u_xlat2;\nlowp vec3 u_xlat10_2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            float u_xlat16_9;\nmediump float u_xlat16_17;\nfloat u_xlat24;\nbool
            u_xlatb24;\nmediump float u_xlat16_25;\nlowp float u_xlat10_26;\nmediump
            float u_xlat16_28;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb24 = u_xlat16_1.x<0.0;\n    if(u_xlatb24){discard;}\n   
            u_xlat24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n   
            u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat24) * vs_TEXCOORD1.xyz;\n    u_xlat24 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat24 = max(u_xlat24, 0.00100000005);\n    u_xlat24
            = inversesqrt(u_xlat24);\n    u_xlat2.xyz = vec3(u_xlat24) * u_xlat2.xyz;\n   
            u_xlat24 = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);\n    u_xlat24
            = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat16_1.x = u_xlat24 + u_xlat24;\n   
            u_xlat16_1.x = u_xlat24 * u_xlat16_1.x;\n    u_xlat24 = (-_Glossiness)
            + 1.0;\n    u_xlat16_1.x = u_xlat16_1.x * u_xlat24 + -0.5;\n    u_xlat2.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat2.x = inversesqrt(u_xlat2.x);\n   
            u_xlat2.xyz = u_xlat2.xxx * vs_TEXCOORD4.xyz;\n    u_xlat3.x = dot(u_xlat2.xyz,
            (-u_xlat3.xyz));\n    u_xlat16_9 = -abs(u_xlat3.x) + 1.0;\n    u_xlat16_17
            = u_xlat16_9 * u_xlat16_9;\n    u_xlat16_17 = u_xlat16_17 * u_xlat16_17;\n   
            u_xlat16_9 = u_xlat16_9 * u_xlat16_17;\n    u_xlat16_17 = u_xlat16_1.x
            * u_xlat16_9 + 1.0;\n    u_xlat3.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);\n    u_xlat16_25 = (-u_xlat3.x)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_25 * u_xlat16_25;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_25 = u_xlat16_25 * u_xlat16_4.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * u_xlat16_25 + 1.0;\n    u_xlat16_1.x =
            u_xlat16_17 * u_xlat16_1.x;\n    u_xlat3.x = u_xlat3.x * u_xlat16_1.x;\n   
            u_xlat16_1.xzw = u_xlat3.xxx * _LightColor0.xyz;\n    u_xlat2.w = 1.0;\n   
            u_xlat16_4.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_4.y = dot(unity_SHAg,
            u_xlat2);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_4.xyz);\n    u_xlat2.xyz
            = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat2.xyz
            = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat10_26
            = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.x = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_4.x = u_xlat10_26 * _OcclusionStrength + u_xlat16_4.x;\n   
            u_xlat16_1.xzw = u_xlat2.xyz * u_xlat16_4.xxx + u_xlat16_1.xzw;\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat2.x
            = u_xlat24 * u_xlat24;\n    u_xlat2.x = max(u_xlat2.x, 0.00200000009);\n   
            u_xlat24 = u_xlat24 * u_xlat2.x;\n    u_xlat24 = (-u_xlat24) * 0.280000001
            + 1.0;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(u_xlat24);\n    u_xlat16_5.xyz
            = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_5.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_29 = (-u_xlat16_28) + 1.0;\n    u_xlat16_6.xyz = u_xlat0.xyz
            * vec3(u_xlat16_28);\n    u_xlat16_28 = u_xlat16_29 + _Glossiness;\n   
            u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);\n    u_xlat16_7.xyz = (-u_xlat16_5.xyz)
            + vec3(u_xlat16_28);\n    u_xlat16_5.xyz = vec3(u_xlat16_9) * u_xlat16_7.xyz
            + u_xlat16_5.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;\n   
            u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_1.xzw + u_xlat16_4.xyz;\n   
            u_xlat10_2.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat10_2.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec4
            u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform
            \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2)
            uniform mediump sampler2D _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4
            vs_TEXCOORD5;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump
            vec3 u_xlat16_2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3
            u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            float u_xlat16_9;\nmediump float u_xlat16_17;\nfloat u_xlat24;\nbool
            u_xlatb24;\nmediump float u_xlat16_25;\nmediump float u_xlat16_26;\nmediump
            float u_xlat16_28;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat16_0
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb24 = u_xlat16_1.x<0.0;\n    if(u_xlatb24){discard;}\n   
            u_xlat24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n   
            u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat24) * vs_TEXCOORD1.xyz;\n    u_xlat24 = dot(u_xlat2.xyz,
            u_xlat2.xyz);\n    u_xlat24 = max(u_xlat24, 0.00100000005);\n    u_xlat24
            = inversesqrt(u_xlat24);\n    u_xlat2.xyz = vec3(u_xlat24) * u_xlat2.xyz;\n   
            u_xlat24 = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);\n    u_xlat24
            = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat16_1.x = u_xlat24 + u_xlat24;\n   
            u_xlat16_1.x = u_xlat24 * u_xlat16_1.x;\n    u_xlat24 = (-_Glossiness)
            + 1.0;\n    u_xlat16_1.x = u_xlat16_1.x * u_xlat24 + -0.5;\n    u_xlat2.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat2.x = inversesqrt(u_xlat2.x);\n   
            u_xlat2.xyz = u_xlat2.xxx * vs_TEXCOORD4.xyz;\n    u_xlat3.x = dot(u_xlat2.xyz,
            (-u_xlat3.xyz));\n    u_xlat16_9 = -abs(u_xlat3.x) + 1.0;\n    u_xlat16_17
            = u_xlat16_9 * u_xlat16_9;\n    u_xlat16_17 = u_xlat16_17 * u_xlat16_17;\n   
            u_xlat16_9 = u_xlat16_9 * u_xlat16_17;\n    u_xlat16_17 = u_xlat16_1.x
            * u_xlat16_9 + 1.0;\n    u_xlat3.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);\n    u_xlat16_25 = (-u_xlat3.x)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_25 * u_xlat16_25;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_25 = u_xlat16_25 * u_xlat16_4.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * u_xlat16_25 + 1.0;\n    u_xlat16_1.x =
            u_xlat16_17 * u_xlat16_1.x;\n    u_xlat3.x = u_xlat3.x * u_xlat16_1.x;\n   
            u_xlat16_1.xzw = u_xlat3.xxx * _LightColor0.xyz;\n    u_xlat2.w = 1.0;\n   
            u_xlat16_4.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_4.y = dot(unity_SHAg,
            u_xlat2);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_4.xyz);\n    u_xlat2.xyz
            = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat2.xyz
            = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_26
            = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.x = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_26 * _OcclusionStrength + u_xlat16_4.x;\n   
            u_xlat16_1.xzw = u_xlat2.xyz * u_xlat16_4.xxx + u_xlat16_1.xzw;\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat2.x
            = u_xlat24 * u_xlat24;\n    u_xlat2.x = max(u_xlat2.x, 0.00200000009);\n   
            u_xlat24 = u_xlat24 * u_xlat2.x;\n    u_xlat24 = (-u_xlat24) * 0.280000001
            + 1.0;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(u_xlat24);\n    u_xlat16_5.xyz
            = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_5.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_29 = (-u_xlat16_28) + 1.0;\n    u_xlat16_6.xyz = u_xlat0.xyz
            * vec3(u_xlat16_28);\n    u_xlat16_28 = u_xlat16_29 + _Glossiness;\n   
            u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);\n    u_xlat16_7.xyz = (-u_xlat16_5.xyz)
            + vec3(u_xlat16_28);\n    u_xlat16_5.xyz = vec3(u_xlat16_9) * u_xlat16_7.xyz
            + u_xlat16_5.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;\n   
            u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_1.xzw + u_xlat16_4.xyz;\n   
            u_xlat16_2.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat16_2.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp sampler2D _EmissionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump vec4
            u_xlat16_2;\nvec4 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3 u_xlat8;\nmediump float
            u_xlat16_10;\nmediump vec3 u_xlat16_13;\nmediump float u_xlat16_18;\nmediump
            float u_xlat16_26;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat8.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat8.xyz,
            u_xlat8.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x
            = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat8.xyz;\n   
            u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x;\n    u_xlat0.x = (-_Glossiness)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * u_xlat0.x + -0.5;\n    u_xlat8.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n   
            u_xlat3.xyz = u_xlat8.xxx * vs_TEXCOORD4.xyz;\n    u_xlat8.x = dot(u_xlat3.xyz,
            (-u_xlat1.xyz));\n    u_xlat16_10 = -abs(u_xlat8.x) + 1.0;\n    u_xlat16_18
            = u_xlat16_10 * u_xlat16_10;\n    u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n   
            u_xlat16_10 = u_xlat16_10 * u_xlat16_18;\n    u_xlat16_18 = u_xlat16_2.x
            * u_xlat16_10 + 1.0;\n    u_xlat8.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_26 = (-u_xlat8.x)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_4.x;\n   
            u_xlat16_2.x = u_xlat16_2.x * u_xlat16_26 + 1.0;\n    u_xlat16_2.x =
            u_xlat16_18 * u_xlat16_2.x;\n    u_xlat8.x = u_xlat8.x * u_xlat16_2.x;\n   
            u_xlat16_2.xzw = u_xlat8.xxx * _LightColor0.xyz;\n    u_xlat3.w = 1.0;\n   
            u_xlat16_4.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_4.y = dot(unity_SHAg,
            u_xlat3);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat3);\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat8.xyz = log2(u_xlat16_4.xyz);\n    u_xlat8.xyz
            = u_xlat8.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat8.xyz
            = exp2(u_xlat8.xyz);\n    u_xlat8.xyz = u_xlat8.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat8.xyz = max(u_xlat8.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat10_1.x
            = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.x = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_4.x = u_xlat10_1.x * _OcclusionStrength + u_xlat16_4.x;\n   
            u_xlat16_2.xzw = u_xlat8.xyz * u_xlat16_4.xxx + u_xlat16_2.xzw;\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat8.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat8.x = max(u_xlat8.x, 0.00200000009);\n   
            u_xlat0.x = u_xlat8.x * u_xlat0.x;\n    u_xlat0.x = (-u_xlat0.x) * 0.280000001
            + 1.0;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat0.xxx;\n    u_xlat16_28
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.x = (-u_xlat16_28)
            + 1.0;\n    u_xlat16_5.x = u_xlat16_5.x + _Glossiness;\n    u_xlat16_5.x
            = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz = _Color.xyz * u_xlat10_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz =
            u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_28)
            * u_xlat0.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_7.xyz = (-u_xlat16_13.xyz) + u_xlat16_5.xxx;\n    u_xlat16_5.xyz
            = vec3(u_xlat16_10) * u_xlat16_7.xyz + u_xlat16_13.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz
            * u_xlat16_2.xzw + u_xlat16_4.xyz;\n    u_xlat10_1.xyz = texture2D(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_1.xyz * _EmissionColor.xyz
            + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec4
            u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_IndirectSpecColor;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nmediump vec3 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nvec3 u_xlat8;\nmediump float u_xlat16_10;\nmediump
            vec3 u_xlat16_13;\nmediump float u_xlat16_18;\nmediump float u_xlat16_26;\nmediump
            float u_xlat16_28;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat8.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat8.xyz,
            u_xlat8.xyz);\n    u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x
            = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat8.xyz;\n   
            u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x;\n    u_xlat0.x = (-_Glossiness)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * u_xlat0.x + -0.5;\n    u_xlat8.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n   
            u_xlat3.xyz = u_xlat8.xxx * vs_TEXCOORD4.xyz;\n    u_xlat8.x = dot(u_xlat3.xyz,
            (-u_xlat1.xyz));\n    u_xlat16_10 = -abs(u_xlat8.x) + 1.0;\n    u_xlat16_18
            = u_xlat16_10 * u_xlat16_10;\n    u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n   
            u_xlat16_10 = u_xlat16_10 * u_xlat16_18;\n    u_xlat16_18 = u_xlat16_2.x
            * u_xlat16_10 + 1.0;\n    u_xlat8.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_26 = (-u_xlat8.x)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_4.x;\n   
            u_xlat16_2.x = u_xlat16_2.x * u_xlat16_26 + 1.0;\n    u_xlat16_2.x =
            u_xlat16_18 * u_xlat16_2.x;\n    u_xlat8.x = u_xlat8.x * u_xlat16_2.x;\n   
            u_xlat16_2.xzw = u_xlat8.xxx * _LightColor0.xyz;\n    u_xlat3.w = 1.0;\n   
            u_xlat16_4.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_4.y = dot(unity_SHAg,
            u_xlat3);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat3);\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat8.xyz = log2(u_xlat16_4.xyz);\n    u_xlat8.xyz
            = u_xlat8.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat8.xyz
            = exp2(u_xlat8.xyz);\n    u_xlat8.xyz = u_xlat8.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat8.xyz = max(u_xlat8.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_1.x
            = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.x = (-_OcclusionStrength)
            + 1.0;\n    u_xlat16_4.x = u_xlat16_1.x * _OcclusionStrength + u_xlat16_4.x;\n   
            u_xlat16_2.xzw = u_xlat8.xyz * u_xlat16_4.xxx + u_xlat16_2.xzw;\n   
            u_xlat16_4.xyz = u_xlat16_4.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat8.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat8.x = max(u_xlat8.x, 0.00200000009);\n   
            u_xlat0.x = u_xlat8.x * u_xlat0.x;\n    u_xlat0.x = (-u_xlat0.x) * 0.280000001
            + 1.0;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat0.xxx;\n    u_xlat16_28
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.x = (-u_xlat16_28)
            + 1.0;\n    u_xlat16_5.x = u_xlat16_5.x + _Glossiness;\n    u_xlat16_5.x
            = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_13.xyz = _Color.xyz * u_xlat16_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz =
            u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_28)
            * u_xlat0.xyz;\n    u_xlat16_13.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_7.xyz = (-u_xlat16_13.xyz) + u_xlat16_5.xxx;\n    u_xlat16_5.xyz
            = vec3(u_xlat16_10) * u_xlat16_7.xyz + u_xlat16_13.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz
            * u_xlat16_2.xzw + u_xlat16_4.xyz;\n    u_xlat16_1.xyz = texture(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * _EmissionColor.xyz
            + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float
            _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp sampler2D _EmissionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nvec3
            u_xlat2;\nlowp vec3 u_xlat10_2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_10;\nvec3 u_xlat11;\nmediump
            float u_xlat16_19;\nfloat u_xlat27;\nbool u_xlatb27;\nmediump float u_xlat16_28;\nmediump
            float u_xlat16_32;\nmediump float u_xlat16_33;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb27 = u_xlat16_1<0.0;\n    if(u_xlatb27){discard;}\n   
            u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat2.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat3.xyz
            = vec3(u_xlat27) * vs_TEXCOORD1.xyz;\n    u_xlat4.xyz = (-vs_TEXCOORD1.xyz)
            * vec3(u_xlat27) + _WorldSpaceLightPos0.xyz;\n    u_xlat27 = dot(u_xlat2.xyz,
            (-u_xlat3.xyz));\n    u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat16_1 = -abs(u_xlat27)
            + 1.0;\n    u_xlat16_10.x = u_xlat16_1 * u_xlat16_1;\n    u_xlat16_10.x
            = u_xlat16_10.x * u_xlat16_10.x;\n    u_xlat16_1 = u_xlat16_1 * u_xlat16_10.x;\n   
            u_xlat27 = dot(u_xlat4.xyz, u_xlat4.xyz);\n    u_xlat27 = max(u_xlat27,
            0.00100000005);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat11.xyz
            = vec3(u_xlat27) * u_xlat4.xyz;\n    u_xlat27 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat11.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat16_10.x
            = u_xlat27 + u_xlat27;\n    u_xlat16_10.x = u_xlat27 * u_xlat16_10.x;\n   
            u_xlat27 = (-_Glossiness) + 1.0;\n    u_xlat16_10.x = u_xlat16_10.x *
            u_xlat27 + -0.5;\n    u_xlat16_19 = u_xlat16_10.x * u_xlat16_1 + 1.0;\n   
            u_xlat16_28 = (-u_xlat2.x) + 1.0;\n    u_xlat16_5.x = u_xlat16_28 * u_xlat16_28;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_28 = u_xlat16_28
            * u_xlat16_5.x;\n    u_xlat16_10.x = u_xlat16_10.x * u_xlat16_28 + 1.0;\n   
            u_xlat16_10.x = u_xlat16_19 * u_xlat16_10.x;\n    u_xlat2.x = u_xlat2.x
            * u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat2.xxx * _LightColor0.xyz;\n   
            u_xlat2.x = u_xlat27 * u_xlat27;\n    u_xlat2.x = max(u_xlat2.x, 0.00200000009);\n   
            u_xlat27 = u_xlat27 * u_xlat2.x;\n    u_xlat27 = (-u_xlat27) * 0.280000001
            + 1.0;\n    u_xlat10_2.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_5.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_5.x = u_xlat10_2.x
            * _OcclusionStrength + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat16_5.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat27) *
            u_xlat16_5.xyz;\n    u_xlat16_6.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_32 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_33 = (-u_xlat16_32) + 1.0;\n   
            u_xlat16_7.xyz = u_xlat0.xyz * vec3(u_xlat16_32);\n    u_xlat16_32 =
            u_xlat16_33 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0,
            1.0);\n    u_xlat16_8.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_32);\n   
            u_xlat16_6.xyz = vec3(u_xlat16_1) * u_xlat16_8.xyz + u_xlat16_6.xyz;\n   
            u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz;\n    u_xlat0.xyz =
            u_xlat16_7.xyz * u_xlat16_10.xyz + u_xlat16_5.xyz;\n    u_xlat10_2.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_2.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float
            _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump float u_xlat16_1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump
            vec3 u_xlat16_10;\nvec3 u_xlat11;\nmediump float u_xlat16_19;\nfloat
            u_xlat27;\nbool u_xlatb27;\nmediump float u_xlat16_28;\nmediump float
            u_xlat16_32;\nmediump float u_xlat16_33;\nvoid main()\n{\n    u_xlat16_0
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb27 = u_xlat16_1<0.0;\n    if(u_xlatb27){discard;}\n   
            u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat2.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat3.xyz
            = vec3(u_xlat27) * vs_TEXCOORD1.xyz;\n    u_xlat4.xyz = (-vs_TEXCOORD1.xyz)
            * vec3(u_xlat27) + _WorldSpaceLightPos0.xyz;\n    u_xlat27 = dot(u_xlat2.xyz,
            (-u_xlat3.xyz));\n    u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat16_1 = -abs(u_xlat27)
            + 1.0;\n    u_xlat16_10.x = u_xlat16_1 * u_xlat16_1;\n    u_xlat16_10.x
            = u_xlat16_10.x * u_xlat16_10.x;\n    u_xlat16_1 = u_xlat16_1 * u_xlat16_10.x;\n   
            u_xlat27 = dot(u_xlat4.xyz, u_xlat4.xyz);\n    u_xlat27 = max(u_xlat27,
            0.00100000005);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat11.xyz
            = vec3(u_xlat27) * u_xlat4.xyz;\n    u_xlat27 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat11.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat16_10.x
            = u_xlat27 + u_xlat27;\n    u_xlat16_10.x = u_xlat27 * u_xlat16_10.x;\n   
            u_xlat27 = (-_Glossiness) + 1.0;\n    u_xlat16_10.x = u_xlat16_10.x *
            u_xlat27 + -0.5;\n    u_xlat16_19 = u_xlat16_10.x * u_xlat16_1 + 1.0;\n   
            u_xlat16_28 = (-u_xlat2.x) + 1.0;\n    u_xlat16_5.x = u_xlat16_28 * u_xlat16_28;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_28 = u_xlat16_28
            * u_xlat16_5.x;\n    u_xlat16_10.x = u_xlat16_10.x * u_xlat16_28 + 1.0;\n   
            u_xlat16_10.x = u_xlat16_19 * u_xlat16_10.x;\n    u_xlat2.x = u_xlat2.x
            * u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat2.xxx * _LightColor0.xyz;\n   
            u_xlat2.x = u_xlat27 * u_xlat27;\n    u_xlat2.x = max(u_xlat2.x, 0.00200000009);\n   
            u_xlat27 = u_xlat27 * u_xlat2.x;\n    u_xlat27 = (-u_xlat27) * 0.280000001
            + 1.0;\n    u_xlat16_2.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_5.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_5.x = u_xlat16_2.x
            * _OcclusionStrength + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat16_5.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat27) *
            u_xlat16_5.xyz;\n    u_xlat16_6.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_32 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_33 = (-u_xlat16_32) + 1.0;\n   
            u_xlat16_7.xyz = u_xlat0.xyz * vec3(u_xlat16_32);\n    u_xlat16_32 =
            u_xlat16_33 + _Glossiness;\n    u_xlat16_32 = clamp(u_xlat16_32, 0.0,
            1.0);\n    u_xlat16_8.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_32);\n   
            u_xlat16_6.xyz = vec3(u_xlat16_1) * u_xlat16_8.xyz + u_xlat16_6.xyz;\n   
            u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz;\n    u_xlat0.xyz =
            u_xlat16_7.xyz * u_xlat16_10.xyz + u_xlat16_5.xyz;\n    u_xlat16_2.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_2.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform
            lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nlowp
            vec4 u_xlat10_4;\nvec3 u_xlat5;\nlowp vec4 u_xlat10_5;\nbool u_xlatb5;\nvec3
            u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3
            u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3
            u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump
            vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat
            u_xlat27;\nfloat u_xlat39;\nfloat u_xlat40;\nlowp float u_xlat10_40;\nmediump
            float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat
            u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n   
            u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz
            = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat10_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat16_2.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat39 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n   
            u_xlat1.xyz = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat10_40 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat10_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat10_5 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat10_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat10_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat10_4 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat10_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat10_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat10_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(4)
            uniform mediump samplerCube unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin highp vec3
            vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_1;\nbool
            u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec4 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec4 u_xlat16_5;\nbool u_xlatb5;\nvec3
            u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3
            u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3
            u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump
            vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat
            u_xlat27;\nfloat u_xlat39;\nfloat u_xlat40;\nmediump float u_xlat16_40;\nmediump
            float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat
            u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n   
            u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat16_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat16_2.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat39 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n   
            u_xlat1.xyz = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat16_40 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat16_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat16_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat16_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat16_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat16_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4
            unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float
            _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform
            lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD8;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nvec3 u_xlat1;\nlowp
            vec3 u_xlat10_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nfloat u_xlat4;\nlowp float u_xlat10_4;\nmediump vec3 u_xlat16_5;\nlowp
            vec4 u_xlat10_5;\nmediump vec3 u_xlat16_6;\nlowp vec4 u_xlat10_6;\nvec3
            u_xlat7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb10;\nmediump vec3
            u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump vec3 u_xlat16_13;\nfloat
            u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3 u_xlat25;\nmediump vec3
            u_xlat16_25;\nmediump float u_xlat16_26;\nfloat u_xlat28;\nfloat u_xlat29;\nmediump
            float u_xlat16_40;\nfloat u_xlat42;\nbool u_xlatb42;\nfloat u_xlat43;\nmediump
            float u_xlat16_44;\nmediump float u_xlat16_45;\nmediump float u_xlat16_47;\nmediump
            float u_xlat16_53;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_2.x = u_xlat10_0.w * _Color.w + (-_Cutoff);\n    u_xlatb42 =
            u_xlat16_2.x<0.0;\n    if(u_xlatb42){discard;}\n    u_xlat16_2.xyz =
            u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_44 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_44);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat15.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat10_4 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_45
            = (-_OcclusionStrength) + 1.0;\n    u_xlat16_45 = u_xlat10_4 * _OcclusionStrength
            + u_xlat16_45;\n    u_xlat4 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x
            = dot(u_xlat15.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x +
            u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) +
            u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr,
            u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z
            = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n   
            u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat18.xyz
            = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(0.416666657,
            0.416666657, 0.416666657);\n    u_xlat18.xyz = exp2(u_xlat18.xyz);\n   
            u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995, 1.05499995, 1.05499995)
            + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat18.xyz
            = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb42){\n        u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat42 = inversesqrt(u_xlat42);\n        u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat10_6 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat10_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat10_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat10_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat10_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat10_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float
            _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(4)
            uniform mediump samplerCube unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4
            vs_TEXCOORD5;\nin highp vec3 vs_TEXCOORD8;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec3
            u_xlat1;\nmediump vec3 u_xlat16_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat4;\nmediump float u_xlat16_4;\nmediump
            vec4 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3
            u_xlat9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump
            vec3 u_xlat16_13;\nfloat u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3
            u_xlat25;\nmediump vec3 u_xlat16_25;\nmediump float u_xlat16_26;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_40;\nfloat u_xlat42;\nbool
            u_xlatb42;\nfloat u_xlat43;\nmediump float u_xlat16_44;\nmediump float
            u_xlat16_45;\nmediump float u_xlat16_47;\nmediump float u_xlat16_53;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.x = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb42 = u_xlat16_2.x<0.0;\n    if(u_xlatb42){discard;}\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_44 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_44);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat15.xyz
            = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n    u_xlat16_4 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_45 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_45 = u_xlat16_4 * _OcclusionStrength + u_xlat16_45;\n    u_xlat4
            = (-_Glossiness) + 1.0;\n    u_xlat16_5.x = dot(u_xlat15.xyz, u_xlat0.xyz);\n   
            u_xlat16_5.x = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz
            * (-u_xlat16_5.xxx) + u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x
            = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n   
            u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlat18.xyz = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz
            = u_xlat18.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat18.xyz
            = exp2(u_xlat18.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat18.xyz = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42
            = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb42){\n        u_xlat42
            = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n        u_xlat42 = inversesqrt(u_xlat42);\n       
            u_xlat7.xyz = vec3(u_xlat42) * u_xlat16_5.xyz;\n        u_xlat8.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat8.xyz
            = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat16_6 = textureLod(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat16_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat16_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat16_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat16_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat16_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4
            unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp
            sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nuniform
            lowp samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat4;\nlowp float
            u_xlat10_4;\nmediump vec3 u_xlat16_5;\nlowp vec4 u_xlat10_5;\nmediump
            vec3 u_xlat16_6;\nlowp vec4 u_xlat10_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3
            u_xlat9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump
            vec3 u_xlat16_13;\nfloat u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3
            u_xlat25;\nmediump vec3 u_xlat16_25;\nmediump float u_xlat16_26;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_40;\nfloat u_xlat42;\nbool
            u_xlatb42;\nfloat u_xlat43;\nmediump float u_xlat16_44;\nmediump float
            u_xlat16_45;\nmediump float u_xlat16_47;\nmediump float u_xlat16_53;\nvoid
            main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz
            * u_xlat10_0.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_44 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_44);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat15.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat10_4 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_45
            = (-_OcclusionStrength) + 1.0;\n    u_xlat16_45 = u_xlat10_4 * _OcclusionStrength
            + u_xlat16_45;\n    u_xlat4 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x
            = dot(u_xlat15.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x +
            u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) +
            u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr,
            u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z
            = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n   
            u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat18.xyz
            = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(0.416666657,
            0.416666657, 0.416666657);\n    u_xlat18.xyz = exp2(u_xlat18.xyz);\n   
            u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995, 1.05499995, 1.05499995)
            + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat18.xyz
            = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb42){\n        u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat42 = inversesqrt(u_xlat42);\n        u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat10_6 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat10_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat10_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat10_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat10_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat10_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump
            sampler2D _EmissionMap;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(4) uniform mediump samplerCube unity_SpecCube1;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nin highp vec3 vs_TEXCOORD8;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nmediump vec3 u_xlat16_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat4;\nmediump float u_xlat16_4;\nmediump
            vec4 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3
            u_xlat9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump
            vec3 u_xlat16_13;\nfloat u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3
            u_xlat25;\nmediump vec3 u_xlat16_25;\nmediump float u_xlat16_26;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_40;\nfloat u_xlat42;\nbool
            u_xlatb42;\nfloat u_xlat43;\nmediump float u_xlat16_44;\nmediump float
            u_xlat16_45;\nmediump float u_xlat16_47;\nmediump float u_xlat16_53;\nvoid
            main()\n{\n    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat1.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz
            * u_xlat16_0.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_44 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_44);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat15.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat16_4 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_45
            = (-_OcclusionStrength) + 1.0;\n    u_xlat16_45 = u_xlat16_4 * _OcclusionStrength
            + u_xlat16_45;\n    u_xlat4 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x
            = dot(u_xlat15.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x +
            u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) +
            u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr,
            u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z
            = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n   
            u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat18.xyz
            = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(0.416666657,
            0.416666657, 0.416666657);\n    u_xlat18.xyz = exp2(u_xlat18.xyz);\n   
            u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995, 1.05499995, 1.05499995)
            + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat18.xyz
            = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb42){\n        u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat42 = inversesqrt(u_xlat42);\n        u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat16_6 = textureLod(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat16_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat16_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat16_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat16_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat16_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform
            \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nuniform
            lowp samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD8;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nvec3 u_xlat1;\nlowp
            vec3 u_xlat10_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nmediump vec3 u_xlat16_4;\nlowp vec4 u_xlat10_4;\nvec3 u_xlat5;\nlowp
            vec4 u_xlat10_5;\nbool u_xlatb5;\nvec3 u_xlat6;\nvec3 u_xlat7;\nvec3
            u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3 u_xlat16_9;\nbvec3 u_xlatb10;\nmediump
            vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nfloat u_xlat13;\nfloat
            u_xlat14;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat
            u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nbool u_xlatb39;\nfloat u_xlat40;\nlowp
            float u_xlat10_40;\nmediump float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump
            float u_xlat16_43;\nfloat u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.x = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb39 = u_xlat16_2.x<0.0;\n    if(u_xlatb39){discard;}\n   
            u_xlat16_2.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat10_40 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat10_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat10_5 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat10_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat10_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat10_4 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat10_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat10_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat10_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform
            \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2)
            uniform mediump sampler2D _EmissionMap;\nUNITY_LOCATION(3) uniform mediump
            samplerCube unity_SpecCube0;\nUNITY_LOCATION(4) uniform mediump samplerCube
            unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin highp vec3 vs_TEXCOORD8;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec3
            u_xlat1;\nmediump vec3 u_xlat16_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nmediump vec4 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec4
            u_xlat16_5;\nbool u_xlatb5;\nvec3 u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3
            u_xlatb8;\nmediump vec3 u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump
            vec3 u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump
            vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat
            u_xlat27;\nfloat u_xlat39;\nbool u_xlatb39;\nfloat u_xlat40;\nmediump
            float u_xlat16_40;\nmediump float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump
            float u_xlat16_43;\nfloat u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.x = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb39 = u_xlat16_2.x<0.0;\n    if(u_xlatb39){discard;}\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat16_40 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat16_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat16_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat16_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat16_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat16_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform
            lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nlowp
            vec4 u_xlat10_4;\nvec3 u_xlat5;\nlowp vec4 u_xlat10_5;\nbool u_xlatb5;\nvec3
            u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3
            u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3
            u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump
            vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat
            u_xlat27;\nfloat u_xlat39;\nfloat u_xlat40;\nlowp float u_xlat10_40;\nmediump
            float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat
            u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n   
            u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz
            = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat10_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat16_2.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat39 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n   
            u_xlat1.xyz = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat10_40 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat10_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat10_5 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat10_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat10_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat10_4 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat10_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat10_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat10_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(4)
            uniform mediump samplerCube unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin highp vec3
            vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_1;\nbool
            u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec4 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec4 u_xlat16_5;\nbool u_xlatb5;\nvec3
            u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3
            u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3
            u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump
            vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat
            u_xlat27;\nfloat u_xlat39;\nfloat u_xlat40;\nmediump float u_xlat16_40;\nmediump
            float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat
            u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n   
            u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat16_0.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat16_2.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat39 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n   
            u_xlat1.xyz = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat16_40 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat16_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat16_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat16_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat16_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat16_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4
            unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float
            _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform
            lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD8;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nvec3 u_xlat1;\nlowp
            vec3 u_xlat10_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nfloat u_xlat4;\nlowp float u_xlat10_4;\nmediump vec3 u_xlat16_5;\nlowp
            vec4 u_xlat10_5;\nmediump vec3 u_xlat16_6;\nlowp vec4 u_xlat10_6;\nvec3
            u_xlat7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb10;\nmediump vec3
            u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump vec3 u_xlat16_13;\nfloat
            u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3 u_xlat25;\nmediump vec3
            u_xlat16_25;\nmediump float u_xlat16_26;\nfloat u_xlat28;\nfloat u_xlat29;\nmediump
            float u_xlat16_40;\nfloat u_xlat42;\nbool u_xlatb42;\nfloat u_xlat43;\nmediump
            float u_xlat16_44;\nmediump float u_xlat16_45;\nmediump float u_xlat16_47;\nmediump
            float u_xlat16_53;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_2.x = u_xlat10_0.w * _Color.w + (-_Cutoff);\n    u_xlatb42 =
            u_xlat16_2.x<0.0;\n    if(u_xlatb42){discard;}\n    u_xlat16_2.xyz =
            u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_44 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_44);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat15.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat10_4 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_45
            = (-_OcclusionStrength) + 1.0;\n    u_xlat16_45 = u_xlat10_4 * _OcclusionStrength
            + u_xlat16_45;\n    u_xlat4 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x
            = dot(u_xlat15.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x +
            u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) +
            u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr,
            u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z
            = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n   
            u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat18.xyz
            = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(0.416666657,
            0.416666657, 0.416666657);\n    u_xlat18.xyz = exp2(u_xlat18.xyz);\n   
            u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995, 1.05499995, 1.05499995)
            + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat18.xyz
            = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb42){\n        u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat42 = inversesqrt(u_xlat42);\n        u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat10_6 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat10_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat10_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat10_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat10_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat10_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec4
            u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float
            _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(4)
            uniform mediump samplerCube unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4
            vs_TEXCOORD5;\nin highp vec3 vs_TEXCOORD8;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec3
            u_xlat1;\nmediump vec3 u_xlat16_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat4;\nmediump float u_xlat16_4;\nmediump
            vec4 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3
            u_xlat9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump
            vec3 u_xlat16_13;\nfloat u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3
            u_xlat25;\nmediump vec3 u_xlat16_25;\nmediump float u_xlat16_26;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_40;\nfloat u_xlat42;\nbool
            u_xlatb42;\nfloat u_xlat43;\nmediump float u_xlat16_44;\nmediump float
            u_xlat16_45;\nmediump float u_xlat16_47;\nmediump float u_xlat16_53;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.x = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb42 = u_xlat16_2.x<0.0;\n    if(u_xlatb42){discard;}\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_44 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_44);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat15.xyz
            = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n    u_xlat16_4 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_45 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_45 = u_xlat16_4 * _OcclusionStrength + u_xlat16_45;\n    u_xlat4
            = (-_Glossiness) + 1.0;\n    u_xlat16_5.x = dot(u_xlat15.xyz, u_xlat0.xyz);\n   
            u_xlat16_5.x = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz
            * (-u_xlat16_5.xxx) + u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x
            = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n   
            u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlat18.xyz = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz
            = u_xlat18.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat18.xyz
            = exp2(u_xlat18.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat18.xyz = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42
            = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb42){\n        u_xlat42
            = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n        u_xlat42 = inversesqrt(u_xlat42);\n       
            u_xlat7.xyz = vec3(u_xlat42) * u_xlat16_5.xyz;\n        u_xlat8.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat8.xyz
            = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat16_6 = textureLod(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat16_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat16_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat16_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat16_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat16_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4
            unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp
            sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nuniform
            lowp samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nbool u_xlatb1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat4;\nlowp float
            u_xlat10_4;\nmediump vec3 u_xlat16_5;\nlowp vec4 u_xlat10_5;\nmediump
            vec3 u_xlat16_6;\nlowp vec4 u_xlat10_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3
            u_xlat9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump
            vec3 u_xlat16_13;\nfloat u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3
            u_xlat25;\nmediump vec3 u_xlat16_25;\nmediump float u_xlat16_26;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_40;\nfloat u_xlat42;\nbool
            u_xlatb42;\nfloat u_xlat43;\nmediump float u_xlat16_44;\nmediump float
            u_xlat16_45;\nmediump float u_xlat16_47;\nmediump float u_xlat16_53;\nvoid
            main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz
            * u_xlat10_0.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_44 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_44);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat15.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat10_4 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_45
            = (-_OcclusionStrength) + 1.0;\n    u_xlat16_45 = u_xlat10_4 * _OcclusionStrength
            + u_xlat16_45;\n    u_xlat4 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x
            = dot(u_xlat15.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x +
            u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) +
            u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr,
            u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z
            = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n   
            u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat18.xyz
            = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(0.416666657,
            0.416666657, 0.416666657);\n    u_xlat18.xyz = exp2(u_xlat18.xyz);\n   
            u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995, 1.05499995, 1.05499995)
            + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat18.xyz
            = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb42){\n        u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat42 = inversesqrt(u_xlat42);\n        u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat10_6 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat10_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat10_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat10_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat10_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat10_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec4
            u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump
            vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump
            sampler2D _EmissionMap;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(4) uniform mediump samplerCube unity_SpecCube1;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nin highp vec3 vs_TEXCOORD8;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nmediump vec3 u_xlat16_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat4;\nmediump float u_xlat16_4;\nmediump
            vec4 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3
            u_xlat9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump
            vec3 u_xlat16_13;\nfloat u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3
            u_xlat25;\nmediump vec3 u_xlat16_25;\nmediump float u_xlat16_26;\nfloat
            u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_40;\nfloat u_xlat42;\nbool
            u_xlatb42;\nfloat u_xlat43;\nmediump float u_xlat16_44;\nmediump float
            u_xlat16_45;\nmediump float u_xlat16_47;\nmediump float u_xlat16_53;\nvoid
            main()\n{\n    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat1.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz
            * u_xlat16_0.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_44 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_44);\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x =
            inversesqrt(u_xlat1.x);\n    u_xlat15.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat16_4 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_45
            = (-_OcclusionStrength) + 1.0;\n    u_xlat16_45 = u_xlat16_4 * _OcclusionStrength
            + u_xlat16_45;\n    u_xlat4 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x
            = dot(u_xlat15.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x +
            u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) +
            u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr,
            u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z
            = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n   
            u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat18.xyz
            = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(0.416666657,
            0.416666657, 0.416666657);\n    u_xlat18.xyz = exp2(u_xlat18.xyz);\n   
            u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995, 1.05499995, 1.05499995)
            + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat18.xyz
            = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb42){\n        u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n       
            u_xlat42 = inversesqrt(u_xlat42);\n        u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 =
            min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4)
            * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n   
            u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat16_6 = textureLod(unity_SpecCube0,
            u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat16_6.w + -1.0;\n   
            u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x
            = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat16_6.xyz
            * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42)
            * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_5.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat16_5.w + -1.0;\n       
            u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n       
            u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz
            = u_xlat16_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx
            * u_xlat16_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n   
            }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42,
            0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz
            = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53
            = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26
            = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n   
            u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 =
            -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x
            * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x =
            max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n   
            u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x
            * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n   
            u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42
            + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x
            * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n   
            u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x =
            u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x
            = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n   
            u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001
            + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1
            = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44)
            + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44
            = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28)
            * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45)
            + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n   
            u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45
            * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz
            * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n   
            u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform
            \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nuniform
            lowp samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD8;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nvec3 u_xlat1;\nlowp
            vec3 u_xlat10_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nmediump vec3 u_xlat16_4;\nlowp vec4 u_xlat10_4;\nvec3 u_xlat5;\nlowp
            vec4 u_xlat10_5;\nbool u_xlatb5;\nvec3 u_xlat6;\nvec3 u_xlat7;\nvec3
            u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3 u_xlat16_9;\nbvec3 u_xlatb10;\nmediump
            vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nfloat u_xlat13;\nfloat
            u_xlat14;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat
            u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nbool u_xlatb39;\nfloat u_xlat40;\nlowp
            float u_xlat10_40;\nmediump float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump
            float u_xlat16_43;\nfloat u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.x = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb39 = u_xlat16_2.x<0.0;\n    if(u_xlatb39){discard;}\n   
            u_xlat16_2.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat10_40 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat10_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat10_5 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat10_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat10_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat10_4 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat10_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat10_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat10_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform
            \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2)
            uniform mediump sampler2D _EmissionMap;\nUNITY_LOCATION(3) uniform mediump
            samplerCube unity_SpecCube0;\nUNITY_LOCATION(4) uniform mediump samplerCube
            unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin highp vec3 vs_TEXCOORD8;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec3
            u_xlat1;\nmediump vec3 u_xlat16_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nmediump vec4 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec4
            u_xlat16_5;\nbool u_xlatb5;\nvec3 u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3
            u_xlatb8;\nmediump vec3 u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump
            vec3 u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump
            vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat
            u_xlat27;\nfloat u_xlat39;\nbool u_xlatb39;\nfloat u_xlat40;\nmediump
            float u_xlat16_40;\nmediump float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump
            float u_xlat16_43;\nfloat u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_2.x = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb39 = u_xlat16_2.x<0.0;\n    if(u_xlatb39){discard;}\n   
            u_xlat16_2.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz
            = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat16_40 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_42 = u_xlat16_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40
            = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n       
            u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz
            * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n       
            u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x
            = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y
            = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z
            = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n       
            }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 =
            min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else
            {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40)
            * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n   
            u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat16_5 = textureLod(unity_SpecCube0,
            u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat16_5.w + -1.0;\n   
            u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x
            = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat16_5.xyz
            * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n           
            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz
            * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz
            / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x
            : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y
            : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z
            : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n           
            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44
            = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz
            * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz
            = u_xlat16_4.xyz;\n        }\n        u_xlat16_4 = textureLod(unity_SpecCube1,
            u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat16_4.w + -1.0;\n       
            u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n       
            u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz
            = u_xlat16_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx
            * u_xlat16_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n   
            }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39,
            0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz
            = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n   
            u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42
            = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x)
            + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n   
            u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39)
            + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x
            = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x *
            u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n   
            u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x *
            u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14,
            0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39)
            * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n   
            u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x
            + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39
            = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x
            = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x
            + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n   
            u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz,
            u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1
            ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41
            = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n   
            u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26)
            * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n   
            u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42
            * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz
            * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz
            * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n   
            u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n   
            u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat16_1.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _DETAIL_MULX2
        - _EMISSION
        - _GLOSSYREFLECTIONS_OFF
        - _METALLICGLOSSMAP
        - _NORMALMAP
        - _PARALLAXMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECULARHIGHLIGHTS_OFF
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _NORMALMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _METALLICGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _PARALLAXMAP
          hasDiscard: 1
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 83
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz
            = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat2.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat2.wwwx;\n    vs_TEXCOORD3 = u_xlat2.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat2.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform
            highp sampler2D _LightTexture0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3
            vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec3
            u_xlat1;\nvec3 u_xlat2;\nlowp vec3 u_xlat10_2;\nvec3 u_xlat3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_11;\nfloat u_xlat14;\nbool
            u_xlatb14;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nfloat u_xlat21;\nfloat
            u_xlat22;\nmediump float u_xlat16_25;\nmediump float u_xlat16_26;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD1.xyz;\n    u_xlat1.x = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n   
            u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz = u_xlat1.xyz * vec3(u_xlat21)
            + (-u_xlat0.xyz);\n    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n   
            u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat21 = max(u_xlat21,
            0.00100000005);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz
            = vec3(u_xlat21) * u_xlat2.xyz;\n    u_xlat21 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat3.xyz
            = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(u_xlat3.xyz,
            u_xlat2.xyz);\n    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat22
            = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat22 = clamp(u_xlat22, 0.0,
            1.0);\n    u_xlat1.x = dot(u_xlat3.xyz, u_xlat1.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat3.xyz, (-u_xlat0.xyz));\n   
            u_xlat7 = (-_Glossiness) + 1.0;\n    u_xlat14 = u_xlat7 * u_xlat7;\n   
            u_xlat14 = max(u_xlat14, 0.00200000009);\n    u_xlat8 = u_xlat14 * u_xlat14;\n   
            u_xlat15 = u_xlat21 * u_xlat8 + (-u_xlat21);\n    u_xlat21 = u_xlat15
            * u_xlat21 + 1.0;\n    u_xlat21 = u_xlat21 * u_xlat21 + 1.00000001e-07;\n   
            u_xlat8 = u_xlat8 * 0.318309873;\n    u_xlat21 = u_xlat8 / u_xlat21;\n   
            u_xlat8 = (-u_xlat14) + 1.0;\n    u_xlat15 = abs(u_xlat0.x) * u_xlat8
            + u_xlat14;\n    u_xlat14 = u_xlat1.x * u_xlat8 + u_xlat14;\n    u_xlat14
            = u_xlat14 * abs(u_xlat0.x);\n    u_xlat16_4.x = -abs(u_xlat0.x) + 1.0;\n   
            u_xlat0.x = u_xlat1.x * u_xlat15 + u_xlat14;\n    u_xlat0.x = u_xlat0.x
            + 9.99999975e-06;\n    u_xlat0.x = 0.5 / u_xlat0.x;\n    u_xlat0.x =
            u_xlat21 * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x
            = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat10_2.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_11.xyz = _Color.xyz * u_xlat10_2.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat2.xyz =
            u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_11.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_11.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n   
            u_xlatb14 = u_xlat16_5.x!=0.0;\n    u_xlat14 = u_xlatb14 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat14 * u_xlat0.x;\n    u_xlat3.xyz = vs_TEXCOORD5.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * vs_TEXCOORD5.xxx + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = u_xlat3.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat14 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat14 = texture2D(_LightTexture0,
            vec2(u_xlat14)).x;\n    u_xlat16_5.xyz = vec3(u_xlat14) * _LightColor0.xyz;\n   
            u_xlat0.xzw = u_xlat0.xxx * u_xlat16_5.xyz;\n    u_xlat16_26 = (-u_xlat22)
            + 1.0;\n    u_xlat16_6.x = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_6.x
            = u_xlat16_6.x * u_xlat16_6.x;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_6.x;\n   
            u_xlat16_6.xyz = (-u_xlat16_11.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_11.xyz
            = u_xlat16_6.xyz * vec3(u_xlat16_26) + u_xlat16_11.xyz;\n    u_xlat0.xzw
            = u_xlat0.xzw * u_xlat16_11.xyz;\n    u_xlat16_11.x = u_xlat16_4.x *
            u_xlat16_4.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_11.x;\n    u_xlat16_11.x = u_xlat22
            + u_xlat22;\n    u_xlat16_11.x = u_xlat22 * u_xlat16_11.x;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat7 + -0.5;\n    u_xlat16_4.x = u_xlat16_11.x *
            u_xlat16_4.x + 1.0;\n    u_xlat16_18 = (-u_xlat1.x) + 1.0;\n    u_xlat16_25
            = u_xlat16_18 * u_xlat16_18;\n    u_xlat16_25 = u_xlat16_25 * u_xlat16_25;\n   
            u_xlat16_18 = u_xlat16_18 * u_xlat16_25;\n    u_xlat16_11.x = u_xlat16_11.x
            * u_xlat16_18 + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_11.x;\n   
            u_xlat7 = u_xlat1.x * u_xlat16_4.x;\n    u_xlat16_4.xyz = vec3(u_xlat7)
            * u_xlat16_5.xyz;\n    u_xlat16_25 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_5.xyz = u_xlat2.xyz * vec3(u_xlat16_25);\n    u_xlat0.xyz =
            u_xlat16_5.xyz * u_xlat16_4.xyz + u_xlat0.xzw;\n    SV_Target0.xyz =
            u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nin highp vec4 in_POSITION0;\nin
            mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2
            in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4
            vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec3 vs_TEXCOORD6;\nout
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz
            = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat2.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat2.wwwx;\n    vs_TEXCOORD3 = u_xlat2.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat2.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform highp
            sampler2D _LightTexture0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin
            highp vec4 vs_TEXCOORD4;\nin highp vec3 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec3 u_xlat1;\nvec3
            u_xlat2;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat7;\nfloat u_xlat8;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat14;\nbool u_xlatb14;\nfloat u_xlat15;\nmediump
            float u_xlat16_18;\nfloat u_xlat21;\nfloat u_xlat22;\nmediump float u_xlat16_25;\nmediump
            float u_xlat16_26;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat1.x = vs_TEXCOORD2.w;\n   
            u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat21
            = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = u_xlat1.xyz * vec3(u_xlat21) + (-u_xlat0.xyz);\n    u_xlat1.xyz
            = vec3(u_xlat21) * u_xlat1.xyz;\n    u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat21 = max(u_xlat21, 0.00100000005);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = vec3(u_xlat21) * u_xlat2.xyz;\n    u_xlat21 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat3.xyz
            = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(u_xlat3.xyz,
            u_xlat2.xyz);\n    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat22
            = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat22 = clamp(u_xlat22, 0.0,
            1.0);\n    u_xlat1.x = dot(u_xlat3.xyz, u_xlat1.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat3.xyz, (-u_xlat0.xyz));\n   
            u_xlat7 = (-_Glossiness) + 1.0;\n    u_xlat14 = u_xlat7 * u_xlat7;\n   
            u_xlat14 = max(u_xlat14, 0.00200000009);\n    u_xlat8 = u_xlat14 * u_xlat14;\n   
            u_xlat15 = u_xlat21 * u_xlat8 + (-u_xlat21);\n    u_xlat21 = u_xlat15
            * u_xlat21 + 1.0;\n    u_xlat21 = u_xlat21 * u_xlat21 + 1.00000001e-07;\n   
            u_xlat8 = u_xlat8 * 0.318309873;\n    u_xlat21 = u_xlat8 / u_xlat21;\n   
            u_xlat8 = (-u_xlat14) + 1.0;\n    u_xlat15 = abs(u_xlat0.x) * u_xlat8
            + u_xlat14;\n    u_xlat14 = u_xlat1.x * u_xlat8 + u_xlat14;\n    u_xlat14
            = u_xlat14 * abs(u_xlat0.x);\n    u_xlat16_4.x = -abs(u_xlat0.x) + 1.0;\n   
            u_xlat0.x = u_xlat1.x * u_xlat15 + u_xlat14;\n    u_xlat0.x = u_xlat0.x
            + 9.99999975e-06;\n    u_xlat0.x = 0.5 / u_xlat0.x;\n    u_xlat0.x =
            u_xlat21 * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x
            = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat16_2.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_11.xyz = _Color.xyz * u_xlat16_2.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat2.xyz =
            u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_11.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_11.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n   
            u_xlatb14 = u_xlat16_5.x!=0.0;\n    u_xlat14 = u_xlatb14 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat14 * u_xlat0.x;\n    u_xlat3.xyz = vs_TEXCOORD5.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * vs_TEXCOORD5.xxx + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = u_xlat3.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat14 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat14 = texture(_LightTexture0,
            vec2(u_xlat14)).x;\n    u_xlat16_5.xyz = vec3(u_xlat14) * _LightColor0.xyz;\n   
            u_xlat0.xzw = u_xlat0.xxx * u_xlat16_5.xyz;\n    u_xlat16_26 = (-u_xlat22)
            + 1.0;\n    u_xlat16_6.x = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_6.x
            = u_xlat16_6.x * u_xlat16_6.x;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_6.x;\n   
            u_xlat16_6.xyz = (-u_xlat16_11.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_11.xyz
            = u_xlat16_6.xyz * vec3(u_xlat16_26) + u_xlat16_11.xyz;\n    u_xlat0.xzw
            = u_xlat0.xzw * u_xlat16_11.xyz;\n    u_xlat16_11.x = u_xlat16_4.x *
            u_xlat16_4.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_11.x;\n    u_xlat16_11.x = u_xlat22
            + u_xlat22;\n    u_xlat16_11.x = u_xlat22 * u_xlat16_11.x;\n    u_xlat16_11.x
            = u_xlat16_11.x * u_xlat7 + -0.5;\n    u_xlat16_4.x = u_xlat16_11.x *
            u_xlat16_4.x + 1.0;\n    u_xlat16_18 = (-u_xlat1.x) + 1.0;\n    u_xlat16_25
            = u_xlat16_18 * u_xlat16_18;\n    u_xlat16_25 = u_xlat16_25 * u_xlat16_25;\n   
            u_xlat16_18 = u_xlat16_18 * u_xlat16_25;\n    u_xlat16_11.x = u_xlat16_11.x
            * u_xlat16_18 + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_11.x;\n   
            u_xlat7 = u_xlat1.x * u_xlat16_4.x;\n    u_xlat16_4.xyz = vec3(u_xlat7)
            * u_xlat16_5.xyz;\n    u_xlat16_25 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_5.xyz = u_xlat2.xyz * vec3(u_xlat16_25);\n    u_xlat0.xyz =
            u_xlat16_5.xyz * u_xlat16_4.xyz + u_xlat0.xzw;\n    SV_Target0.xyz =
            u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define
            SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump
            float u_xlat16_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nvec3
            u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat9;\nfloat
            u_xlat10;\nmediump vec3 u_xlat16_13;\nfloat u_xlat16;\nfloat u_xlat17;\nmediump
            float u_xlat16_20;\nfloat u_xlat21;\nbool u_xlatb21;\nfloat u_xlat23;\nbool
            u_xlatb23;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1 = u_xlat10_0.w * _Color.w + (-_Cutoff);\n    u_xlatb21 = u_xlat16_1<0.0;\n   
            if(u_xlatb21){discard;}\n    u_xlat21 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz = vec3(u_xlat21) *
            vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat3.x = vs_TEXCOORD2.w;\n   
            u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat4.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat21) + u_xlat3.xyz;\n    u_xlat5.xyz
            = vec3(u_xlat21) * vs_TEXCOORD1.xyz;\n    u_xlat21 = dot(u_xlat2.xyz,
            (-u_xlat5.xyz));\n    u_xlat23 = dot(u_xlat4.xyz, u_xlat4.xyz);\n   
            u_xlat23 = max(u_xlat23, 0.00100000005);\n    u_xlat23 = inversesqrt(u_xlat23);\n   
            u_xlat4.xyz = vec3(u_xlat23) * u_xlat4.xyz;\n    u_xlat23 = dot(u_xlat2.xyz,
            u_xlat4.xyz);\n    u_xlat23 = clamp(u_xlat23, 0.0, 1.0);\n    u_xlat2.x
            = dot(u_xlat2.xyz, u_xlat3.xyz);\n    u_xlat2.x = clamp(u_xlat2.x, 0.0,
            1.0);\n    u_xlat9 = dot(u_xlat3.xyz, u_xlat4.xyz);\n    u_xlat9 = clamp(u_xlat9,
            0.0, 1.0);\n    u_xlat16 = (-_Glossiness) + 1.0;\n    u_xlat3.x = u_xlat16
            * u_xlat16;\n    u_xlat3.x = max(u_xlat3.x, 0.00200000009);\n    u_xlat10
            = u_xlat3.x * u_xlat3.x;\n    u_xlat17 = u_xlat23 * u_xlat10 + (-u_xlat23);\n   
            u_xlat23 = u_xlat17 * u_xlat23 + 1.0;\n    u_xlat23 = u_xlat23 * u_xlat23
            + 1.00000001e-07;\n    u_xlat10 = u_xlat10 * 0.318309873;\n    u_xlat23
            = u_xlat10 / u_xlat23;\n    u_xlat10 = (-u_xlat3.x) + 1.0;\n    u_xlat17
            = abs(u_xlat21) * u_xlat10 + u_xlat3.x;\n    u_xlat3.x = u_xlat2.x *
            u_xlat10 + u_xlat3.x;\n    u_xlat3.x = abs(u_xlat21) * u_xlat3.x;\n   
            u_xlat16_1 = -abs(u_xlat21) + 1.0;\n    u_xlat21 = u_xlat2.x * u_xlat17
            + u_xlat3.x;\n    u_xlat21 = u_xlat21 + 9.99999975e-06;\n    u_xlat21
            = 0.5 / u_xlat21;\n    u_xlat21 = u_xlat23 * u_xlat21;\n    u_xlat21
            = u_xlat21 * 3.14159274;\n    u_xlat21 = max(u_xlat21, 9.99999975e-05);\n   
            u_xlat21 = sqrt(u_xlat21);\n    u_xlat21 = u_xlat2.x * u_xlat21;\n   
            u_xlat16_8.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_8.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_6.x = dot(u_xlat16_8.xyz, u_xlat16_8.xyz);\n   
            u_xlatb23 = u_xlat16_6.x!=0.0;\n    u_xlat23 = u_xlatb23 ? 1.0 : float(0.0);\n   
            u_xlat21 = u_xlat21 * u_xlat23;\n    u_xlat3.xyz = vec3(u_xlat21) * _LightColor0.xyz;\n   
            u_xlat16_6.x = (-u_xlat9) + 1.0;\n    u_xlat16_13.x = u_xlat16_6.x *
            u_xlat16_6.x;\n    u_xlat16_13.x = u_xlat16_13.x * u_xlat16_13.x;\n   
            u_xlat16_6.x = u_xlat16_6.x * u_xlat16_13.x;\n    u_xlat16_13.xyz = (-u_xlat16_8.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_8.xyz = u_xlat16_13.xyz * u_xlat16_6.xxx
            + u_xlat16_8.xyz;\n    u_xlat3.xyz = u_xlat16_8.xyz * u_xlat3.xyz;\n   
            u_xlat16_8.x = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_8.xyz
            = u_xlat0.xyz * u_xlat16_8.xxx;\n    u_xlat16_6.x = u_xlat16_1 * u_xlat16_1;\n   
            u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;\n    u_xlat16_1 = u_xlat16_1
            * u_xlat16_6.x;\n    u_xlat16_6.x = u_xlat9 + u_xlat9;\n    u_xlat16_6.x
            = u_xlat9 * u_xlat16_6.x;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat16
            + -0.5;\n    u_xlat16_1 = u_xlat16_6.x * u_xlat16_1 + 1.0;\n    u_xlat16_13.x
            = (-u_xlat2.x) + 1.0;\n    u_xlat16_20 = u_xlat16_13.x * u_xlat16_13.x;\n   
            u_xlat16_20 = u_xlat16_20 * u_xlat16_20;\n    u_xlat16_13.x = u_xlat16_13.x
            * u_xlat16_20;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_13.x + 1.0;\n   
            u_xlat16_1 = u_xlat16_1 * u_xlat16_6.x;\n    u_xlat0.x = u_xlat2.x *
            u_xlat16_1;\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.xyz = u_xlat16_8.xyz * u_xlat16_6.xyz + u_xlat3.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nUNITY_LOCATION(0) uniform
            mediump sampler2D _MainTex;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump float u_xlat16_1;\nvec3 u_xlat2;\nvec3
            u_xlat3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_8;\nfloat u_xlat9;\nfloat u_xlat10;\nmediump vec3 u_xlat16_13;\nfloat
            u_xlat16;\nfloat u_xlat17;\nmediump float u_xlat16_20;\nfloat u_xlat21;\nbool
            u_xlatb21;\nfloat u_xlat23;\nbool u_xlatb23;\nvoid main()\n{\n    u_xlat16_0
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb21 = u_xlat16_1<0.0;\n    if(u_xlatb21){discard;}\n   
            u_xlat21 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat3.x
            = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n   
            u_xlat4.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat21) + u_xlat3.xyz;\n   
            u_xlat5.xyz = vec3(u_xlat21) * vs_TEXCOORD1.xyz;\n    u_xlat21 = dot(u_xlat2.xyz,
            (-u_xlat5.xyz));\n    u_xlat23 = dot(u_xlat4.xyz, u_xlat4.xyz);\n   
            u_xlat23 = max(u_xlat23, 0.00100000005);\n    u_xlat23 = inversesqrt(u_xlat23);\n   
            u_xlat4.xyz = vec3(u_xlat23) * u_xlat4.xyz;\n    u_xlat23 = dot(u_xlat2.xyz,
            u_xlat4.xyz);\n    u_xlat23 = clamp(u_xlat23, 0.0, 1.0);\n    u_xlat2.x
            = dot(u_xlat2.xyz, u_xlat3.xyz);\n    u_xlat2.x = clamp(u_xlat2.x, 0.0,
            1.0);\n    u_xlat9 = dot(u_xlat3.xyz, u_xlat4.xyz);\n    u_xlat9 = clamp(u_xlat9,
            0.0, 1.0);\n    u_xlat16 = (-_Glossiness) + 1.0;\n    u_xlat3.x = u_xlat16
            * u_xlat16;\n    u_xlat3.x = max(u_xlat3.x, 0.00200000009);\n    u_xlat10
            = u_xlat3.x * u_xlat3.x;\n    u_xlat17 = u_xlat23 * u_xlat10 + (-u_xlat23);\n   
            u_xlat23 = u_xlat17 * u_xlat23 + 1.0;\n    u_xlat23 = u_xlat23 * u_xlat23
            + 1.00000001e-07;\n    u_xlat10 = u_xlat10 * 0.318309873;\n    u_xlat23
            = u_xlat10 / u_xlat23;\n    u_xlat10 = (-u_xlat3.x) + 1.0;\n    u_xlat17
            = abs(u_xlat21) * u_xlat10 + u_xlat3.x;\n    u_xlat3.x = u_xlat2.x *
            u_xlat10 + u_xlat3.x;\n    u_xlat3.x = abs(u_xlat21) * u_xlat3.x;\n   
            u_xlat16_1 = -abs(u_xlat21) + 1.0;\n    u_xlat21 = u_xlat2.x * u_xlat17
            + u_xlat3.x;\n    u_xlat21 = u_xlat21 + 9.99999975e-06;\n    u_xlat21
            = 0.5 / u_xlat21;\n    u_xlat21 = u_xlat23 * u_xlat21;\n    u_xlat21
            = u_xlat21 * 3.14159274;\n    u_xlat21 = max(u_xlat21, 9.99999975e-05);\n   
            u_xlat21 = sqrt(u_xlat21);\n    u_xlat21 = u_xlat2.x * u_xlat21;\n   
            u_xlat16_8.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_8.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_6.x = dot(u_xlat16_8.xyz, u_xlat16_8.xyz);\n   
            u_xlatb23 = u_xlat16_6.x!=0.0;\n    u_xlat23 = u_xlatb23 ? 1.0 : float(0.0);\n   
            u_xlat21 = u_xlat21 * u_xlat23;\n    u_xlat3.xyz = vec3(u_xlat21) * _LightColor0.xyz;\n   
            u_xlat16_6.x = (-u_xlat9) + 1.0;\n    u_xlat16_13.x = u_xlat16_6.x *
            u_xlat16_6.x;\n    u_xlat16_13.x = u_xlat16_13.x * u_xlat16_13.x;\n   
            u_xlat16_6.x = u_xlat16_6.x * u_xlat16_13.x;\n    u_xlat16_13.xyz = (-u_xlat16_8.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_8.xyz = u_xlat16_13.xyz * u_xlat16_6.xxx
            + u_xlat16_8.xyz;\n    u_xlat3.xyz = u_xlat16_8.xyz * u_xlat3.xyz;\n   
            u_xlat16_8.x = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_8.xyz
            = u_xlat0.xyz * u_xlat16_8.xxx;\n    u_xlat16_6.x = u_xlat16_1 * u_xlat16_1;\n   
            u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;\n    u_xlat16_1 = u_xlat16_1
            * u_xlat16_6.x;\n    u_xlat16_6.x = u_xlat9 + u_xlat9;\n    u_xlat16_6.x
            = u_xlat9 * u_xlat16_6.x;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat16
            + -0.5;\n    u_xlat16_1 = u_xlat16_6.x * u_xlat16_1 + 1.0;\n    u_xlat16_13.x
            = (-u_xlat2.x) + 1.0;\n    u_xlat16_20 = u_xlat16_13.x * u_xlat16_13.x;\n   
            u_xlat16_20 = u_xlat16_20 * u_xlat16_20;\n    u_xlat16_13.x = u_xlat16_13.x
            * u_xlat16_20;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_13.x + 1.0;\n   
            u_xlat16_1 = u_xlat16_1 * u_xlat16_6.x;\n    u_xlat0.x = u_xlat2.x *
            u_xlat16_1;\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.xyz = u_xlat16_8.xyz * u_xlat16_6.xyz + u_xlat3.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform
            lowp sampler2D _MainTex;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp
            vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4
            vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3
            u_xlat0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat u_xlat6;\nfloat u_xlat7;\nmediump
            vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat12;\nfloat
            u_xlat13;\nmediump float u_xlat16_16;\nfloat u_xlat18;\nfloat u_xlat19;\nbool
            u_xlatb19;\nmediump float u_xlat16_22;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.x
            = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n   
            u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat18) + u_xlat1.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat18) * vs_TEXCOORD1.xyz;\n    u_xlat18 = dot(u_xlat0.xyz,
            (-u_xlat3.xyz));\n    u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat19 = max(u_xlat19, 0.00100000005);\n    u_xlat19 = inversesqrt(u_xlat19);\n   
            u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;\n    u_xlat19 = dot(u_xlat0.xyz,
            u_xlat2.xyz);\n    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);\n    u_xlat0.x
            = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat6 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat6 = clamp(u_xlat6,
            0.0, 1.0);\n    u_xlat12 = (-_Glossiness) + 1.0;\n    u_xlat1.x = u_xlat12
            * u_xlat12;\n    u_xlat1.x = max(u_xlat1.x, 0.00200000009);\n    u_xlat7
            = u_xlat1.x * u_xlat1.x;\n    u_xlat13 = u_xlat19 * u_xlat7 + (-u_xlat19);\n   
            u_xlat13 = u_xlat13 * u_xlat19 + 1.0;\n    u_xlat13 = u_xlat13 * u_xlat13
            + 1.00000001e-07;\n    u_xlat7 = u_xlat7 * 0.318309873;\n    u_xlat7
            = u_xlat7 / u_xlat13;\n    u_xlat13 = (-u_xlat1.x) + 1.0;\n    u_xlat19
            = abs(u_xlat18) * u_xlat13 + u_xlat1.x;\n    u_xlat1.x = u_xlat0.x *
            u_xlat13 + u_xlat1.x;\n    u_xlat1.x = abs(u_xlat18) * u_xlat1.x;\n   
            u_xlat16_4.x = -abs(u_xlat18) + 1.0;\n    u_xlat18 = u_xlat0.x * u_xlat19
            + u_xlat1.x;\n    u_xlat18 = u_xlat18 + 9.99999975e-06;\n    u_xlat18
            = 0.5 / u_xlat18;\n    u_xlat18 = u_xlat7 * u_xlat18;\n    u_xlat18 =
            u_xlat18 * 3.14159274;\n    u_xlat18 = max(u_xlat18, 9.99999975e-05);\n   
            u_xlat18 = sqrt(u_xlat18);\n    u_xlat18 = u_xlat0.x * u_xlat18;\n   
            u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_10.xyz
            = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_10.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_10.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n   
            u_xlatb19 = u_xlat16_5.x!=0.0;\n    u_xlat19 = u_xlatb19 ? 1.0 : float(0.0);\n   
            u_xlat18 = u_xlat18 * u_xlat19;\n    u_xlat2.xyz = vec3(u_xlat18) * _LightColor0.xyz;\n   
            u_xlat16_5.x = (-u_xlat6) + 1.0;\n    u_xlat16_11.x = u_xlat16_5.x *
            u_xlat16_5.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_11.xyz * u_xlat16_5.xxx
            + u_xlat16_10.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_10.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_10.x = u_xlat16_10.x
            * u_xlat16_10.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_10.x;\n   
            u_xlat16_10.x = u_xlat6 + u_xlat6;\n    u_xlat16_10.x = u_xlat6 * u_xlat16_10.x;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat12 + -0.5;\n    u_xlat16_4.x =
            u_xlat16_10.x * u_xlat16_4.x + 1.0;\n    u_xlat16_16 = (-u_xlat0.x) +
            1.0;\n    u_xlat16_22 = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_22 =
            u_xlat16_22 * u_xlat16_22;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_22;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat16_16 + 1.0;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_10.x;\n    u_xlat0.x = u_xlat0.x * u_xlat16_4.x;\n   
            u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_22 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz = u_xlat1.xyz * vec3(u_xlat16_22);\n   
            u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_4.xyz + u_xlat2.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec3 u_xlat1;\nmediump
            vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nfloat u_xlat6;\nfloat u_xlat7;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat12;\nfloat u_xlat13;\nmediump float u_xlat16_16;\nfloat
            u_xlat18;\nfloat u_xlat19;\nbool u_xlatb19;\nmediump float u_xlat16_22;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.x = vs_TEXCOORD2.w;\n   
            u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat2.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat18) + u_xlat1.xyz;\n    u_xlat3.xyz
            = vec3(u_xlat18) * vs_TEXCOORD1.xyz;\n    u_xlat18 = dot(u_xlat0.xyz,
            (-u_xlat3.xyz));\n    u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat19 = max(u_xlat19, 0.00100000005);\n    u_xlat19 = inversesqrt(u_xlat19);\n   
            u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;\n    u_xlat19 = dot(u_xlat0.xyz,
            u_xlat2.xyz);\n    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);\n    u_xlat0.x
            = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat6 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat6 = clamp(u_xlat6,
            0.0, 1.0);\n    u_xlat12 = (-_Glossiness) + 1.0;\n    u_xlat1.x = u_xlat12
            * u_xlat12;\n    u_xlat1.x = max(u_xlat1.x, 0.00200000009);\n    u_xlat7
            = u_xlat1.x * u_xlat1.x;\n    u_xlat13 = u_xlat19 * u_xlat7 + (-u_xlat19);\n   
            u_xlat13 = u_xlat13 * u_xlat19 + 1.0;\n    u_xlat13 = u_xlat13 * u_xlat13
            + 1.00000001e-07;\n    u_xlat7 = u_xlat7 * 0.318309873;\n    u_xlat7
            = u_xlat7 / u_xlat13;\n    u_xlat13 = (-u_xlat1.x) + 1.0;\n    u_xlat19
            = abs(u_xlat18) * u_xlat13 + u_xlat1.x;\n    u_xlat1.x = u_xlat0.x *
            u_xlat13 + u_xlat1.x;\n    u_xlat1.x = abs(u_xlat18) * u_xlat1.x;\n   
            u_xlat16_4.x = -abs(u_xlat18) + 1.0;\n    u_xlat18 = u_xlat0.x * u_xlat19
            + u_xlat1.x;\n    u_xlat18 = u_xlat18 + 9.99999975e-06;\n    u_xlat18
            = 0.5 / u_xlat18;\n    u_xlat18 = u_xlat7 * u_xlat18;\n    u_xlat18 =
            u_xlat18 * 3.14159274;\n    u_xlat18 = max(u_xlat18, 9.99999975e-05);\n   
            u_xlat18 = sqrt(u_xlat18);\n    u_xlat18 = u_xlat0.x * u_xlat18;\n   
            u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_10.xyz
            = _Color.xyz * u_xlat16_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_10.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_10.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n   
            u_xlatb19 = u_xlat16_5.x!=0.0;\n    u_xlat19 = u_xlatb19 ? 1.0 : float(0.0);\n   
            u_xlat18 = u_xlat18 * u_xlat19;\n    u_xlat2.xyz = vec3(u_xlat18) * _LightColor0.xyz;\n   
            u_xlat16_5.x = (-u_xlat6) + 1.0;\n    u_xlat16_11.x = u_xlat16_5.x *
            u_xlat16_5.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_11.xyz * u_xlat16_5.xxx
            + u_xlat16_10.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_10.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_10.x = u_xlat16_10.x
            * u_xlat16_10.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_10.x;\n   
            u_xlat16_10.x = u_xlat6 + u_xlat6;\n    u_xlat16_10.x = u_xlat6 * u_xlat16_10.x;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat12 + -0.5;\n    u_xlat16_4.x =
            u_xlat16_10.x * u_xlat16_4.x + 1.0;\n    u_xlat16_16 = (-u_xlat0.x) +
            1.0;\n    u_xlat16_22 = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_22 =
            u_xlat16_22 * u_xlat16_22;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_22;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat16_16 + 1.0;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_10.x;\n    u_xlat0.x = u_xlat0.x * u_xlat16_4.x;\n   
            u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_22 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz = u_xlat1.xyz * vec3(u_xlat16_22);\n   
            u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_4.xyz + u_xlat2.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz
            = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat2.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat2.wwwx;\n    vs_TEXCOORD3 = u_xlat2.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat2.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform
            lowp sampler2D _MainTex;\nuniform highp sampler2D _LightTexture0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3
            u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nvec3 u_xlat2;\nbool
            u_xlatb2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nmediump vec3
            u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat10;\nvec3 u_xlat11;\nmediump float u_xlat16_15;\nfloat u_xlat18;\nfloat
            u_xlat19;\nfloat u_xlat24;\nbool u_xlatb24;\nfloat u_xlat26;\nmediump
            float u_xlat16_30;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_0.w * _Color.w + (-_Cutoff);\n   
            u_xlatb24 = u_xlat16_1<0.0;\n    if(u_xlatb24){discard;}\n    u_xlat24
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n   
            u_xlat2.xyz = vec3(u_xlat24) * vs_TEXCOORD1.xyz;\n    u_xlat3.x = vs_TEXCOORD2.w;\n   
            u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat24
            = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n   
            u_xlat4.xyz = u_xlat3.xyz * vec3(u_xlat24) + (-u_xlat2.xyz);\n    u_xlat3.xyz
            = vec3(u_xlat24) * u_xlat3.xyz;\n    u_xlat24 = dot(u_xlat4.xyz, u_xlat4.xyz);\n   
            u_xlat24 = max(u_xlat24, 0.00100000005);\n    u_xlat24 = inversesqrt(u_xlat24);\n   
            u_xlat4.xyz = vec3(u_xlat24) * u_xlat4.xyz;\n    u_xlat24 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat5.xyz
            = vec3(u_xlat24) * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot(u_xlat5.xyz,
            u_xlat4.xyz);\n    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat26
            = dot(u_xlat3.xyz, u_xlat4.xyz);\n    u_xlat26 = clamp(u_xlat26, 0.0,
            1.0);\n    u_xlat3.x = dot(u_xlat5.xyz, u_xlat3.xyz);\n    u_xlat3.x
            = clamp(u_xlat3.x, 0.0, 1.0);\n    u_xlat2.x = dot(u_xlat5.xyz, (-u_xlat2.xyz));\n   
            u_xlat10 = (-_Glossiness) + 1.0;\n    u_xlat18 = u_xlat10 * u_xlat10;\n   
            u_xlat18 = max(u_xlat18, 0.00200000009);\n    u_xlat11.x = u_xlat18 *
            u_xlat18;\n    u_xlat19 = u_xlat24 * u_xlat11.x + (-u_xlat24);\n    u_xlat24
            = u_xlat19 * u_xlat24 + 1.0;\n    u_xlat24 = u_xlat24 * u_xlat24 + 1.00000001e-07;\n   
            u_xlat11.x = u_xlat11.x * 0.318309873;\n    u_xlat24 = u_xlat11.x / u_xlat24;\n   
            u_xlat11.x = (-u_xlat18) + 1.0;\n    u_xlat19 = abs(u_xlat2.x) * u_xlat11.x
            + u_xlat18;\n    u_xlat18 = u_xlat3.x * u_xlat11.x + u_xlat18;\n    u_xlat18
            = u_xlat18 * abs(u_xlat2.x);\n    u_xlat16_1 = -abs(u_xlat2.x) + 1.0;\n   
            u_xlat2.x = u_xlat3.x * u_xlat19 + u_xlat18;\n    u_xlat2.x = u_xlat2.x
            + 9.99999975e-06;\n    u_xlat2.x = 0.5 / u_xlat2.x;\n    u_xlat24 = u_xlat24
            * u_xlat2.x;\n    u_xlat24 = u_xlat24 * 3.14159274;\n    u_xlat24 = max(u_xlat24,
            9.99999975e-05);\n    u_xlat24 = sqrt(u_xlat24);\n    u_xlat24 = u_xlat3.x
            * u_xlat24;\n    u_xlat16_9.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_9.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_9.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_6.x = dot(u_xlat16_9.xyz,
            u_xlat16_9.xyz);\n    u_xlatb2 = u_xlat16_6.x!=0.0;\n    u_xlat2.x =
            u_xlatb2 ? 1.0 : float(0.0);\n    u_xlat24 = u_xlat24 * u_xlat2.x;\n   
            u_xlat11.xyz = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat11.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx
            + u_xlat11.xyz;\n    u_xlat11.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat11.xyz;\n    u_xlat11.xyz = u_xlat11.xyz +
            hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n    u_xlat2.x = dot(u_xlat11.xyz,
            u_xlat11.xyz);\n    u_xlat2.x = texture2D(_LightTexture0, u_xlat2.xx).x;\n   
            u_xlat16_6.xyz = u_xlat2.xxx * _LightColor0.xyz;\n    u_xlat11.xyz =
            vec3(u_xlat24) * u_xlat16_6.xyz;\n    u_xlat16_30 = (-u_xlat26) + 1.0;\n   
            u_xlat16_7.x = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_7.x = u_xlat16_7.x
            * u_xlat16_7.x;\n    u_xlat16_30 = u_xlat16_30 * u_xlat16_7.x;\n    u_xlat16_7.xyz
            = (-u_xlat16_9.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_9.xyz = u_xlat16_7.xyz
            * vec3(u_xlat16_30) + u_xlat16_9.xyz;\n    u_xlat11.xyz = u_xlat16_9.xyz
            * u_xlat11.xyz;\n    u_xlat16_9.x = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_9.xyz = u_xlat0.xyz * u_xlat16_9.xxx;\n    u_xlat16_30 = u_xlat16_1
            * u_xlat16_1;\n    u_xlat16_30 = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_1
            = u_xlat16_1 * u_xlat16_30;\n    u_xlat16_30 = u_xlat26 + u_xlat26;\n   
            u_xlat16_30 = u_xlat26 * u_xlat16_30;\n    u_xlat16_30 = u_xlat16_30
            * u_xlat10 + -0.5;\n    u_xlat16_1 = u_xlat16_30 * u_xlat16_1 + 1.0;\n   
            u_xlat16_7.x = (-u_xlat3.x) + 1.0;\n    u_xlat16_15 = u_xlat16_7.x *
            u_xlat16_7.x;\n    u_xlat16_15 = u_xlat16_15 * u_xlat16_15;\n    u_xlat16_7.x
            = u_xlat16_7.x * u_xlat16_15;\n    u_xlat16_30 = u_xlat16_30 * u_xlat16_7.x
            + 1.0;\n    u_xlat16_1 = u_xlat16_1 * u_xlat16_30;\n    u_xlat0.x = u_xlat3.x
            * u_xlat16_1;\n    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat0.xyz = u_xlat16_9.xyz * u_xlat16_6.xyz + u_xlat11.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nin highp vec4 in_POSITION0;\nin
            mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2
            in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4
            vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec3 vs_TEXCOORD6;\nout
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz
            = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat2.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat2.wwwx;\n    vs_TEXCOORD3 = u_xlat2.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat2.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform highp
            sampler2D _LightTexture0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin
            highp vec4 vs_TEXCOORD4;\nin highp vec3 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            float u_xlat16_1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3 u_xlat3;\nvec3
            u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_9;\nfloat u_xlat10;\nvec3 u_xlat11;\nmediump float u_xlat16_15;\nfloat
            u_xlat18;\nfloat u_xlat19;\nfloat u_xlat24;\nbool u_xlatb24;\nfloat u_xlat26;\nmediump
            float u_xlat16_30;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat16_0.w * _Color.w + (-_Cutoff);\n   
            u_xlatb24 = u_xlat16_1<0.0;\n    if(u_xlatb24){discard;}\n    u_xlat24
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n   
            u_xlat2.xyz = vec3(u_xlat24) * vs_TEXCOORD1.xyz;\n    u_xlat3.x = vs_TEXCOORD2.w;\n   
            u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat24
            = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n   
            u_xlat4.xyz = u_xlat3.xyz * vec3(u_xlat24) + (-u_xlat2.xyz);\n    u_xlat3.xyz
            = vec3(u_xlat24) * u_xlat3.xyz;\n    u_xlat24 = dot(u_xlat4.xyz, u_xlat4.xyz);\n   
            u_xlat24 = max(u_xlat24, 0.00100000005);\n    u_xlat24 = inversesqrt(u_xlat24);\n   
            u_xlat4.xyz = vec3(u_xlat24) * u_xlat4.xyz;\n    u_xlat24 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat5.xyz
            = vec3(u_xlat24) * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot(u_xlat5.xyz,
            u_xlat4.xyz);\n    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat26
            = dot(u_xlat3.xyz, u_xlat4.xyz);\n    u_xlat26 = clamp(u_xlat26, 0.0,
            1.0);\n    u_xlat3.x = dot(u_xlat5.xyz, u_xlat3.xyz);\n    u_xlat3.x
            = clamp(u_xlat3.x, 0.0, 1.0);\n    u_xlat2.x = dot(u_xlat5.xyz, (-u_xlat2.xyz));\n   
            u_xlat10 = (-_Glossiness) + 1.0;\n    u_xlat18 = u_xlat10 * u_xlat10;\n   
            u_xlat18 = max(u_xlat18, 0.00200000009);\n    u_xlat11.x = u_xlat18 *
            u_xlat18;\n    u_xlat19 = u_xlat24 * u_xlat11.x + (-u_xlat24);\n    u_xlat24
            = u_xlat19 * u_xlat24 + 1.0;\n    u_xlat24 = u_xlat24 * u_xlat24 + 1.00000001e-07;\n   
            u_xlat11.x = u_xlat11.x * 0.318309873;\n    u_xlat24 = u_xlat11.x / u_xlat24;\n   
            u_xlat11.x = (-u_xlat18) + 1.0;\n    u_xlat19 = abs(u_xlat2.x) * u_xlat11.x
            + u_xlat18;\n    u_xlat18 = u_xlat3.x * u_xlat11.x + u_xlat18;\n    u_xlat18
            = u_xlat18 * abs(u_xlat2.x);\n    u_xlat16_1 = -abs(u_xlat2.x) + 1.0;\n   
            u_xlat2.x = u_xlat3.x * u_xlat19 + u_xlat18;\n    u_xlat2.x = u_xlat2.x
            + 9.99999975e-06;\n    u_xlat2.x = 0.5 / u_xlat2.x;\n    u_xlat24 = u_xlat24
            * u_xlat2.x;\n    u_xlat24 = u_xlat24 * 3.14159274;\n    u_xlat24 = max(u_xlat24,
            9.99999975e-05);\n    u_xlat24 = sqrt(u_xlat24);\n    u_xlat24 = u_xlat3.x
            * u_xlat24;\n    u_xlat16_9.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_9.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_9.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_6.x = dot(u_xlat16_9.xyz,
            u_xlat16_9.xyz);\n    u_xlatb2 = u_xlat16_6.x!=0.0;\n    u_xlat2.x =
            u_xlatb2 ? 1.0 : float(0.0);\n    u_xlat24 = u_xlat24 * u_xlat2.x;\n   
            u_xlat11.xyz = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat11.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx
            + u_xlat11.xyz;\n    u_xlat11.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat11.xyz;\n    u_xlat11.xyz = u_xlat11.xyz +
            hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n    u_xlat2.x = dot(u_xlat11.xyz,
            u_xlat11.xyz);\n    u_xlat2.x = texture(_LightTexture0, u_xlat2.xx).x;\n   
            u_xlat16_6.xyz = u_xlat2.xxx * _LightColor0.xyz;\n    u_xlat11.xyz =
            vec3(u_xlat24) * u_xlat16_6.xyz;\n    u_xlat16_30 = (-u_xlat26) + 1.0;\n   
            u_xlat16_7.x = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_7.x = u_xlat16_7.x
            * u_xlat16_7.x;\n    u_xlat16_30 = u_xlat16_30 * u_xlat16_7.x;\n    u_xlat16_7.xyz
            = (-u_xlat16_9.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_9.xyz = u_xlat16_7.xyz
            * vec3(u_xlat16_30) + u_xlat16_9.xyz;\n    u_xlat11.xyz = u_xlat16_9.xyz
            * u_xlat11.xyz;\n    u_xlat16_9.x = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_9.xyz = u_xlat0.xyz * u_xlat16_9.xxx;\n    u_xlat16_30 = u_xlat16_1
            * u_xlat16_1;\n    u_xlat16_30 = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_1
            = u_xlat16_1 * u_xlat16_30;\n    u_xlat16_30 = u_xlat26 + u_xlat26;\n   
            u_xlat16_30 = u_xlat26 * u_xlat16_30;\n    u_xlat16_30 = u_xlat16_30
            * u_xlat10 + -0.5;\n    u_xlat16_1 = u_xlat16_30 * u_xlat16_1 + 1.0;\n   
            u_xlat16_7.x = (-u_xlat3.x) + 1.0;\n    u_xlat16_15 = u_xlat16_7.x *
            u_xlat16_7.x;\n    u_xlat16_15 = u_xlat16_15 * u_xlat16_15;\n    u_xlat16_7.x
            = u_xlat16_7.x * u_xlat16_15;\n    u_xlat16_30 = u_xlat16_30 * u_xlat16_7.x
            + 1.0;\n    u_xlat16_1 = u_xlat16_1 * u_xlat16_30;\n    u_xlat0.x = u_xlat3.x
            * u_xlat16_1;\n    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat0.xyz = u_xlat16_9.xyz * u_xlat16_6.xyz + u_xlat11.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz
            = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat2.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat2.wwwx;\n    vs_TEXCOORD3 = u_xlat2.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat2.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform
            highp sampler2D _LightTexture0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3
            vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump float u_xlat16_8;\nmediump float
            u_xlat16_13;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n   
            u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat1.x = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z
            = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.xyz = u_xlat1.xyz * vec3(u_xlat15)
            + (-u_xlat0.xyz);\n    u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;\n   
            u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat15 = max(u_xlat15,
            0.00100000005);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.xyz
            = vec3(u_xlat15) * u_xlat2.xyz;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n   
            u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat16_3.x = u_xlat15 +
            u_xlat15;\n    u_xlat16_3.x = u_xlat15 * u_xlat16_3.x;\n    u_xlat15
            = (-_Glossiness) + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat15 +
            -0.5;\n    u_xlat15 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat15
            = inversesqrt(u_xlat15);\n    u_xlat2.xyz = vec3(u_xlat15) * vs_TEXCOORD4.xyz;\n   
            u_xlat0.x = dot(u_xlat2.xyz, (-u_xlat0.xyz));\n    u_xlat5.x = dot(u_xlat2.xyz,
            u_xlat1.xyz);\n    u_xlat5.x = clamp(u_xlat5.x, 0.0, 1.0);\n    u_xlat16_8
            = -abs(u_xlat0.x) + 1.0;\n    u_xlat16_13 = u_xlat16_8 * u_xlat16_8;\n   
            u_xlat16_13 = u_xlat16_13 * u_xlat16_13;\n    u_xlat16_8 = u_xlat16_8
            * u_xlat16_13;\n    u_xlat16_8 = u_xlat16_3.x * u_xlat16_8 + 1.0;\n   
            u_xlat16_13 = (-u_xlat5.x) + 1.0;\n    u_xlat16_18 = u_xlat16_13 * u_xlat16_13;\n   
            u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_13
            * u_xlat16_18;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat16_13 + 1.0;\n   
            u_xlat16_3.x = u_xlat16_8 * u_xlat16_3.x;\n    u_xlat0.x = u_xlat5.x
            * u_xlat16_3.x;\n    u_xlat5.xyz = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx
            + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat5.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat5.x = texture2D(_LightTexture0,
            u_xlat5.xx).x;\n    u_xlat16_3.xyz = u_xlat5.xxx * _LightColor0.xyz;\n   
            u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat10_0.xyz =
            texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz
            * _Color.xyz;\n    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_4.xyz = u_xlat0.xyz * vec3(u_xlat16_18);\n    SV_Target0.xyz
            = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nin highp vec4 in_POSITION0;\nin
            mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2
            in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4
            vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec3 vs_TEXCOORD6;\nout
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz
            = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat2.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat2.wwwx;\n    vs_TEXCOORD3 = u_xlat2.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat2.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform highp
            sampler2D _LightTexture0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin
            highp vec4 vs_TEXCOORD4;\nin highp vec3 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nmediump float u_xlat16_8;\nmediump float u_xlat16_13;\nfloat
            u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat1.x = vs_TEXCOORD2.w;\n   
            u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat15
            = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat2.xyz = u_xlat1.xyz * vec3(u_xlat15) + (-u_xlat0.xyz);\n    u_xlat1.xyz
            = vec3(u_xlat15) * u_xlat1.xyz;\n    u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat15 = max(u_xlat15, 0.00100000005);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat2.xyz = vec3(u_xlat15) * u_xlat2.xyz;\n    u_xlat15 = dot(u_xlat1.xyz,
            u_xlat2.xyz);\n    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat16_3.x
            = u_xlat15 + u_xlat15;\n    u_xlat16_3.x = u_xlat15 * u_xlat16_3.x;\n   
            u_xlat15 = (-_Glossiness) + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat15
            + -0.5;\n    u_xlat15 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.xyz = vec3(u_xlat15) *
            vs_TEXCOORD4.xyz;\n    u_xlat0.x = dot(u_xlat2.xyz, (-u_xlat0.xyz));\n   
            u_xlat5.x = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat5.x = clamp(u_xlat5.x,
            0.0, 1.0);\n    u_xlat16_8 = -abs(u_xlat0.x) + 1.0;\n    u_xlat16_13
            = u_xlat16_8 * u_xlat16_8;\n    u_xlat16_13 = u_xlat16_13 * u_xlat16_13;\n   
            u_xlat16_8 = u_xlat16_8 * u_xlat16_13;\n    u_xlat16_8 = u_xlat16_3.x
            * u_xlat16_8 + 1.0;\n    u_xlat16_13 = (-u_xlat5.x) + 1.0;\n    u_xlat16_18
            = u_xlat16_13 * u_xlat16_13;\n    u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n   
            u_xlat16_13 = u_xlat16_13 * u_xlat16_18;\n    u_xlat16_3.x = u_xlat16_3.x
            * u_xlat16_13 + 1.0;\n    u_xlat16_3.x = u_xlat16_8 * u_xlat16_3.x;\n   
            u_xlat0.x = u_xlat5.x * u_xlat16_3.x;\n    u_xlat5.xyz = vs_TEXCOORD5.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * vs_TEXCOORD5.xxx + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat5.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat5.x = texture(_LightTexture0,
            u_xlat5.xx).x;\n    u_xlat16_3.xyz = u_xlat5.xxx * _LightColor0.xyz;\n   
            u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_0.xyz =
            texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz
            * _Color.xyz;\n    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_4.xyz = u_xlat0.xyz * vec3(u_xlat16_18);\n    SV_Target0.xyz
            = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define
            SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump
            vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nmediump float u_xlat16_9;\nmediump float u_xlat16_14;\nfloat
            u_xlat15;\nbool u_xlatb15;\nmediump float u_xlat16_16;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x
            = u_xlat10_0.w * _Color.w + (-_Cutoff);\n    u_xlat0.xyz = u_xlat10_0.xyz
            * _Color.xyz;\n    u_xlatb15 = u_xlat16_1.x<0.0;\n    if(u_xlatb15){discard;}\n   
            u_xlat16_1.x = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_1.xyz
            = u_xlat0.xyz * u_xlat16_1.xxx;\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.x
            = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n   
            u_xlat5.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat3.xyz
            = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n    u_xlat0.x = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_16
            = u_xlat0.x + u_xlat0.x;\n    u_xlat16_16 = u_xlat0.x * u_xlat16_16;\n   
            u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat16_16 = u_xlat16_16 * u_xlat0.x
            + -0.5;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat15 = dot(u_xlat0.xyz, u_xlat2.xyz);\n   
            u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            (-u_xlat3.xyz));\n    u_xlat16_4.x = -abs(u_xlat0.x) + 1.0;\n    u_xlat16_9
            = (-u_xlat15) + 1.0;\n    u_xlat16_14 = u_xlat16_9 * u_xlat16_9;\n   
            u_xlat16_14 = u_xlat16_14 * u_xlat16_14;\n    u_xlat16_9 = u_xlat16_9
            * u_xlat16_14;\n    u_xlat16_9 = u_xlat16_16 * u_xlat16_9 + 1.0;\n   
            u_xlat16_14 = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_14 = u_xlat16_14
            * u_xlat16_14;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_14;\n    u_xlat16_16
            = u_xlat16_16 * u_xlat16_4.x + 1.0;\n    u_xlat16_16 = u_xlat16_16 *
            u_xlat16_9;\n    u_xlat0.x = u_xlat15 * u_xlat16_16;\n    u_xlat16_4.xyz
            = u_xlat0.xxx * _LightColor0.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nUNITY_LOCATION(0) uniform
            mediump sampler2D _MainTex;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump float u_xlat16_9;\nmediump
            float u_xlat16_14;\nfloat u_xlat15;\nbool u_xlatb15;\nmediump float u_xlat16_16;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.x = u_xlat16_0.w * _Color.w + (-_Cutoff);\n    u_xlat0.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlatb15 = u_xlat16_1.x<0.0;\n   
            if(u_xlatb15){discard;}\n    u_xlat16_1.x = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_1.xyz = u_xlat0.xyz * u_xlat16_1.xxx;\n   
            u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y
            = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n    u_xlat5.xyz =
            (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat0.xxx
            * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n    u_xlat0.x = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_16
            = u_xlat0.x + u_xlat0.x;\n    u_xlat16_16 = u_xlat0.x * u_xlat16_16;\n   
            u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat16_16 = u_xlat16_16 * u_xlat0.x
            + -0.5;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat15 = dot(u_xlat0.xyz, u_xlat2.xyz);\n   
            u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            (-u_xlat3.xyz));\n    u_xlat16_4.x = -abs(u_xlat0.x) + 1.0;\n    u_xlat16_9
            = (-u_xlat15) + 1.0;\n    u_xlat16_14 = u_xlat16_9 * u_xlat16_9;\n   
            u_xlat16_14 = u_xlat16_14 * u_xlat16_14;\n    u_xlat16_9 = u_xlat16_9
            * u_xlat16_14;\n    u_xlat16_9 = u_xlat16_16 * u_xlat16_9 + 1.0;\n   
            u_xlat16_14 = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_14 = u_xlat16_14
            * u_xlat16_14;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_14;\n    u_xlat16_16
            = u_xlat16_16 * u_xlat16_4.x + 1.0;\n    u_xlat16_16 = u_xlat16_16 *
            u_xlat16_9;\n    u_xlat0.x = u_xlat15 * u_xlat16_16;\n    u_xlat16_4.xyz
            = u_xlat0.xxx * _LightColor0.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform
            lowp sampler2D _MainTex;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp
            vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4
            vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3
            u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump float
            u_xlat16_8;\nmediump float u_xlat16_13;\nfloat u_xlat15;\nmediump float
            u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat1.x = vs_TEXCOORD2.w;\n   
            u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat5.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat2.xyz =
            u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n   
            u_xlat0.x = max(u_xlat0.x, 0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat5.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz,
            u_xlat0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3.x
            = u_xlat0.x + u_xlat0.x;\n    u_xlat16_3.x = u_xlat0.x * u_xlat16_3.x;\n   
            u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x *
            u_xlat0.x + -0.5;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat15 = dot(u_xlat0.xyz, u_xlat1.xyz);\n   
            u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            (-u_xlat2.xyz));\n    u_xlat16_8 = -abs(u_xlat0.x) + 1.0;\n    u_xlat16_13
            = (-u_xlat15) + 1.0;\n    u_xlat16_18 = u_xlat16_13 * u_xlat16_13;\n   
            u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_13
            * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_3.x * u_xlat16_13 + 1.0;\n   
            u_xlat16_18 = u_xlat16_8 * u_xlat16_8;\n    u_xlat16_18 = u_xlat16_18
            * u_xlat16_18;\n    u_xlat16_8 = u_xlat16_8 * u_xlat16_18;\n    u_xlat16_3.x
            = u_xlat16_3.x * u_xlat16_8 + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x *
            u_xlat16_13;\n    u_xlat0.x = u_xlat15 * u_xlat16_3.x;\n    u_xlat16_3.xyz
            = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz
            = u_xlat0.xyz * vec3(u_xlat16_18);\n    SV_Target0.xyz = u_xlat16_3.xyz
            * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nmediump float u_xlat16_8;\nmediump float u_xlat16_13;\nfloat
            u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat1.x = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z
            = vs_TEXCOORD4.w;\n    u_xlat5.xyz = (-vs_TEXCOORD1.xyz) * u_xlat0.xxx
            + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat0.x = max(u_xlat0.x,
            0.00100000005);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * u_xlat5.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3.x = u_xlat0.x
            + u_xlat0.x;\n    u_xlat16_3.x = u_xlat0.x * u_xlat16_3.x;\n    u_xlat0.x
            = (-_Glossiness) + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * u_xlat0.x
            + -0.5;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat15 = dot(u_xlat0.xyz, u_xlat1.xyz);\n   
            u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            (-u_xlat2.xyz));\n    u_xlat16_8 = -abs(u_xlat0.x) + 1.0;\n    u_xlat16_13
            = (-u_xlat15) + 1.0;\n    u_xlat16_18 = u_xlat16_13 * u_xlat16_13;\n   
            u_xlat16_18 = u_xlat16_18 * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_13
            * u_xlat16_18;\n    u_xlat16_13 = u_xlat16_3.x * u_xlat16_13 + 1.0;\n   
            u_xlat16_18 = u_xlat16_8 * u_xlat16_8;\n    u_xlat16_18 = u_xlat16_18
            * u_xlat16_18;\n    u_xlat16_8 = u_xlat16_8 * u_xlat16_18;\n    u_xlat16_3.x
            = u_xlat16_3.x * u_xlat16_8 + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x *
            u_xlat16_13;\n    u_xlat0.x = u_xlat15 * u_xlat16_3.x;\n    u_xlat16_3.xyz
            = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz
            = u_xlat0.xyz * vec3(u_xlat16_18);\n    SV_Target0.xyz = u_xlat16_3.xyz
            * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz
            = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat2.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat2.wwwx;\n    vs_TEXCOORD3 = u_xlat2.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat2.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform
            lowp sampler2D _MainTex;\nuniform highp sampler2D _LightTexture0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3
            u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump float u_xlat16_9;\nmediump
            float u_xlat16_14;\nfloat u_xlat15;\nbool u_xlatb15;\nmediump float u_xlat16_16;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.x = u_xlat10_0.w * _Color.w + (-_Cutoff);\n    u_xlat0.xyz
            = u_xlat10_0.xyz * _Color.xyz;\n    u_xlatb15 = u_xlat16_1.x<0.0;\n   
            if(u_xlatb15){discard;}\n    u_xlat16_1.x = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_1.xyz = u_xlat0.xyz * u_xlat16_1.xxx;\n   
            u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z
            = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat3.xyz = u_xlat2.xyz * vec3(u_xlat15)
            + (-u_xlat0.xyz);\n    u_xlat2.xyz = vec3(u_xlat15) * u_xlat2.xyz;\n   
            u_xlat15 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat15 = max(u_xlat15,
            0.00100000005);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat3.xyz
            = vec3(u_xlat15) * u_xlat3.xyz;\n    u_xlat15 = dot(u_xlat2.xyz, u_xlat3.xyz);\n   
            u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat16_16 = u_xlat15 + u_xlat15;\n   
            u_xlat16_16 = u_xlat15 * u_xlat16_16;\n    u_xlat15 = (-_Glossiness)
            + 1.0;\n    u_xlat16_16 = u_xlat16_16 * u_xlat15 + -0.5;\n    u_xlat15
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat3.xyz = vec3(u_xlat15) * vs_TEXCOORD4.xyz;\n    u_xlat0.x = dot(u_xlat3.xyz,
            (-u_xlat0.xyz));\n    u_xlat5.x = dot(u_xlat3.xyz, u_xlat2.xyz);\n   
            u_xlat5.x = clamp(u_xlat5.x, 0.0, 1.0);\n    u_xlat16_4.x = -abs(u_xlat0.x)
            + 1.0;\n    u_xlat16_9 = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_9
            = u_xlat16_9 * u_xlat16_9;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_9;\n   
            u_xlat16_4.x = u_xlat16_16 * u_xlat16_4.x + 1.0;\n    u_xlat16_9 = (-u_xlat5.x)
            + 1.0;\n    u_xlat16_14 = u_xlat16_9 * u_xlat16_9;\n    u_xlat16_14 =
            u_xlat16_14 * u_xlat16_14;\n    u_xlat16_9 = u_xlat16_9 * u_xlat16_14;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_9 + 1.0;\n    u_xlat16_16 = u_xlat16_4.x
            * u_xlat16_16;\n    u_xlat0.x = u_xlat5.x * u_xlat16_16;\n    u_xlat5.xyz
            = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx + u_xlat5.xyz;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD5.zzz
            + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat5.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat5.x = texture2D(_LightTexture0,
            u_xlat5.xx).x;\n    u_xlat16_4.xyz = u_xlat5.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    SV_Target0.xyz =
            u_xlat16_1.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          - _ALPHATEST_ON
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nin highp vec4 in_POSITION0;\nin
            mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2
            in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4
            vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec3 vs_TEXCOORD6;\nout
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz
            = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat2.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat2.wwwx;\n    vs_TEXCOORD3 = u_xlat2.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat2.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform highp
            sampler2D _LightTexture0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin
            highp vec4 vs_TEXCOORD4;\nin highp vec3 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nmediump float u_xlat16_9;\nmediump float u_xlat16_14;\nfloat
            u_xlat15;\nbool u_xlatb15;\nmediump float u_xlat16_16;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x =
            u_xlat16_0.w * _Color.w + (-_Cutoff);\n    u_xlat0.xyz = u_xlat16_0.xyz
            * _Color.xyz;\n    u_xlatb15 = u_xlat16_1.x<0.0;\n    if(u_xlatb15){discard;}\n   
            u_xlat16_1.x = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_1.xyz
            = u_xlat0.xyz * u_xlat16_1.xxx;\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat2.x = vs_TEXCOORD2.w;\n   
            u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n    u_xlat15
            = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat3.xyz = u_xlat2.xyz * vec3(u_xlat15) + (-u_xlat0.xyz);\n    u_xlat2.xyz
            = vec3(u_xlat15) * u_xlat2.xyz;\n    u_xlat15 = dot(u_xlat3.xyz, u_xlat3.xyz);\n   
            u_xlat15 = max(u_xlat15, 0.00100000005);\n    u_xlat15 = inversesqrt(u_xlat15);\n   
            u_xlat3.xyz = vec3(u_xlat15) * u_xlat3.xyz;\n    u_xlat15 = dot(u_xlat2.xyz,
            u_xlat3.xyz);\n    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat16_16
            = u_xlat15 + u_xlat15;\n    u_xlat16_16 = u_xlat15 * u_xlat16_16;\n   
            u_xlat15 = (-_Glossiness) + 1.0;\n    u_xlat16_16 = u_xlat16_16 * u_xlat15
            + -0.5;\n    u_xlat15 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat3.xyz = vec3(u_xlat15) *
            vs_TEXCOORD4.xyz;\n    u_xlat0.x = dot(u_xlat3.xyz, (-u_xlat0.xyz));\n   
            u_xlat5.x = dot(u_xlat3.xyz, u_xlat2.xyz);\n    u_xlat5.x = clamp(u_xlat5.x,
            0.0, 1.0);\n    u_xlat16_4.x = -abs(u_xlat0.x) + 1.0;\n    u_xlat16_9
            = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_9 = u_xlat16_9 * u_xlat16_9;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_9;\n    u_xlat16_4.x = u_xlat16_16
            * u_xlat16_4.x + 1.0;\n    u_xlat16_9 = (-u_xlat5.x) + 1.0;\n    u_xlat16_14
            = u_xlat16_9 * u_xlat16_9;\n    u_xlat16_14 = u_xlat16_14 * u_xlat16_14;\n   
            u_xlat16_9 = u_xlat16_9 * u_xlat16_14;\n    u_xlat16_16 = u_xlat16_16
            * u_xlat16_9 + 1.0;\n    u_xlat16_16 = u_xlat16_4.x * u_xlat16_16;\n   
            u_xlat0.x = u_xlat5.x * u_xlat16_16;\n    u_xlat5.xyz = vs_TEXCOORD5.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * vs_TEXCOORD5.xxx + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat5.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat5.x = texture(_LightTexture0,
            u_xlat5.xx).x;\n    u_xlat16_4.xyz = u_xlat5.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    SV_Target0.xyz =
            u_xlat16_1.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          - _ALPHATEST_ON
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - LIGHTMAP_SHADOW_MIXING
        - POINT
        - POINT_COOKIE
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - SHADOWS_SOFT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _DETAIL_MULX2
        - _METALLICGLOSSMAP
        - _NORMALMAP
        - _PARALLAXMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECULARHIGHLIGHTS_OFF
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - _NORMALMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _METALLICGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _PARALLAXMAP
          hasDiscard: 1
        - Keywords:
          - POINT
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - SPOT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 47
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
          - _ALPHATEST_ON
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
          - _ALPHATEST_ON
          - _SPECULARHIGHLIGHTS_OFF
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords:
        - INSTANCING_ON
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _METALLICGLOSSMAP
        - _PARALLAXMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _METALLICGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _PARALLAXMAP
          hasDiscard: 1
        - Keywords:
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SHADOWS_CUBE
          hasDiscard: 0
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: PerformanceChecks
        Value: False
      - Key: RenderType
        Value: Opaque
    - Index: 1
      Passes:
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp float u_xlat10_0;\nmediump float
            u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3 u_xlat2;\nlowp vec3 u_xlat10_2;\nmediump
            vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3
            u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat16;\nmediump float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid
            main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n   
            u_xlat16_1 = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1
            = u_xlat0.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1
            = textureCubeLodEXT(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1);\n   
            u_xlat16_3.x = u_xlat10_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx;\n    u_xlat10_0 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;\n   
            u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n   
            u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_6.xyz = _Color.xyz * u_xlat10_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_6.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) +
            (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz
            + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat16_6.xyz = u_xlat2.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    SV_Target0.xyz
            = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump float u_xlat16_0;\nmediump vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3
            u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat
            u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump float u_xlat16_27;\nmediump
            float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness))
            + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n   
            u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n    u_xlat16_1.x = u_xlat16_1.x
            * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n   
            u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz = u_xlat2.xyz
            * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1 = textureLod(unity_SpecCube0,
            u_xlat16_9.xyz, u_xlat16_1.x);\n    u_xlat16_3.x = u_xlat16_1.w + -1.0;\n   
            u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x
            = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat16_1.xyz
            * u_xlat16_3.xxx;\n    u_xlat16_0 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_3.xyz = vec3(u_xlat16_0) * u_xlat16_3.xyz;\n    u_xlat0.x =
            dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n   
            u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_6.xyz = _Color.xyz * u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_6.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) +
            (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz
            + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat16_6.xyz = u_xlat2.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    SV_Target0.xyz
            = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D
            unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3
            u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_12;\nfloat u_xlat33;\nlowp float u_xlat10_33;\nbool u_xlatb33;\nmediump
            float u_xlat16_37;\nmediump float u_xlat16_38;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb33 = u_xlat16_1<0.0;\n    if(u_xlatb33){discard;}\n   
            u_xlat2.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 =
            (-u_xlat2.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat16_1
            * u_xlat2.x;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat33 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat3.xyz
            = vec3(u_xlat33) * vs_TEXCOORD4.xyz;\n    u_xlat16_12.x = dot(vs_TEXCOORD1.xyz,
            u_xlat3.xyz);\n    u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;\n   
            u_xlat16_12.xyz = u_xlat3.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_12.xyz, u_xlat16_1);\n   
            u_xlat16_4.x = u_xlat10_1.w + -1.0;\n    u_xlat16_4.x = unity_SpecCube0_HDR.w
            * u_xlat16_4.x + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;\n    u_xlat10_33 =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_33)
            * u_xlat16_4.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat10_33) * vs_TEXCOORD5.xyz;\n   
            u_xlat33 = dot((-vs_TEXCOORD1.xyz), u_xlat3.xyz);\n    u_xlat2.x = u_xlat33;\n   
            u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat33 = u_xlat33 + u_xlat33;\n   
            u_xlat6.xyz = u_xlat3.xyz * (-vec3(u_xlat33)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat33 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat33
            = clamp(u_xlat33, 0.0, 1.0);\n    u_xlat16_7.xyz = vec3(u_xlat33) * _LightColor0.xyz;\n   
            u_xlat33 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat33
            = u_xlat33 * u_xlat33;\n    u_xlat2.y = u_xlat33 * u_xlat33;\n    u_xlat33
            = texture2D(unity_NHxRoughness, u_xlat2.yw).x;\n    u_xlat33 = u_xlat33
            * 16.0;\n    u_xlat16_37 = (-u_xlat2.x) + 1.0;\n    u_xlat2.x = u_xlat16_37
            * u_xlat16_37;\n    u_xlat2.x = u_xlat16_37 * u_xlat2.x;\n    u_xlat2.x
            = u_xlat16_37 * u_xlat2.x;\n    u_xlat16_37 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_38 = (-u_xlat16_37) + 1.0;\n    u_xlat16_38
            = u_xlat16_38 + _Glossiness;\n    u_xlat16_38 = clamp(u_xlat16_38, 0.0,
            1.0);\n    u_xlat16_8.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_9.xyz = vec3(u_xlat16_37) * u_xlat0.xyz;\n    u_xlat16_8.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_10.xyz = vec3(u_xlat16_38) +
            (-u_xlat16_8.xyz);\n    u_xlat16_10.xyz = u_xlat2.xxx * u_xlat16_10.xyz
            + u_xlat16_8.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat33) * u_xlat16_8.xyz
            + u_xlat16_9.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_5.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.xyz = u_xlat16_8.xyz * u_xlat16_7.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nUNITY_LOCATION(0) uniform
            mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D
            _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4
            vs_TEXCOORD5;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump
            vec3 u_xlat16_10;\nmediump vec3 u_xlat16_12;\nfloat u_xlat33;\nmediump
            float u_xlat16_33;\nbool u_xlatb33;\nmediump float u_xlat16_37;\nmediump
            float u_xlat16_38;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w * _Color.w + (-_Cutoff);\n   
            u_xlatb33 = u_xlat16_1.x<0.0;\n    if(u_xlatb33){discard;}\n    u_xlat2.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat2.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat16_1.x * u_xlat2.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat33 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat3.xyz
            = vec3(u_xlat33) * vs_TEXCOORD4.xyz;\n    u_xlat16_12.x = dot(vs_TEXCOORD1.xyz,
            u_xlat3.xyz);\n    u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;\n   
            u_xlat16_12.xyz = u_xlat3.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_12.xyz, u_xlat16_1.x);\n   
            u_xlat16_4.x = u_xlat16_1.w + -1.0;\n    u_xlat16_4.x = unity_SpecCube0_HDR.w
            * u_xlat16_4.x + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_4.xyz = u_xlat16_1.xyz * u_xlat16_4.xxx;\n    u_xlat16_33 =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat16_33)
            * u_xlat16_4.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat16_33) * vs_TEXCOORD5.xyz;\n   
            u_xlat33 = dot((-vs_TEXCOORD1.xyz), u_xlat3.xyz);\n    u_xlat2.x = u_xlat33;\n   
            u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat33 = u_xlat33 + u_xlat33;\n   
            u_xlat6.xyz = u_xlat3.xyz * (-vec3(u_xlat33)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat33 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat33
            = clamp(u_xlat33, 0.0, 1.0);\n    u_xlat16_7.xyz = vec3(u_xlat33) * _LightColor0.xyz;\n   
            u_xlat33 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat33
            = u_xlat33 * u_xlat33;\n    u_xlat2.y = u_xlat33 * u_xlat33;\n    u_xlat33
            = texture(unity_NHxRoughness, u_xlat2.yw).x;\n    u_xlat33 = u_xlat33
            * 16.0;\n    u_xlat16_37 = (-u_xlat2.x) + 1.0;\n    u_xlat2.x = u_xlat16_37
            * u_xlat16_37;\n    u_xlat2.x = u_xlat16_37 * u_xlat2.x;\n    u_xlat2.x
            = u_xlat16_37 * u_xlat2.x;\n    u_xlat16_37 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_38 = (-u_xlat16_37) + 1.0;\n    u_xlat16_38
            = u_xlat16_38 + _Glossiness;\n    u_xlat16_38 = clamp(u_xlat16_38, 0.0,
            1.0);\n    u_xlat16_8.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_9.xyz = vec3(u_xlat16_37) * u_xlat0.xyz;\n    u_xlat16_8.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_10.xyz = vec3(u_xlat16_38) +
            (-u_xlat16_8.xyz);\n    u_xlat16_10.xyz = u_xlat2.xxx * u_xlat16_10.xyz
            + u_xlat16_8.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat33) * u_xlat16_8.xyz
            + u_xlat16_9.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_5.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.xyz = u_xlat16_8.xyz * u_xlat16_7.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            float u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3
            u_xlat2;\nlowp vec3 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3
            u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat20;\nmediump float u_xlat16_33;\nmediump
            float u_xlat16_34;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness))
            + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n   
            u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat16_11.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n    u_xlat16_11.x
            = u_xlat16_11.x + u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat2.xyz *
            (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat16_11.xyz, u_xlat16_1);\n    u_xlat16_3.x = u_xlat10_1.w + -1.0;\n   
            u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x
            = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_1.xyz
            * u_xlat16_3.xxx;\n    u_xlat10_0 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_3.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;\n    u_xlat16_4.xyz
            = vec3(u_xlat10_0) * vs_TEXCOORD5.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat20 = u_xlat0.x;\n    u_xlat20 = clamp(u_xlat20,
            0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat5.xyz =
            u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_33 = (-u_xlat20) + 1.0;\n    u_xlat10
            = u_xlat16_33 * u_xlat16_33;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n   
            u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat16_33 = (-_Metallic) *
            0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n   
            u_xlat16_34 = u_xlat16_34 + _Glossiness;\n    u_xlat16_34 = clamp(u_xlat16_34,
            0.0, 1.0);\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_7.xyz = _Color.xyz * u_xlat10_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_8.xyz
            = vec3(u_xlat16_33) * u_xlat2.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n   
            u_xlat16_9.xyz = vec3(u_xlat10) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    SV_Target0.xyz
            = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump float u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat20;\nmediump float
            u_xlat16_33;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_11.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;\n   
            u_xlat16_11.xyz = u_xlat2.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_11.xyz, u_xlat16_1.x);\n   
            u_xlat16_3.x = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xxx;\n    u_xlat16_0 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat16_0) * u_xlat16_3.xyz;\n   
            u_xlat16_4.xyz = vec3(u_xlat16_0) * vs_TEXCOORD5.xyz;\n    u_xlat0.x
            = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat20 = u_xlat0.x;\n   
            u_xlat20 = clamp(u_xlat20, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat5.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_33 = (-u_xlat20) + 1.0;\n    u_xlat10
            = u_xlat16_33 * u_xlat16_33;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n   
            u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat16_33 = (-_Metallic) *
            0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n   
            u_xlat16_34 = u_xlat16_34 + _Glossiness;\n    u_xlat16_34 = clamp(u_xlat16_34,
            0.0, 1.0);\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_7.xyz = _Color.xyz * u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_8.xyz
            = vec3(u_xlat16_33) * u_xlat2.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n   
            u_xlat16_9.xyz = vec3(u_xlat10) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    SV_Target0.xyz
            = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D
            unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec4
            u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump
            vec3 u_xlat16_10;\nfloat u_xlat27;\nlowp float u_xlat10_27;\nbool u_xlatb27;\nmediump
            float u_xlat16_31;\nmediump float u_xlat16_33;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb27 = u_xlat16_1<0.0;\n    if(u_xlatb27){discard;}\n   
            u_xlat2.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 =
            (-u_xlat2.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat16_1
            * u_xlat2.x;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat27 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat3.xyz
            = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz,
            u_xlat3.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n   
            u_xlat16_10.xyz = u_xlat3.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_1);\n   
            u_xlat16_4.x = u_xlat10_1.w + -1.0;\n    u_xlat16_4.x = unity_SpecCube0_HDR.w
            * u_xlat16_4.x + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;\n    u_xlat10_27 =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_27)
            * u_xlat16_4.xyz;\n    u_xlat27 = dot((-vs_TEXCOORD1.xyz), u_xlat3.xyz);\n   
            u_xlat2.x = u_xlat27;\n    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n   
            u_xlat27 = u_xlat27 + u_xlat27;\n    u_xlat5.xyz = u_xlat3.xyz * (-vec3(u_xlat27))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat27 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat16_6.xyz = vec3(u_xlat27)
            * _LightColor0.xyz;\n    u_xlat27 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat27 = u_xlat27 * u_xlat27;\n    u_xlat2.y = u_xlat27 * u_xlat27;\n   
            u_xlat27 = texture2D(unity_NHxRoughness, u_xlat2.yw).x;\n    u_xlat27
            = u_xlat27 * 16.0;\n    u_xlat16_31 = (-u_xlat2.x) + 1.0;\n    u_xlat2.x
            = u_xlat16_31 * u_xlat16_31;\n    u_xlat2.x = u_xlat16_31 * u_xlat2.x;\n   
            u_xlat2.x = u_xlat16_31 * u_xlat2.x;\n    u_xlat16_31 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_33 = (-u_xlat16_31) + 1.0;\n   
            u_xlat16_33 = u_xlat16_33 + _Glossiness;\n    u_xlat16_33 = clamp(u_xlat16_33,
            0.0, 1.0);\n    u_xlat16_7.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz =
            vec3(u_xlat16_33) + (-u_xlat16_7.xyz);\n    u_xlat16_8.xyz = u_xlat2.xxx
            * u_xlat16_8.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat27)
            * u_xlat16_7.xyz;\n    u_xlat16_7.xyz = u_xlat0.xyz * vec3(u_xlat16_31)
            + u_xlat16_7.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz;\n   
            SV_Target0.xyz = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nUNITY_LOCATION(0) uniform
            mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D
            _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_10;\nfloat u_xlat27;\nmediump
            float u_xlat16_27;\nbool u_xlatb27;\nmediump float u_xlat16_31;\nmediump
            float u_xlat16_33;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w * _Color.w + (-_Cutoff);\n   
            u_xlatb27 = u_xlat16_1.x<0.0;\n    if(u_xlatb27){discard;}\n    u_xlat2.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat2.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat16_1.x * u_xlat2.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat27 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat3.xyz
            = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz,
            u_xlat3.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n   
            u_xlat16_10.xyz = u_xlat3.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_1.x);\n   
            u_xlat16_4.x = u_xlat16_1.w + -1.0;\n    u_xlat16_4.x = unity_SpecCube0_HDR.w
            * u_xlat16_4.x + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_4.xyz = u_xlat16_1.xyz * u_xlat16_4.xxx;\n    u_xlat16_27 =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat16_27)
            * u_xlat16_4.xyz;\n    u_xlat27 = dot((-vs_TEXCOORD1.xyz), u_xlat3.xyz);\n   
            u_xlat2.x = u_xlat27;\n    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n   
            u_xlat27 = u_xlat27 + u_xlat27;\n    u_xlat5.xyz = u_xlat3.xyz * (-vec3(u_xlat27))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat27 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat16_6.xyz = vec3(u_xlat27)
            * _LightColor0.xyz;\n    u_xlat27 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat27 = u_xlat27 * u_xlat27;\n    u_xlat2.y = u_xlat27 * u_xlat27;\n   
            u_xlat27 = texture(unity_NHxRoughness, u_xlat2.yw).x;\n    u_xlat27 =
            u_xlat27 * 16.0;\n    u_xlat16_31 = (-u_xlat2.x) + 1.0;\n    u_xlat2.x
            = u_xlat16_31 * u_xlat16_31;\n    u_xlat2.x = u_xlat16_31 * u_xlat2.x;\n   
            u_xlat2.x = u_xlat16_31 * u_xlat2.x;\n    u_xlat16_31 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_33 = (-u_xlat16_31) + 1.0;\n   
            u_xlat16_33 = u_xlat16_33 + _Glossiness;\n    u_xlat16_33 = clamp(u_xlat16_33,
            0.0, 1.0);\n    u_xlat16_7.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz =
            vec3(u_xlat16_33) + (-u_xlat16_7.xyz);\n    u_xlat16_8.xyz = u_xlat2.xxx
            * u_xlat16_8.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat27)
            * u_xlat16_7.xyz;\n    u_xlat16_7.xyz = u_xlat0.xyz * vec3(u_xlat16_31)
            + u_xlat16_7.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz;\n   
            SV_Target0.xyz = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp float u_xlat10_0;\nmediump float
            u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3 u_xlat2;\nlowp vec3 u_xlat10_2;\nmediump
            vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3
            u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat16;\nmediump float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid
            main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n   
            u_xlat16_1 = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1
            = u_xlat0.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1
            = textureCubeLodEXT(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1);\n   
            u_xlat16_3.x = u_xlat10_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx;\n    u_xlat10_0 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;\n   
            u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n   
            u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_6.xyz = _Color.xyz * u_xlat10_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_6.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) +
            (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz
            + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat16_6.xyz = u_xlat2.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    SV_Target0.xyz
            = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump float u_xlat16_0;\nmediump vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3
            u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat
            u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump float u_xlat16_27;\nmediump
            float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness))
            + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n   
            u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n    u_xlat16_1.x = u_xlat16_1.x
            * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n   
            u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz = u_xlat2.xyz
            * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1 = textureLod(unity_SpecCube0,
            u_xlat16_9.xyz, u_xlat16_1.x);\n    u_xlat16_3.x = u_xlat16_1.w + -1.0;\n   
            u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x
            = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat16_1.xyz
            * u_xlat16_3.xxx;\n    u_xlat16_0 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_3.xyz = vec3(u_xlat16_0) * u_xlat16_3.xyz;\n    u_xlat0.x =
            dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n   
            u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_6.xyz = _Color.xyz * u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_6.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) +
            (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz
            + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat16_6.xyz = u_xlat2.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    SV_Target0.xyz
            = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D
            unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3
            u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_12;\nfloat u_xlat33;\nlowp float u_xlat10_33;\nbool u_xlatb33;\nmediump
            float u_xlat16_37;\nmediump float u_xlat16_38;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb33 = u_xlat16_1<0.0;\n    if(u_xlatb33){discard;}\n   
            u_xlat2.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 =
            (-u_xlat2.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat16_1
            * u_xlat2.x;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat33 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat3.xyz
            = vec3(u_xlat33) * vs_TEXCOORD4.xyz;\n    u_xlat16_12.x = dot(vs_TEXCOORD1.xyz,
            u_xlat3.xyz);\n    u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;\n   
            u_xlat16_12.xyz = u_xlat3.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_12.xyz, u_xlat16_1);\n   
            u_xlat16_4.x = u_xlat10_1.w + -1.0;\n    u_xlat16_4.x = unity_SpecCube0_HDR.w
            * u_xlat16_4.x + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;\n    u_xlat10_33 =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_33)
            * u_xlat16_4.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat10_33) * vs_TEXCOORD5.xyz;\n   
            u_xlat33 = dot((-vs_TEXCOORD1.xyz), u_xlat3.xyz);\n    u_xlat2.x = u_xlat33;\n   
            u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat33 = u_xlat33 + u_xlat33;\n   
            u_xlat6.xyz = u_xlat3.xyz * (-vec3(u_xlat33)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat33 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat33
            = clamp(u_xlat33, 0.0, 1.0);\n    u_xlat16_7.xyz = vec3(u_xlat33) * _LightColor0.xyz;\n   
            u_xlat33 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat33
            = u_xlat33 * u_xlat33;\n    u_xlat2.y = u_xlat33 * u_xlat33;\n    u_xlat33
            = texture2D(unity_NHxRoughness, u_xlat2.yw).x;\n    u_xlat33 = u_xlat33
            * 16.0;\n    u_xlat16_37 = (-u_xlat2.x) + 1.0;\n    u_xlat2.x = u_xlat16_37
            * u_xlat16_37;\n    u_xlat2.x = u_xlat16_37 * u_xlat2.x;\n    u_xlat2.x
            = u_xlat16_37 * u_xlat2.x;\n    u_xlat16_37 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_38 = (-u_xlat16_37) + 1.0;\n    u_xlat16_38
            = u_xlat16_38 + _Glossiness;\n    u_xlat16_38 = clamp(u_xlat16_38, 0.0,
            1.0);\n    u_xlat16_8.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_9.xyz = vec3(u_xlat16_37) * u_xlat0.xyz;\n    u_xlat16_8.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_10.xyz = vec3(u_xlat16_38) +
            (-u_xlat16_8.xyz);\n    u_xlat16_10.xyz = u_xlat2.xxx * u_xlat16_10.xyz
            + u_xlat16_8.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat33) * u_xlat16_8.xyz
            + u_xlat16_9.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_5.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.xyz = u_xlat16_8.xyz * u_xlat16_7.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4
            u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nUNITY_LOCATION(0) uniform
            mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D
            _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4
            vs_TEXCOORD5;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump
            vec3 u_xlat16_10;\nmediump vec3 u_xlat16_12;\nfloat u_xlat33;\nmediump
            float u_xlat16_33;\nbool u_xlatb33;\nmediump float u_xlat16_37;\nmediump
            float u_xlat16_38;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w * _Color.w + (-_Cutoff);\n   
            u_xlatb33 = u_xlat16_1.x<0.0;\n    if(u_xlatb33){discard;}\n    u_xlat2.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat2.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat16_1.x * u_xlat2.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat33 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat3.xyz
            = vec3(u_xlat33) * vs_TEXCOORD4.xyz;\n    u_xlat16_12.x = dot(vs_TEXCOORD1.xyz,
            u_xlat3.xyz);\n    u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;\n   
            u_xlat16_12.xyz = u_xlat3.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_12.xyz, u_xlat16_1.x);\n   
            u_xlat16_4.x = u_xlat16_1.w + -1.0;\n    u_xlat16_4.x = unity_SpecCube0_HDR.w
            * u_xlat16_4.x + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_4.xyz = u_xlat16_1.xyz * u_xlat16_4.xxx;\n    u_xlat16_33 =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat16_33)
            * u_xlat16_4.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat16_33) * vs_TEXCOORD5.xyz;\n   
            u_xlat33 = dot((-vs_TEXCOORD1.xyz), u_xlat3.xyz);\n    u_xlat2.x = u_xlat33;\n   
            u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat33 = u_xlat33 + u_xlat33;\n   
            u_xlat6.xyz = u_xlat3.xyz * (-vec3(u_xlat33)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat33 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat33
            = clamp(u_xlat33, 0.0, 1.0);\n    u_xlat16_7.xyz = vec3(u_xlat33) * _LightColor0.xyz;\n   
            u_xlat33 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat33
            = u_xlat33 * u_xlat33;\n    u_xlat2.y = u_xlat33 * u_xlat33;\n    u_xlat33
            = texture(unity_NHxRoughness, u_xlat2.yw).x;\n    u_xlat33 = u_xlat33
            * 16.0;\n    u_xlat16_37 = (-u_xlat2.x) + 1.0;\n    u_xlat2.x = u_xlat16_37
            * u_xlat16_37;\n    u_xlat2.x = u_xlat16_37 * u_xlat2.x;\n    u_xlat2.x
            = u_xlat16_37 * u_xlat2.x;\n    u_xlat16_37 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_38 = (-u_xlat16_37) + 1.0;\n    u_xlat16_38
            = u_xlat16_38 + _Glossiness;\n    u_xlat16_38 = clamp(u_xlat16_38, 0.0,
            1.0);\n    u_xlat16_8.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_9.xyz = vec3(u_xlat16_37) * u_xlat0.xyz;\n    u_xlat16_8.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_10.xyz = vec3(u_xlat16_38) +
            (-u_xlat16_8.xyz);\n    u_xlat16_10.xyz = u_xlat2.xxx * u_xlat16_10.xyz
            + u_xlat16_8.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat33) * u_xlat16_8.xyz
            + u_xlat16_9.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_5.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.xyz = u_xlat16_8.xyz * u_xlat16_7.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            float u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3
            u_xlat2;\nlowp vec3 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3
            u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat20;\nmediump float u_xlat16_33;\nmediump
            float u_xlat16_34;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness))
            + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n   
            u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat16_11.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n    u_xlat16_11.x
            = u_xlat16_11.x + u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat2.xyz *
            (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat16_11.xyz, u_xlat16_1);\n    u_xlat16_3.x = u_xlat10_1.w + -1.0;\n   
            u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x
            = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_1.xyz
            * u_xlat16_3.xxx;\n    u_xlat10_0 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_3.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;\n    u_xlat16_4.xyz
            = vec3(u_xlat10_0) * vs_TEXCOORD5.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat20 = u_xlat0.x;\n    u_xlat20 = clamp(u_xlat20,
            0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat5.xyz =
            u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_33 = (-u_xlat20) + 1.0;\n    u_xlat10
            = u_xlat16_33 * u_xlat16_33;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n   
            u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat16_33 = (-_Metallic) *
            0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n   
            u_xlat16_34 = u_xlat16_34 + _Glossiness;\n    u_xlat16_34 = clamp(u_xlat16_34,
            0.0, 1.0);\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_7.xyz = _Color.xyz * u_xlat10_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_8.xyz
            = vec3(u_xlat16_33) * u_xlat2.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n   
            u_xlat16_9.xyz = vec3(u_xlat10) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    SV_Target0.xyz
            = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4
            u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump float u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat20;\nmediump float
            u_xlat16_33;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_11.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;\n   
            u_xlat16_11.xyz = u_xlat2.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_11.xyz, u_xlat16_1.x);\n   
            u_xlat16_3.x = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xxx;\n    u_xlat16_0 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat16_0) * u_xlat16_3.xyz;\n   
            u_xlat16_4.xyz = vec3(u_xlat16_0) * vs_TEXCOORD5.xyz;\n    u_xlat0.x
            = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat20 = u_xlat0.x;\n   
            u_xlat20 = clamp(u_xlat20, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat5.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_33 = (-u_xlat20) + 1.0;\n    u_xlat10
            = u_xlat16_33 * u_xlat16_33;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n   
            u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat16_33 = (-_Metallic) *
            0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n   
            u_xlat16_34 = u_xlat16_34 + _Glossiness;\n    u_xlat16_34 = clamp(u_xlat16_34,
            0.0, 1.0);\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_7.xyz = _Color.xyz * u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_8.xyz
            = vec3(u_xlat16_33) * u_xlat2.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n   
            u_xlat16_9.xyz = vec3(u_xlat10) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    SV_Target0.xyz
            = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D
            unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec4
            u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump
            vec3 u_xlat16_10;\nfloat u_xlat27;\nlowp float u_xlat10_27;\nbool u_xlatb27;\nmediump
            float u_xlat16_31;\nmediump float u_xlat16_33;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb27 = u_xlat16_1<0.0;\n    if(u_xlatb27){discard;}\n   
            u_xlat2.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 =
            (-u_xlat2.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat16_1
            * u_xlat2.x;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat27 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat3.xyz
            = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz,
            u_xlat3.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n   
            u_xlat16_10.xyz = u_xlat3.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_1);\n   
            u_xlat16_4.x = u_xlat10_1.w + -1.0;\n    u_xlat16_4.x = unity_SpecCube0_HDR.w
            * u_xlat16_4.x + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;\n    u_xlat10_27 =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_27)
            * u_xlat16_4.xyz;\n    u_xlat27 = dot((-vs_TEXCOORD1.xyz), u_xlat3.xyz);\n   
            u_xlat2.x = u_xlat27;\n    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n   
            u_xlat27 = u_xlat27 + u_xlat27;\n    u_xlat5.xyz = u_xlat3.xyz * (-vec3(u_xlat27))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat27 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat16_6.xyz = vec3(u_xlat27)
            * _LightColor0.xyz;\n    u_xlat27 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat27 = u_xlat27 * u_xlat27;\n    u_xlat2.y = u_xlat27 * u_xlat27;\n   
            u_xlat27 = texture2D(unity_NHxRoughness, u_xlat2.yw).x;\n    u_xlat27
            = u_xlat27 * 16.0;\n    u_xlat16_31 = (-u_xlat2.x) + 1.0;\n    u_xlat2.x
            = u_xlat16_31 * u_xlat16_31;\n    u_xlat2.x = u_xlat16_31 * u_xlat2.x;\n   
            u_xlat2.x = u_xlat16_31 * u_xlat2.x;\n    u_xlat16_31 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_33 = (-u_xlat16_31) + 1.0;\n   
            u_xlat16_33 = u_xlat16_33 + _Glossiness;\n    u_xlat16_33 = clamp(u_xlat16_33,
            0.0, 1.0);\n    u_xlat16_7.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz =
            vec3(u_xlat16_33) + (-u_xlat16_7.xyz);\n    u_xlat16_8.xyz = u_xlat2.xxx
            * u_xlat16_8.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat27)
            * u_xlat16_7.xyz;\n    u_xlat16_7.xyz = u_xlat0.xyz * vec3(u_xlat16_31)
            + u_xlat16_7.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz;\n   
            SV_Target0.xyz = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nUNITY_LOCATION(0) uniform
            mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D
            _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_10;\nfloat u_xlat27;\nmediump
            float u_xlat16_27;\nbool u_xlatb27;\nmediump float u_xlat16_31;\nmediump
            float u_xlat16_33;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w * _Color.w + (-_Cutoff);\n   
            u_xlatb27 = u_xlat16_1.x<0.0;\n    if(u_xlatb27){discard;}\n    u_xlat2.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat2.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat16_1.x * u_xlat2.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat27 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat3.xyz
            = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz,
            u_xlat3.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n   
            u_xlat16_10.xyz = u_xlat3.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_1.x);\n   
            u_xlat16_4.x = u_xlat16_1.w + -1.0;\n    u_xlat16_4.x = unity_SpecCube0_HDR.w
            * u_xlat16_4.x + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_4.xyz = u_xlat16_1.xyz * u_xlat16_4.xxx;\n    u_xlat16_27 =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat16_27)
            * u_xlat16_4.xyz;\n    u_xlat27 = dot((-vs_TEXCOORD1.xyz), u_xlat3.xyz);\n   
            u_xlat2.x = u_xlat27;\n    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n   
            u_xlat27 = u_xlat27 + u_xlat27;\n    u_xlat5.xyz = u_xlat3.xyz * (-vec3(u_xlat27))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat27 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat16_6.xyz = vec3(u_xlat27)
            * _LightColor0.xyz;\n    u_xlat27 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat27 = u_xlat27 * u_xlat27;\n    u_xlat2.y = u_xlat27 * u_xlat27;\n   
            u_xlat27 = texture(unity_NHxRoughness, u_xlat2.yw).x;\n    u_xlat27 =
            u_xlat27 * 16.0;\n    u_xlat16_31 = (-u_xlat2.x) + 1.0;\n    u_xlat2.x
            = u_xlat16_31 * u_xlat16_31;\n    u_xlat2.x = u_xlat16_31 * u_xlat2.x;\n   
            u_xlat2.x = u_xlat16_31 * u_xlat2.x;\n    u_xlat16_31 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_33 = (-u_xlat16_31) + 1.0;\n   
            u_xlat16_33 = u_xlat16_33 + _Glossiness;\n    u_xlat16_33 = clamp(u_xlat16_33,
            0.0, 1.0);\n    u_xlat16_7.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz =
            vec3(u_xlat16_33) + (-u_xlat16_7.xyz);\n    u_xlat16_8.xyz = u_xlat2.xxx
            * u_xlat16_8.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat27)
            * u_xlat16_7.xyz;\n    u_xlat16_7.xyz = u_xlat0.xyz * vec3(u_xlat16_31)
            + u_xlat16_7.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz;\n   
            SV_Target0.xyz = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_4.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D
            unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3
            u_xlat6;\nlowp vec3 u_xlat10_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat18;\nmediump
            float u_xlat16_21;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot((-vs_TEXCOORD1.xyz),
            u_xlat0.xyz);\n    u_xlat1.x = u_xlat18 + u_xlat18;\n    u_xlat18 = u_xlat18;\n   
            u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat16_2.x = (-u_xlat18)
            + 1.0;\n    u_xlat1.xyz = u_xlat0.xyz * (-u_xlat1.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_8.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_6.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_3.xyz = _Color.xyz
            * u_xlat10_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat6.xyz = u_xlat10_6.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n   
            u_xlat16_21 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz
            = u_xlat6.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;\n    u_xlat16_21
            = (-u_xlat16_21) + 1.0;\n    u_xlat16_21 = u_xlat16_21 + _Glossiness;\n   
            u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_3.xyz)
            + vec3(u_xlat16_21);\n    u_xlat0.x = u_xlat16_2.x * u_xlat16_2.x;\n   
            u_xlat0.x = u_xlat16_2.x * u_xlat0.x;\n    u_xlat0.x = u_xlat16_2.x *
            u_xlat0.x;\n    u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat16_3.xyz;\n   
            u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_5.xyz
            = u_xlat10_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_3.xyz =
            u_xlat16_3.xyz * u_xlat16_5.xyz;\n    u_xlat16_2.xyz = u_xlat16_4.xyz
            * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz
            + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump sampler2D _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3
            u_xlat16_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat18;\nmediump float
            u_xlat16_21;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n   
            u_xlat1.x = u_xlat18 + u_xlat18;\n    u_xlat18 = u_xlat18;\n    u_xlat18
            = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat16_2.x = (-u_xlat18) + 1.0;\n   
            u_xlat1.xyz = u_xlat0.xyz * (-u_xlat1.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_8.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_6.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_3.xyz = _Color.xyz
            * u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat6.xyz = u_xlat16_6.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n   
            u_xlat16_21 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz
            = u_xlat6.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;\n    u_xlat16_21
            = (-u_xlat16_21) + 1.0;\n    u_xlat16_21 = u_xlat16_21 + _Glossiness;\n   
            u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_3.xyz)
            + vec3(u_xlat16_21);\n    u_xlat0.x = u_xlat16_2.x * u_xlat16_2.x;\n   
            u_xlat0.x = u_xlat16_2.x * u_xlat0.x;\n    u_xlat0.x = u_xlat16_2.x *
            u_xlat0.x;\n    u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat16_3.xyz;\n   
            u_xlat16_0.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_5.xyz
            = u_xlat16_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_3.xyz =
            u_xlat16_3.xyz * u_xlat16_5.xyz;\n    u_xlat16_2.xyz = u_xlat16_4.xyz
            * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat16_0.xyz = texture(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz * _EmissionColor.xyz
            + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp sampler2D _EmissionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_13;\nfloat
            u_xlat27;\nbool u_xlatb27;\nmediump float u_xlat16_28;\nfloat u_xlat29;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.x = u_xlat10_0.w * _Color.w + (-_Cutoff);\n    u_xlatb27 =
            u_xlat16_1.x<0.0;\n    if(u_xlatb27){discard;}\n    u_xlat27 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat2.xyz
            = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat29 = u_xlat27;\n    u_xlat29 = clamp(u_xlat29,
            0.0, 1.0);\n    u_xlat27 = u_xlat27 + u_xlat27;\n    u_xlat3.xyz = u_xlat2.xyz
            * (-vec3(u_xlat27)) + (-vs_TEXCOORD1.xyz);\n    u_xlat27 = dot(u_xlat2.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n   
            u_xlat16_1.xyz = vec3(u_xlat27) * _LightColor0.xyz;\n    u_xlat27 = dot(u_xlat3.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat27 = u_xlat27 * u_xlat27;\n   
            u_xlat2.x = u_xlat27 * u_xlat27;\n    u_xlat16_28 = (-u_xlat29) + 1.0;\n   
            u_xlat27 = u_xlat16_28 * u_xlat16_28;\n    u_xlat27 = u_xlat16_28 * u_xlat27;\n   
            u_xlat27 = u_xlat16_28 * u_xlat27;\n    u_xlat16_28 = (-_Metallic) *
            0.779083729 + 0.779083729;\n    u_xlat16_4.x = (-u_xlat16_28) + 1.0;\n   
            u_xlat16_4.x = u_xlat16_4.x + _Glossiness;\n    u_xlat16_4.x = clamp(u_xlat16_4.x,
            0.0, 1.0);\n    u_xlat16_13.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_5.xyz = vec3(u_xlat16_28) * u_xlat0.xyz;\n    u_xlat16_13.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_6.xyz = (-u_xlat16_13.xyz) +
            u_xlat16_4.xxx;\n    u_xlat16_6.xyz = vec3(u_xlat27) * u_xlat16_6.xyz
            + u_xlat16_13.xyz;\n    u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_7.xyz = u_xlat10_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_8.xyz
            = u_xlat10_0.xxx * vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            * u_xlat16_7.xyz;\n    u_xlat16_6.xyz = u_xlat16_8.xyz * u_xlat16_5.xyz
            + u_xlat16_6.xyz;\n    u_xlat2.z = (-_Glossiness) + 1.0;\n    u_xlat0.x
            = texture2D(unity_NHxRoughness, u_xlat2.xz).x;\n    u_xlat0.x = u_xlat0.x
            * 16.0;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_13.xyz + u_xlat16_5.xyz;\n   
            u_xlat16_1.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat16_6.xyz;\n   
            u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump sampler2D
            _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_13;\nfloat u_xlat27;\nbool u_xlatb27;\nmediump
            float u_xlat16_28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat16_0 =
            texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb27 = u_xlat16_1.x<0.0;\n    if(u_xlatb27){discard;}\n   
            u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat2.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat29 = u_xlat27;\n    u_xlat29 = clamp(u_xlat29,
            0.0, 1.0);\n    u_xlat27 = u_xlat27 + u_xlat27;\n    u_xlat3.xyz = u_xlat2.xyz
            * (-vec3(u_xlat27)) + (-vs_TEXCOORD1.xyz);\n    u_xlat27 = dot(u_xlat2.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n   
            u_xlat16_1.xyz = vec3(u_xlat27) * _LightColor0.xyz;\n    u_xlat27 = dot(u_xlat3.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat27 = u_xlat27 * u_xlat27;\n   
            u_xlat2.x = u_xlat27 * u_xlat27;\n    u_xlat16_28 = (-u_xlat29) + 1.0;\n   
            u_xlat27 = u_xlat16_28 * u_xlat16_28;\n    u_xlat27 = u_xlat16_28 * u_xlat27;\n   
            u_xlat27 = u_xlat16_28 * u_xlat27;\n    u_xlat16_28 = (-_Metallic) *
            0.779083729 + 0.779083729;\n    u_xlat16_4.x = (-u_xlat16_28) + 1.0;\n   
            u_xlat16_4.x = u_xlat16_4.x + _Glossiness;\n    u_xlat16_4.x = clamp(u_xlat16_4.x,
            0.0, 1.0);\n    u_xlat16_13.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_5.xyz = vec3(u_xlat16_28) * u_xlat0.xyz;\n    u_xlat16_13.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_6.xyz = (-u_xlat16_13.xyz) +
            u_xlat16_4.xxx;\n    u_xlat16_6.xyz = vec3(u_xlat27) * u_xlat16_6.xyz
            + u_xlat16_13.xyz;\n    u_xlat16_0.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_7.xyz = u_xlat16_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_8.xyz
            = u_xlat16_0.xxx * vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            * u_xlat16_7.xyz;\n    u_xlat16_6.xyz = u_xlat16_8.xyz * u_xlat16_5.xyz
            + u_xlat16_6.xyz;\n    u_xlat2.z = (-_Glossiness) + 1.0;\n    u_xlat0.x
            = texture(unity_NHxRoughness, u_xlat2.xz).x;\n    u_xlat0.x = u_xlat0.x
            * 16.0;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_13.xyz + u_xlat16_5.xyz;\n   
            u_xlat16_1.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat16_6.xyz;\n   
            u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D
            unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp
            vec3 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nfloat u_xlat8;\nlowp float u_xlat10_8;\nvec3 u_xlat9;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat24;\nmediump float u_xlat16_26;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat24 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n   
            u_xlat1.x = u_xlat24;\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n   
            u_xlat24 = u_xlat24 + u_xlat24;\n    u_xlat9.xyz = u_xlat0.xyz * (-vec3(u_xlat24))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat9.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat16_26 = (-u_xlat1.x) + 1.0;\n    u_xlat8 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat8 = u_xlat16_26 * u_xlat8;\n    u_xlat8 = u_xlat16_26 * u_xlat8;\n   
            u_xlat16_26 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.x
            = (-u_xlat16_26) + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x + _Glossiness;\n   
            u_xlat16_3.x = clamp(u_xlat16_3.x, 0.0, 1.0);\n    u_xlat10_1.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_11.xyz = _Color.xyz * u_xlat10_1.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz =
            u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat16_26)
            * u_xlat1.xyz;\n    u_xlat16_11.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_11.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_5.xyz = (-u_xlat16_11.xyz) + u_xlat16_3.xxx;\n    u_xlat16_5.xyz
            = vec3(u_xlat8) * u_xlat16_5.xyz + u_xlat16_11.xyz;\n    u_xlat10_8 =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_6.xyz = vec3(u_xlat10_8)
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10_8)
            * vs_TEXCOORD5.xyz;\n    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz;\n   
            u_xlat16_5.xyz = u_xlat16_7.xyz * u_xlat16_4.xyz + u_xlat16_5.xyz;\n   
            u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_3.xyz
            = u_xlat0.xxx * u_xlat16_11.xyz + u_xlat16_4.xyz;\n    u_xlat16_2.xyz
            = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat16_5.xyz;\n    u_xlat10_0.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_2.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump sampler2D _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4
            vs_TEXCOORD5;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat
            u_xlat8;\nmediump float u_xlat16_8;\nvec3 u_xlat9;\nmediump vec3 u_xlat16_11;\nfloat
            u_xlat24;\nmediump float u_xlat16_26;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot((-vs_TEXCOORD1.xyz),
            u_xlat0.xyz);\n    u_xlat1.x = u_xlat24;\n    u_xlat1.x = clamp(u_xlat1.x,
            0.0, 1.0);\n    u_xlat24 = u_xlat24 + u_xlat24;\n    u_xlat9.xyz = u_xlat0.xyz
            * (-vec3(u_xlat24)) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat9.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat16_26 = (-u_xlat1.x) +
            1.0;\n    u_xlat8 = u_xlat16_26 * u_xlat16_26;\n    u_xlat8 = u_xlat16_26
            * u_xlat8;\n    u_xlat8 = u_xlat16_26 * u_xlat8;\n    u_xlat16_26 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.x = (-u_xlat16_26) + 1.0;\n   
            u_xlat16_3.x = u_xlat16_3.x + _Glossiness;\n    u_xlat16_3.x = clamp(u_xlat16_3.x,
            0.0, 1.0);\n    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_11.xyz = _Color.xyz * u_xlat16_1.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_4.xyz
            = vec3(u_xlat16_26) * u_xlat1.xyz;\n    u_xlat16_11.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_11.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.xyz = (-u_xlat16_11.xyz) + u_xlat16_3.xxx;\n   
            u_xlat16_5.xyz = vec3(u_xlat8) * u_xlat16_5.xyz + u_xlat16_11.xyz;\n   
            u_xlat16_8 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_6.xyz
            = vec3(u_xlat16_8) * unity_IndirectSpecColor.xyz;\n    u_xlat16_7.xyz
            = vec3(u_xlat16_8) * vs_TEXCOORD5.xyz;\n    u_xlat16_5.xyz = u_xlat16_5.xyz
            * u_xlat16_6.xyz;\n    u_xlat16_5.xyz = u_xlat16_7.xyz * u_xlat16_4.xyz
            + u_xlat16_5.xyz;\n    u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x
            = texture(unity_NHxRoughness, u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x
            * 16.0;\n    u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_11.xyz + u_xlat16_4.xyz;\n   
            u_xlat16_2.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat16_5.xyz;\n   
            u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_2.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp sampler2D _EmissionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvec3
            u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat21;\nbool u_xlatb21;\nfloat
            u_xlat23;\nmediump float u_xlat16_25;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb21 = u_xlat16_1.x<0.0;\n    if(u_xlatb21){discard;}\n   
            u_xlat21 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat23 = u_xlat21 + u_xlat21;\n    u_xlat21 = u_xlat21;\n   
            u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat16_1.x = (-u_xlat21)
            + 1.0;\n    u_xlat3.xyz = u_xlat2.xyz * (-vec3(u_xlat23)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat21 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat21
            = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat16_8.xyz = vec3(u_xlat21) * _LightColor0.xyz;\n   
            u_xlat21 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat21
            = u_xlat21 * u_xlat21;\n    u_xlat2.x = u_xlat21 * u_xlat21;\n    u_xlat2.z
            = (-_Glossiness) + 1.0;\n    u_xlat21 = texture2D(unity_NHxRoughness,
            u_xlat2.xz).x;\n    u_xlat21 = u_xlat21 * 16.0;\n    u_xlat16_4.xyz =
            u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.xyz = vec3(u_xlat21) * u_xlat16_4.xyz;\n   
            u_xlat16_25 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz
            = u_xlat0.xyz * vec3(u_xlat16_25) + u_xlat16_5.xyz;\n    u_xlat16_25
            = (-u_xlat16_25) + 1.0;\n    u_xlat16_25 = u_xlat16_25 + _Glossiness;\n   
            u_xlat16_25 = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat16_6.xyz = (-u_xlat16_4.xyz)
            + vec3(u_xlat16_25);\n    u_xlat0.x = u_xlat16_1.x * u_xlat16_1.x;\n   
            u_xlat0.x = u_xlat16_1.x * u_xlat0.x;\n    u_xlat0.x = u_xlat16_1.x *
            u_xlat0.x;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat16_4.xyz;\n   
            u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_6.xyz
            = u_xlat10_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz =
            u_xlat16_4.xyz * u_xlat16_6.xyz;\n    u_xlat16_1.xyz = u_xlat16_5.xyz
            * u_xlat16_8.xyz + u_xlat16_4.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz
            + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump sampler2D
            _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat21;\nbool u_xlatb21;\nfloat
            u_xlat23;\nmediump float u_xlat16_25;\nvoid main()\n{\n    u_xlat16_0
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb21 = u_xlat16_1.x<0.0;\n    if(u_xlatb21){discard;}\n   
            u_xlat21 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat23 = u_xlat21 + u_xlat21;\n    u_xlat21 = u_xlat21;\n   
            u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat16_1.x = (-u_xlat21)
            + 1.0;\n    u_xlat3.xyz = u_xlat2.xyz * (-vec3(u_xlat23)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat21 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat21
            = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat16_8.xyz = vec3(u_xlat21) * _LightColor0.xyz;\n   
            u_xlat21 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat21
            = u_xlat21 * u_xlat21;\n    u_xlat2.x = u_xlat21 * u_xlat21;\n    u_xlat2.z
            = (-_Glossiness) + 1.0;\n    u_xlat21 = texture(unity_NHxRoughness, u_xlat2.xz).x;\n   
            u_xlat21 = u_xlat21 * 16.0;\n    u_xlat16_4.xyz = u_xlat16_0.xyz * _Color.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz =
            u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.xyz = vec3(u_xlat21) * u_xlat16_4.xyz;\n   
            u_xlat16_25 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz
            = u_xlat0.xyz * vec3(u_xlat16_25) + u_xlat16_5.xyz;\n    u_xlat16_25
            = (-u_xlat16_25) + 1.0;\n    u_xlat16_25 = u_xlat16_25 + _Glossiness;\n   
            u_xlat16_25 = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat16_6.xyz = (-u_xlat16_4.xyz)
            + vec3(u_xlat16_25);\n    u_xlat0.x = u_xlat16_1.x * u_xlat16_1.x;\n   
            u_xlat0.x = u_xlat16_1.x * u_xlat0.x;\n    u_xlat0.x = u_xlat16_1.x *
            u_xlat0.x;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat16_4.xyz;\n   
            u_xlat16_0.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_6.xyz
            = u_xlat16_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz =
            u_xlat16_4.xyz * u_xlat16_6.xyz;\n    u_xlat16_1.xyz = u_xlat16_5.xyz
            * u_xlat16_8.xyz + u_xlat16_4.xyz;\n    u_xlat16_0.xyz = texture(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz * _EmissionColor.xyz
            + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D
            unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3
            u_xlat6;\nlowp vec3 u_xlat10_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat18;\nmediump
            float u_xlat16_21;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot((-vs_TEXCOORD1.xyz),
            u_xlat0.xyz);\n    u_xlat1.x = u_xlat18 + u_xlat18;\n    u_xlat18 = u_xlat18;\n   
            u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat16_2.x = (-u_xlat18)
            + 1.0;\n    u_xlat1.xyz = u_xlat0.xyz * (-u_xlat1.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_8.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_6.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_3.xyz = _Color.xyz
            * u_xlat10_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat6.xyz = u_xlat10_6.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n   
            u_xlat16_21 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz
            = u_xlat6.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;\n    u_xlat16_21
            = (-u_xlat16_21) + 1.0;\n    u_xlat16_21 = u_xlat16_21 + _Glossiness;\n   
            u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_3.xyz)
            + vec3(u_xlat16_21);\n    u_xlat0.x = u_xlat16_2.x * u_xlat16_2.x;\n   
            u_xlat0.x = u_xlat16_2.x * u_xlat0.x;\n    u_xlat0.x = u_xlat16_2.x *
            u_xlat0.x;\n    u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat16_3.xyz;\n   
            u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_5.xyz
            = u_xlat10_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_3.xyz =
            u_xlat16_3.xyz * u_xlat16_5.xyz;\n    u_xlat16_2.xyz = u_xlat16_4.xyz
            * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz
            + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump sampler2D _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3
            u_xlat16_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat18;\nmediump float
            u_xlat16_21;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n   
            u_xlat1.x = u_xlat18 + u_xlat18;\n    u_xlat18 = u_xlat18;\n    u_xlat18
            = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat16_2.x = (-u_xlat18) + 1.0;\n   
            u_xlat1.xyz = u_xlat0.xyz * (-u_xlat1.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_8.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_6.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_3.xyz = _Color.xyz
            * u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat6.xyz = u_xlat16_6.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n   
            u_xlat16_21 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz
            = u_xlat6.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;\n    u_xlat16_21
            = (-u_xlat16_21) + 1.0;\n    u_xlat16_21 = u_xlat16_21 + _Glossiness;\n   
            u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_3.xyz)
            + vec3(u_xlat16_21);\n    u_xlat0.x = u_xlat16_2.x * u_xlat16_2.x;\n   
            u_xlat0.x = u_xlat16_2.x * u_xlat0.x;\n    u_xlat0.x = u_xlat16_2.x *
            u_xlat0.x;\n    u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat16_3.xyz;\n   
            u_xlat16_0.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_5.xyz
            = u_xlat16_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_3.xyz =
            u_xlat16_3.xyz * u_xlat16_5.xyz;\n    u_xlat16_2.xyz = u_xlat16_4.xyz
            * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat16_0.xyz = texture(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz * _EmissionColor.xyz
            + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp sampler2D _EmissionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_13;\nfloat
            u_xlat27;\nbool u_xlatb27;\nmediump float u_xlat16_28;\nfloat u_xlat29;\nvoid
            main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.x = u_xlat10_0.w * _Color.w + (-_Cutoff);\n    u_xlatb27 =
            u_xlat16_1.x<0.0;\n    if(u_xlatb27){discard;}\n    u_xlat27 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat2.xyz
            = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat29 = u_xlat27;\n    u_xlat29 = clamp(u_xlat29,
            0.0, 1.0);\n    u_xlat27 = u_xlat27 + u_xlat27;\n    u_xlat3.xyz = u_xlat2.xyz
            * (-vec3(u_xlat27)) + (-vs_TEXCOORD1.xyz);\n    u_xlat27 = dot(u_xlat2.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n   
            u_xlat16_1.xyz = vec3(u_xlat27) * _LightColor0.xyz;\n    u_xlat27 = dot(u_xlat3.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat27 = u_xlat27 * u_xlat27;\n   
            u_xlat2.x = u_xlat27 * u_xlat27;\n    u_xlat16_28 = (-u_xlat29) + 1.0;\n   
            u_xlat27 = u_xlat16_28 * u_xlat16_28;\n    u_xlat27 = u_xlat16_28 * u_xlat27;\n   
            u_xlat27 = u_xlat16_28 * u_xlat27;\n    u_xlat16_28 = (-_Metallic) *
            0.779083729 + 0.779083729;\n    u_xlat16_4.x = (-u_xlat16_28) + 1.0;\n   
            u_xlat16_4.x = u_xlat16_4.x + _Glossiness;\n    u_xlat16_4.x = clamp(u_xlat16_4.x,
            0.0, 1.0);\n    u_xlat16_13.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_5.xyz = vec3(u_xlat16_28) * u_xlat0.xyz;\n    u_xlat16_13.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_6.xyz = (-u_xlat16_13.xyz) +
            u_xlat16_4.xxx;\n    u_xlat16_6.xyz = vec3(u_xlat27) * u_xlat16_6.xyz
            + u_xlat16_13.xyz;\n    u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_7.xyz = u_xlat10_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_8.xyz
            = u_xlat10_0.xxx * vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            * u_xlat16_7.xyz;\n    u_xlat16_6.xyz = u_xlat16_8.xyz * u_xlat16_5.xyz
            + u_xlat16_6.xyz;\n    u_xlat2.z = (-_Glossiness) + 1.0;\n    u_xlat0.x
            = texture2D(unity_NHxRoughness, u_xlat2.xz).x;\n    u_xlat0.x = u_xlat0.x
            * 16.0;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_13.xyz + u_xlat16_5.xyz;\n   
            u_xlat16_1.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat16_6.xyz;\n   
            u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4
            u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump sampler2D
            _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_13;\nfloat u_xlat27;\nbool u_xlatb27;\nmediump
            float u_xlat16_28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat16_0 =
            texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb27 = u_xlat16_1.x<0.0;\n    if(u_xlatb27){discard;}\n   
            u_xlat27 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat2.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat27 = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat29 = u_xlat27;\n    u_xlat29 = clamp(u_xlat29,
            0.0, 1.0);\n    u_xlat27 = u_xlat27 + u_xlat27;\n    u_xlat3.xyz = u_xlat2.xyz
            * (-vec3(u_xlat27)) + (-vs_TEXCOORD1.xyz);\n    u_xlat27 = dot(u_xlat2.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n   
            u_xlat16_1.xyz = vec3(u_xlat27) * _LightColor0.xyz;\n    u_xlat27 = dot(u_xlat3.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat27 = u_xlat27 * u_xlat27;\n   
            u_xlat2.x = u_xlat27 * u_xlat27;\n    u_xlat16_28 = (-u_xlat29) + 1.0;\n   
            u_xlat27 = u_xlat16_28 * u_xlat16_28;\n    u_xlat27 = u_xlat16_28 * u_xlat27;\n   
            u_xlat27 = u_xlat16_28 * u_xlat27;\n    u_xlat16_28 = (-_Metallic) *
            0.779083729 + 0.779083729;\n    u_xlat16_4.x = (-u_xlat16_28) + 1.0;\n   
            u_xlat16_4.x = u_xlat16_4.x + _Glossiness;\n    u_xlat16_4.x = clamp(u_xlat16_4.x,
            0.0, 1.0);\n    u_xlat16_13.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_5.xyz = vec3(u_xlat16_28) * u_xlat0.xyz;\n    u_xlat16_13.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_13.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_6.xyz = (-u_xlat16_13.xyz) +
            u_xlat16_4.xxx;\n    u_xlat16_6.xyz = vec3(u_xlat27) * u_xlat16_6.xyz
            + u_xlat16_13.xyz;\n    u_xlat16_0.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_7.xyz = u_xlat16_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_8.xyz
            = u_xlat16_0.xxx * vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = u_xlat16_6.xyz
            * u_xlat16_7.xyz;\n    u_xlat16_6.xyz = u_xlat16_8.xyz * u_xlat16_5.xyz
            + u_xlat16_6.xyz;\n    u_xlat2.z = (-_Glossiness) + 1.0;\n    u_xlat0.x
            = texture(unity_NHxRoughness, u_xlat2.xz).x;\n    u_xlat0.x = u_xlat0.x
            * 16.0;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_13.xyz + u_xlat16_5.xyz;\n   
            u_xlat16_1.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat16_6.xyz;\n   
            u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D
            unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp
            vec3 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nfloat u_xlat8;\nlowp float u_xlat10_8;\nvec3 u_xlat9;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat24;\nmediump float u_xlat16_26;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat24 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n   
            u_xlat1.x = u_xlat24;\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n   
            u_xlat24 = u_xlat24 + u_xlat24;\n    u_xlat9.xyz = u_xlat0.xyz * (-vec3(u_xlat24))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat9.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat16_26 = (-u_xlat1.x) + 1.0;\n    u_xlat8 = u_xlat16_26 * u_xlat16_26;\n   
            u_xlat8 = u_xlat16_26 * u_xlat8;\n    u_xlat8 = u_xlat16_26 * u_xlat8;\n   
            u_xlat16_26 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.x
            = (-u_xlat16_26) + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x + _Glossiness;\n   
            u_xlat16_3.x = clamp(u_xlat16_3.x, 0.0, 1.0);\n    u_xlat10_1.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_11.xyz = _Color.xyz * u_xlat10_1.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz =
            u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat16_26)
            * u_xlat1.xyz;\n    u_xlat16_11.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_11.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_5.xyz = (-u_xlat16_11.xyz) + u_xlat16_3.xxx;\n    u_xlat16_5.xyz
            = vec3(u_xlat8) * u_xlat16_5.xyz + u_xlat16_11.xyz;\n    u_xlat10_8 =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_6.xyz = vec3(u_xlat10_8)
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10_8)
            * vs_TEXCOORD5.xyz;\n    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz;\n   
            u_xlat16_5.xyz = u_xlat16_7.xyz * u_xlat16_4.xyz + u_xlat16_5.xyz;\n   
            u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_3.xyz
            = u_xlat0.xxx * u_xlat16_11.xyz + u_xlat16_4.xyz;\n    u_xlat16_2.xyz
            = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat16_5.xyz;\n    u_xlat10_0.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_2.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4
            u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump sampler2D _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4
            vs_TEXCOORD5;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat
            u_xlat8;\nmediump float u_xlat16_8;\nvec3 u_xlat9;\nmediump vec3 u_xlat16_11;\nfloat
            u_xlat24;\nmediump float u_xlat16_26;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat24 = dot((-vs_TEXCOORD1.xyz),
            u_xlat0.xyz);\n    u_xlat1.x = u_xlat24;\n    u_xlat1.x = clamp(u_xlat1.x,
            0.0, 1.0);\n    u_xlat24 = u_xlat24 + u_xlat24;\n    u_xlat9.xyz = u_xlat0.xyz
            * (-vec3(u_xlat24)) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat9.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat16_26 = (-u_xlat1.x) +
            1.0;\n    u_xlat8 = u_xlat16_26 * u_xlat16_26;\n    u_xlat8 = u_xlat16_26
            * u_xlat8;\n    u_xlat8 = u_xlat16_26 * u_xlat8;\n    u_xlat16_26 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.x = (-u_xlat16_26) + 1.0;\n   
            u_xlat16_3.x = u_xlat16_3.x + _Glossiness;\n    u_xlat16_3.x = clamp(u_xlat16_3.x,
            0.0, 1.0);\n    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_11.xyz = _Color.xyz * u_xlat16_1.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_4.xyz
            = vec3(u_xlat16_26) * u_xlat1.xyz;\n    u_xlat16_11.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_11.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.xyz = (-u_xlat16_11.xyz) + u_xlat16_3.xxx;\n   
            u_xlat16_5.xyz = vec3(u_xlat8) * u_xlat16_5.xyz + u_xlat16_11.xyz;\n   
            u_xlat16_8 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_6.xyz
            = vec3(u_xlat16_8) * unity_IndirectSpecColor.xyz;\n    u_xlat16_7.xyz
            = vec3(u_xlat16_8) * vs_TEXCOORD5.xyz;\n    u_xlat16_5.xyz = u_xlat16_5.xyz
            * u_xlat16_6.xyz;\n    u_xlat16_5.xyz = u_xlat16_7.xyz * u_xlat16_4.xyz
            + u_xlat16_5.xyz;\n    u_xlat0.z = (-_Glossiness) + 1.0;\n    u_xlat0.x
            = texture(unity_NHxRoughness, u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x
            * 16.0;\n    u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_11.xyz + u_xlat16_4.xyz;\n   
            u_xlat16_2.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat16_5.xyz;\n   
            u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_2.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp sampler2D _EmissionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvec3
            u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat21;\nbool u_xlatb21;\nfloat
            u_xlat23;\nmediump float u_xlat16_25;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb21 = u_xlat16_1.x<0.0;\n    if(u_xlatb21){discard;}\n   
            u_xlat21 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat23 = u_xlat21 + u_xlat21;\n    u_xlat21 = u_xlat21;\n   
            u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat16_1.x = (-u_xlat21)
            + 1.0;\n    u_xlat3.xyz = u_xlat2.xyz * (-vec3(u_xlat23)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat21 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat21
            = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat16_8.xyz = vec3(u_xlat21) * _LightColor0.xyz;\n   
            u_xlat21 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat21
            = u_xlat21 * u_xlat21;\n    u_xlat2.x = u_xlat21 * u_xlat21;\n    u_xlat2.z
            = (-_Glossiness) + 1.0;\n    u_xlat21 = texture2D(unity_NHxRoughness,
            u_xlat2.xz).x;\n    u_xlat21 = u_xlat21 * 16.0;\n    u_xlat16_4.xyz =
            u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.xyz = vec3(u_xlat21) * u_xlat16_4.xyz;\n   
            u_xlat16_25 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz
            = u_xlat0.xyz * vec3(u_xlat16_25) + u_xlat16_5.xyz;\n    u_xlat16_25
            = (-u_xlat16_25) + 1.0;\n    u_xlat16_25 = u_xlat16_25 + _Glossiness;\n   
            u_xlat16_25 = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat16_6.xyz = (-u_xlat16_4.xyz)
            + vec3(u_xlat16_25);\n    u_xlat0.x = u_xlat16_1.x * u_xlat16_1.x;\n   
            u_xlat0.x = u_xlat16_1.x * u_xlat0.x;\n    u_xlat0.x = u_xlat16_1.x *
            u_xlat0.x;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat16_4.xyz;\n   
            u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_6.xyz
            = u_xlat10_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz =
            u_xlat16_4.xyz * u_xlat16_6.xyz;\n    u_xlat16_1.xyz = u_xlat16_5.xyz
            * u_xlat16_8.xyz + u_xlat16_4.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz
            + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump sampler2D
            _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat21;\nbool u_xlatb21;\nfloat
            u_xlat23;\nmediump float u_xlat16_25;\nvoid main()\n{\n    u_xlat16_0
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb21 = u_xlat16_1.x<0.0;\n    if(u_xlatb21){discard;}\n   
            u_xlat21 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat23 = u_xlat21 + u_xlat21;\n    u_xlat21 = u_xlat21;\n   
            u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat16_1.x = (-u_xlat21)
            + 1.0;\n    u_xlat3.xyz = u_xlat2.xyz * (-vec3(u_xlat23)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat21 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat21
            = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat16_8.xyz = vec3(u_xlat21) * _LightColor0.xyz;\n   
            u_xlat21 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat21
            = u_xlat21 * u_xlat21;\n    u_xlat2.x = u_xlat21 * u_xlat21;\n    u_xlat2.z
            = (-_Glossiness) + 1.0;\n    u_xlat21 = texture(unity_NHxRoughness, u_xlat2.xz).x;\n   
            u_xlat21 = u_xlat21 * 16.0;\n    u_xlat16_4.xyz = u_xlat16_0.xyz * _Color.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz =
            u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_5.xyz = vec3(u_xlat21) * u_xlat16_4.xyz;\n   
            u_xlat16_25 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz
            = u_xlat0.xyz * vec3(u_xlat16_25) + u_xlat16_5.xyz;\n    u_xlat16_25
            = (-u_xlat16_25) + 1.0;\n    u_xlat16_25 = u_xlat16_25 + _Glossiness;\n   
            u_xlat16_25 = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat16_6.xyz = (-u_xlat16_4.xyz)
            + vec3(u_xlat16_25);\n    u_xlat0.x = u_xlat16_1.x * u_xlat16_1.x;\n   
            u_xlat0.x = u_xlat16_1.x * u_xlat0.x;\n    u_xlat0.x = u_xlat16_1.x *
            u_xlat0.x;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat16_4.xyz;\n   
            u_xlat16_0.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_6.xyz
            = u_xlat16_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_4.xyz =
            u_xlat16_4.xyz * u_xlat16_6.xyz;\n    u_xlat16_1.xyz = u_xlat16_5.xyz
            * u_xlat16_8.xyz + u_xlat16_4.xyz;\n    u_xlat16_0.xyz = texture(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz * _EmissionColor.xyz
            + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform lowp sampler2D
            _EmissionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nlowp vec3
            u_xlat10_5;\nmediump vec3 u_xlat16_7;\nfloat u_xlat15;\nmediump float
            u_xlat16_16;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat15 = dot(u_xlat0.xyz, (-vs_TEXCOORD1.xyz));\n   
            u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_16 = (-u_xlat15)
            + 1.0;\n    u_xlat0.x = u_xlat16_16 * u_xlat16_16;\n    u_xlat0.x = u_xlat16_16
            * u_xlat0.x;\n    u_xlat0.x = u_xlat16_16 * u_xlat0.x;\n    u_xlat16_16
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_2.x = (-u_xlat16_16)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x + _Glossiness;\n    u_xlat16_2.x
            = clamp(u_xlat16_2.x, 0.0, 1.0);\n    u_xlat10_5.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_5.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat5.xyz =
            u_xlat10_5.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(u_xlat16_16)
            * u_xlat5.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.xyz = (-u_xlat16_7.xyz) + u_xlat16_2.xxx;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat16_7.xyz;\n    u_xlat10_0.x =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = u_xlat10_0.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz *
            u_xlat16_4.xyz;\n    u_xlat16_1.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz
            + u_xlat16_2.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_7;\nfloat u_xlat15;\nmediump
            float u_xlat16_16;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot(u_xlat0.xyz, (-vs_TEXCOORD1.xyz));\n   
            u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_16 = (-u_xlat15)
            + 1.0;\n    u_xlat0.x = u_xlat16_16 * u_xlat16_16;\n    u_xlat0.x = u_xlat16_16
            * u_xlat0.x;\n    u_xlat0.x = u_xlat16_16 * u_xlat0.x;\n    u_xlat16_16
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_2.x = (-u_xlat16_16)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x + _Glossiness;\n    u_xlat16_2.x
            = clamp(u_xlat16_2.x, 0.0, 1.0);\n    u_xlat16_5.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat16_5.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat5.xyz =
            u_xlat16_5.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(u_xlat16_16)
            * u_xlat5.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.xyz = (-u_xlat16_7.xyz) + u_xlat16_2.xxx;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat16_7.xyz;\n    u_xlat16_0.x =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = u_xlat16_0.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz *
            u_xlat16_4.xyz;\n    u_xlat16_1.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz
            + u_xlat16_2.xyz;\n    u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nvarying highp vec4
            vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying
            mediump vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3
            u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nfloat u_xlat21;\nbool u_xlatb21;\nmediump float u_xlat16_22;\nmediump
            float u_xlat16_24;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat10_0.w * _Color.w + (-_Cutoff);\n   
            u_xlatb21 = u_xlat16_1.x<0.0;\n    if(u_xlatb21){discard;}\n    u_xlat21
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(u_xlat2.xyz,
            (-vs_TEXCOORD1.xyz));\n    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n   
            u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat2.xxx * _LightColor0.xyz;\n   
            u_xlat16_22 = (-u_xlat21) + 1.0;\n    u_xlat21 = u_xlat16_22 * u_xlat16_22;\n   
            u_xlat21 = u_xlat16_22 * u_xlat21;\n    u_xlat21 = u_xlat16_22 * u_xlat21;\n   
            u_xlat16_3.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_3.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_22 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_24 = (-u_xlat16_22) + 1.0;\n    u_xlat16_4.xyz
            = u_xlat0.xyz * vec3(u_xlat16_22);\n    u_xlat16_22 = u_xlat16_24 + _Glossiness;\n   
            u_xlat16_22 = clamp(u_xlat16_22, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_3.xyz)
            + vec3(u_xlat16_22);\n    u_xlat16_3.xyz = vec3(u_xlat21) * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_5.xyz = u_xlat10_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_6.xyz
            = u_xlat10_0.xxx * vs_TEXCOORD5.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz
            * u_xlat16_5.xyz;\n    u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_1.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz
            + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump
            sampler2D _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3
            u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nbool u_xlatb21;\nmediump float u_xlat16_22;\nmediump float
            u_xlat16_24;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.x = u_xlat16_0.w * _Color.w + (-_Cutoff);\n    u_xlatb21 =
            u_xlat16_1.x<0.0;\n    if(u_xlatb21){discard;}\n    u_xlat21 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz
            = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(u_xlat2.xyz,
            (-vs_TEXCOORD1.xyz));\n    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n   
            u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat2.xxx * _LightColor0.xyz;\n   
            u_xlat16_22 = (-u_xlat21) + 1.0;\n    u_xlat21 = u_xlat16_22 * u_xlat16_22;\n   
            u_xlat21 = u_xlat16_22 * u_xlat21;\n    u_xlat21 = u_xlat16_22 * u_xlat21;\n   
            u_xlat16_3.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_3.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_22 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_24 = (-u_xlat16_22) + 1.0;\n    u_xlat16_4.xyz
            = u_xlat0.xyz * vec3(u_xlat16_22);\n    u_xlat16_22 = u_xlat16_24 + _Glossiness;\n   
            u_xlat16_22 = clamp(u_xlat16_22, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_3.xyz)
            + vec3(u_xlat16_22);\n    u_xlat16_3.xyz = vec3(u_xlat21) * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_0.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_5.xyz = u_xlat16_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_6.xyz
            = u_xlat16_0.xxx * vs_TEXCOORD5.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz
            * u_xlat16_5.xyz;\n    u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_1.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform lowp sampler2D
            _EmissionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define
            SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump
            vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nlowp vec3
            u_xlat10_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat18;\nmediump float
            u_xlat16_19;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(u_xlat0.xyz, (-vs_TEXCOORD1.xyz));\n   
            u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_19 = (-u_xlat18)
            + 1.0;\n    u_xlat0.x = u_xlat16_19 * u_xlat16_19;\n    u_xlat0.x = u_xlat16_19
            * u_xlat0.x;\n    u_xlat0.x = u_xlat16_19 * u_xlat0.x;\n    u_xlat16_19
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_2.x = (-u_xlat16_19)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x + _Glossiness;\n    u_xlat16_2.x
            = clamp(u_xlat16_2.x, 0.0, 1.0);\n    u_xlat10_6.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_8.xyz = _Color.xyz * u_xlat10_6.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat6.xyz =
            u_xlat10_6.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(u_xlat16_19)
            * u_xlat6.xyz;\n    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.xyz = (-u_xlat16_8.xyz) + u_xlat16_2.xxx;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat16_8.xyz;\n    u_xlat10_0.x =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = u_xlat10_0.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_5.xyz = u_xlat10_0.xxx *
            vs_TEXCOORD5.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_4.xyz;\n   
            u_xlat16_2.xyz = u_xlat16_5.xyz * u_xlat16_3.xyz + u_xlat16_2.xyz;\n   
            u_xlat16_1.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz + u_xlat16_2.xyz;\n   
            u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3
            u_xlat16_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat18;\nmediump float
            u_xlat16_19;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(u_xlat0.xyz, (-vs_TEXCOORD1.xyz));\n   
            u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_19 = (-u_xlat18)
            + 1.0;\n    u_xlat0.x = u_xlat16_19 * u_xlat16_19;\n    u_xlat0.x = u_xlat16_19
            * u_xlat0.x;\n    u_xlat0.x = u_xlat16_19 * u_xlat0.x;\n    u_xlat16_19
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_2.x = (-u_xlat16_19)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x + _Glossiness;\n    u_xlat16_2.x
            = clamp(u_xlat16_2.x, 0.0, 1.0);\n    u_xlat16_6.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_8.xyz = _Color.xyz * u_xlat16_6.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat6.xyz =
            u_xlat16_6.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(u_xlat16_19)
            * u_xlat6.xyz;\n    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.xyz = (-u_xlat16_8.xyz) + u_xlat16_2.xxx;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat16_8.xyz;\n    u_xlat16_0.x =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = u_xlat16_0.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_5.xyz = u_xlat16_0.xxx *
            vs_TEXCOORD5.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_4.xyz;\n   
            u_xlat16_2.xyz = u_xlat16_5.xyz * u_xlat16_3.xyz + u_xlat16_2.xyz;\n   
            u_xlat16_1.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz + u_xlat16_2.xyz;\n   
            u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nvarying highp vec4
            vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define
            SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump
            vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3
            u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat u_xlat18;\nbool u_xlatb18;\nmediump
            float u_xlat16_19;\nmediump float u_xlat16_21;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb18 = u_xlat16_1.x<0.0;\n    if(u_xlatb18){discard;}\n   
            u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n   
            u_xlat2.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(u_xlat2.xyz,
            (-vs_TEXCOORD1.xyz));\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n   
            u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat2.xxx * _LightColor0.xyz;\n   
            u_xlat16_19 = (-u_xlat18) + 1.0;\n    u_xlat18 = u_xlat16_19 * u_xlat16_19;\n   
            u_xlat18 = u_xlat16_19 * u_xlat18;\n    u_xlat18 = u_xlat16_19 * u_xlat18;\n   
            u_xlat16_3.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_3.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_19 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_21 = (-u_xlat16_19) + 1.0;\n    u_xlat16_4.xyz
            = u_xlat0.xyz * vec3(u_xlat16_19);\n    u_xlat16_19 = u_xlat16_21 + _Glossiness;\n   
            u_xlat16_19 = clamp(u_xlat16_19, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_3.xyz)
            + vec3(u_xlat16_19);\n    u_xlat16_3.xyz = vec3(u_xlat18) * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_5.xyz = u_xlat10_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * u_xlat16_5.xyz;\n    u_xlat16_1.xyz = u_xlat16_4.xyz
            * u_xlat16_1.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz
            + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump
            sampler2D _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat
            u_xlat18;\nbool u_xlatb18;\nmediump float u_xlat16_19;\nmediump float
            u_xlat16_21;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.x = u_xlat16_0.w * _Color.w + (-_Cutoff);\n    u_xlatb18 =
            u_xlat16_1.x<0.0;\n    if(u_xlatb18){discard;}\n    u_xlat18 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat2.xyz
            = vec3(u_xlat18) * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(u_xlat2.xyz,
            (-vs_TEXCOORD1.xyz));\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n   
            u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat2.xxx * _LightColor0.xyz;\n   
            u_xlat16_19 = (-u_xlat18) + 1.0;\n    u_xlat18 = u_xlat16_19 * u_xlat16_19;\n   
            u_xlat18 = u_xlat16_19 * u_xlat18;\n    u_xlat18 = u_xlat16_19 * u_xlat18;\n   
            u_xlat16_3.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_3.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_19 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_21 = (-u_xlat16_19) + 1.0;\n    u_xlat16_4.xyz
            = u_xlat0.xyz * vec3(u_xlat16_19);\n    u_xlat16_19 = u_xlat16_21 + _Glossiness;\n   
            u_xlat16_19 = clamp(u_xlat16_19, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_3.xyz)
            + vec3(u_xlat16_19);\n    u_xlat16_3.xyz = vec3(u_xlat18) * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_0.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_5.xyz = u_xlat16_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * u_xlat16_5.xyz;\n    u_xlat16_1.xyz = u_xlat16_4.xyz
            * u_xlat16_1.xyz + u_xlat16_3.xyz;\n    u_xlat16_0.xyz = texture(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz * _EmissionColor.xyz
            + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform lowp sampler2D
            _EmissionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nlowp vec3
            u_xlat10_5;\nmediump vec3 u_xlat16_7;\nfloat u_xlat15;\nmediump float
            u_xlat16_16;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat15 = dot(u_xlat0.xyz, (-vs_TEXCOORD1.xyz));\n   
            u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_16 = (-u_xlat15)
            + 1.0;\n    u_xlat0.x = u_xlat16_16 * u_xlat16_16;\n    u_xlat0.x = u_xlat16_16
            * u_xlat0.x;\n    u_xlat0.x = u_xlat16_16 * u_xlat0.x;\n    u_xlat16_16
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_2.x = (-u_xlat16_16)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x + _Glossiness;\n    u_xlat16_2.x
            = clamp(u_xlat16_2.x, 0.0, 1.0);\n    u_xlat10_5.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_5.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat5.xyz =
            u_xlat10_5.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(u_xlat16_16)
            * u_xlat5.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.xyz = (-u_xlat16_7.xyz) + u_xlat16_2.xxx;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat16_7.xyz;\n    u_xlat10_0.x =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = u_xlat10_0.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz *
            u_xlat16_4.xyz;\n    u_xlat16_1.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz
            + u_xlat16_2.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_7;\nfloat u_xlat15;\nmediump
            float u_xlat16_16;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot(u_xlat0.xyz, (-vs_TEXCOORD1.xyz));\n   
            u_xlat15 = clamp(u_xlat15, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_16 = (-u_xlat15)
            + 1.0;\n    u_xlat0.x = u_xlat16_16 * u_xlat16_16;\n    u_xlat0.x = u_xlat16_16
            * u_xlat0.x;\n    u_xlat0.x = u_xlat16_16 * u_xlat0.x;\n    u_xlat16_16
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_2.x = (-u_xlat16_16)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x + _Glossiness;\n    u_xlat16_2.x
            = clamp(u_xlat16_2.x, 0.0, 1.0);\n    u_xlat16_5.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat16_5.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat5.xyz =
            u_xlat16_5.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(u_xlat16_16)
            * u_xlat5.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.xyz = (-u_xlat16_7.xyz) + u_xlat16_2.xxx;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat16_7.xyz;\n    u_xlat16_0.x =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = u_xlat16_0.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz *
            u_xlat16_4.xyz;\n    u_xlat16_1.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz
            + u_xlat16_2.xyz;\n    u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nvarying highp vec4
            vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying
            mediump vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3
            u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nfloat u_xlat21;\nbool u_xlatb21;\nmediump float u_xlat16_22;\nmediump
            float u_xlat16_24;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat10_0.w * _Color.w + (-_Cutoff);\n   
            u_xlatb21 = u_xlat16_1.x<0.0;\n    if(u_xlatb21){discard;}\n    u_xlat21
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(u_xlat2.xyz,
            (-vs_TEXCOORD1.xyz));\n    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n   
            u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat2.xxx * _LightColor0.xyz;\n   
            u_xlat16_22 = (-u_xlat21) + 1.0;\n    u_xlat21 = u_xlat16_22 * u_xlat16_22;\n   
            u_xlat21 = u_xlat16_22 * u_xlat21;\n    u_xlat21 = u_xlat16_22 * u_xlat21;\n   
            u_xlat16_3.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_3.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_22 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_24 = (-u_xlat16_22) + 1.0;\n    u_xlat16_4.xyz
            = u_xlat0.xyz * vec3(u_xlat16_22);\n    u_xlat16_22 = u_xlat16_24 + _Glossiness;\n   
            u_xlat16_22 = clamp(u_xlat16_22, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_3.xyz)
            + vec3(u_xlat16_22);\n    u_xlat16_3.xyz = vec3(u_xlat21) * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_5.xyz = u_xlat10_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_6.xyz
            = u_xlat10_0.xxx * vs_TEXCOORD5.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz
            * u_xlat16_5.xyz;\n    u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_1.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz
            + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4
            u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump
            sampler2D _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3
            u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nbool u_xlatb21;\nmediump float u_xlat16_22;\nmediump float
            u_xlat16_24;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.x = u_xlat16_0.w * _Color.w + (-_Cutoff);\n    u_xlatb21 =
            u_xlat16_1.x<0.0;\n    if(u_xlatb21){discard;}\n    u_xlat21 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz
            = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(u_xlat2.xyz,
            (-vs_TEXCOORD1.xyz));\n    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n   
            u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat2.xxx * _LightColor0.xyz;\n   
            u_xlat16_22 = (-u_xlat21) + 1.0;\n    u_xlat21 = u_xlat16_22 * u_xlat16_22;\n   
            u_xlat21 = u_xlat16_22 * u_xlat21;\n    u_xlat21 = u_xlat16_22 * u_xlat21;\n   
            u_xlat16_3.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_3.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_22 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_24 = (-u_xlat16_22) + 1.0;\n    u_xlat16_4.xyz
            = u_xlat0.xyz * vec3(u_xlat16_22);\n    u_xlat16_22 = u_xlat16_24 + _Glossiness;\n   
            u_xlat16_22 = clamp(u_xlat16_22, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_3.xyz)
            + vec3(u_xlat16_22);\n    u_xlat16_3.xyz = vec3(u_xlat21) * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_0.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_5.xyz = u_xlat16_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_6.xyz
            = u_xlat16_0.xxx * vs_TEXCOORD5.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz
            * u_xlat16_5.xyz;\n    u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_1.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n   
            SV_Target0.xyz = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform lowp sampler2D
            _EmissionMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define
            SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump
            vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nlowp vec3
            u_xlat10_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat18;\nmediump float
            u_xlat16_19;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(u_xlat0.xyz, (-vs_TEXCOORD1.xyz));\n   
            u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_19 = (-u_xlat18)
            + 1.0;\n    u_xlat0.x = u_xlat16_19 * u_xlat16_19;\n    u_xlat0.x = u_xlat16_19
            * u_xlat0.x;\n    u_xlat0.x = u_xlat16_19 * u_xlat0.x;\n    u_xlat16_19
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_2.x = (-u_xlat16_19)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x + _Glossiness;\n    u_xlat16_2.x
            = clamp(u_xlat16_2.x, 0.0, 1.0);\n    u_xlat10_6.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_8.xyz = _Color.xyz * u_xlat10_6.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat6.xyz =
            u_xlat10_6.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(u_xlat16_19)
            * u_xlat6.xyz;\n    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.xyz = (-u_xlat16_8.xyz) + u_xlat16_2.xxx;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat16_8.xyz;\n    u_xlat10_0.x =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = u_xlat10_0.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_5.xyz = u_xlat10_0.xxx *
            vs_TEXCOORD5.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_4.xyz;\n   
            u_xlat16_2.xyz = u_xlat16_5.xyz * u_xlat16_3.xyz + u_xlat16_2.xyz;\n   
            u_xlat16_1.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz + u_xlat16_2.xyz;\n   
            u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4
            u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3
            u_xlat16_6;\nmediump vec3 u_xlat16_8;\nfloat u_xlat18;\nmediump float
            u_xlat16_19;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(u_xlat0.xyz, (-vs_TEXCOORD1.xyz));\n   
            u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n   
            u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_19 = (-u_xlat18)
            + 1.0;\n    u_xlat0.x = u_xlat16_19 * u_xlat16_19;\n    u_xlat0.x = u_xlat16_19
            * u_xlat0.x;\n    u_xlat0.x = u_xlat16_19 * u_xlat0.x;\n    u_xlat16_19
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_2.x = (-u_xlat16_19)
            + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x + _Glossiness;\n    u_xlat16_2.x
            = clamp(u_xlat16_2.x, 0.0, 1.0);\n    u_xlat16_6.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat16_8.xyz = _Color.xyz * u_xlat16_6.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat6.xyz =
            u_xlat16_6.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(u_xlat16_19)
            * u_xlat6.xyz;\n    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic,
            _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n   
            u_xlat16_4.xyz = (-u_xlat16_8.xyz) + u_xlat16_2.xxx;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat16_8.xyz;\n    u_xlat16_0.x =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = u_xlat16_0.xxx
            * unity_IndirectSpecColor.xyz;\n    u_xlat16_5.xyz = u_xlat16_0.xxx *
            vs_TEXCOORD5.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_4.xyz;\n   
            u_xlat16_2.xyz = u_xlat16_5.xyz * u_xlat16_3.xyz + u_xlat16_2.xyz;\n   
            u_xlat16_1.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz + u_xlat16_2.xyz;\n   
            u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nvarying highp vec4
            vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define
            SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump
            vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3
            u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat u_xlat18;\nbool u_xlatb18;\nmediump
            float u_xlat16_19;\nmediump float u_xlat16_21;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb18 = u_xlat16_1.x<0.0;\n    if(u_xlatb18){discard;}\n   
            u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n   
            u_xlat2.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(u_xlat2.xyz,
            (-vs_TEXCOORD1.xyz));\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n   
            u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat2.xxx * _LightColor0.xyz;\n   
            u_xlat16_19 = (-u_xlat18) + 1.0;\n    u_xlat18 = u_xlat16_19 * u_xlat16_19;\n   
            u_xlat18 = u_xlat16_19 * u_xlat18;\n    u_xlat18 = u_xlat16_19 * u_xlat18;\n   
            u_xlat16_3.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_3.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_19 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_21 = (-u_xlat16_19) + 1.0;\n    u_xlat16_4.xyz
            = u_xlat0.xyz * vec3(u_xlat16_19);\n    u_xlat16_19 = u_xlat16_21 + _Glossiness;\n   
            u_xlat16_19 = clamp(u_xlat16_19, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_3.xyz)
            + vec3(u_xlat16_19);\n    u_xlat16_3.xyz = vec3(u_xlat18) * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_5.xyz = u_xlat10_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * u_xlat16_5.xyz;\n    u_xlat16_1.xyz = u_xlat16_4.xyz
            * u_xlat16_1.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz
            + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_IndirectSpecColor;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump
            sampler2D _EmissionMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat
            u_xlat18;\nbool u_xlatb18;\nmediump float u_xlat16_19;\nmediump float
            u_xlat16_21;\nvoid main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.x = u_xlat16_0.w * _Color.w + (-_Cutoff);\n    u_xlatb18 =
            u_xlat16_1.x<0.0;\n    if(u_xlatb18){discard;}\n    u_xlat18 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat2.xyz
            = vec3(u_xlat18) * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(u_xlat2.xyz,
            (-vs_TEXCOORD1.xyz));\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n   
            u_xlat2.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat2.xxx * _LightColor0.xyz;\n   
            u_xlat16_19 = (-u_xlat18) + 1.0;\n    u_xlat18 = u_xlat16_19 * u_xlat16_19;\n   
            u_xlat18 = u_xlat16_19 * u_xlat18;\n    u_xlat18 = u_xlat16_19 * u_xlat18;\n   
            u_xlat16_3.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_3.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_19 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_21 = (-u_xlat16_19) + 1.0;\n    u_xlat16_4.xyz
            = u_xlat0.xyz * vec3(u_xlat16_19);\n    u_xlat16_19 = u_xlat16_21 + _Glossiness;\n   
            u_xlat16_19 = clamp(u_xlat16_19, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_3.xyz)
            + vec3(u_xlat16_19);\n    u_xlat16_3.xyz = vec3(u_xlat18) * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_0.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_5.xyz = u_xlat16_0.xxx * unity_IndirectSpecColor.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * u_xlat16_5.xyz;\n    u_xlat16_1.xyz = u_xlat16_4.xyz
            * u_xlat16_1.xyz + u_xlat16_3.xyz;\n    u_xlat16_0.xyz = texture(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz * _EmissionColor.xyz
            + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D
            unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp
            samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nvec3 u_xlat2;\nlowp vec3 u_xlat10_2;\nmediump vec3
            u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n   
            u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1
            = textureCubeLodEXT(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1);\n   
            u_xlat16_3.x = u_xlat10_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx;\n    u_xlat10_0.x =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat10_0.xxx
            * u_xlat16_3.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n   
            u_xlat16 = u_xlat0.x;\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n   
            u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx)
            + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_6.xyz = _Color.xyz * u_xlat10_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_6.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) +
            (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz
            + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat16_6.xyz = u_xlat2.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump sampler2D _EmissionMap;\nUNITY_LOCATION(4) uniform mediump
            samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1
            = textureLod(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1.x);\n    u_xlat16_3.x
            = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x
            + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xxx;\n    u_xlat16_0.x =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat16_0.xxx
            * u_xlat16_3.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n   
            u_xlat16 = u_xlat0.x;\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n   
            u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx)
            + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_6.xyz = _Color.xyz * u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_6.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) +
            (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz
            + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat16_6.xyz = u_xlat2.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    u_xlat16_0.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz
            * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3
            u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_12;\nfloat u_xlat33;\nlowp float u_xlat10_33;\nbool u_xlatb33;\nmediump
            float u_xlat16_37;\nmediump float u_xlat16_38;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb33 = u_xlat16_1<0.0;\n    if(u_xlatb33){discard;}\n   
            u_xlat2.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 =
            (-u_xlat2.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat16_1
            * u_xlat2.x;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat33 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat3.xyz
            = vec3(u_xlat33) * vs_TEXCOORD4.xyz;\n    u_xlat16_12.x = dot(vs_TEXCOORD1.xyz,
            u_xlat3.xyz);\n    u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;\n   
            u_xlat16_12.xyz = u_xlat3.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_12.xyz, u_xlat16_1);\n   
            u_xlat16_4.x = u_xlat10_1.w + -1.0;\n    u_xlat16_4.x = unity_SpecCube0_HDR.w
            * u_xlat16_4.x + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;\n    u_xlat10_33 =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_33)
            * u_xlat16_4.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat10_33) * vs_TEXCOORD5.xyz;\n   
            u_xlat33 = dot((-vs_TEXCOORD1.xyz), u_xlat3.xyz);\n    u_xlat2.x = u_xlat33;\n   
            u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat33 = u_xlat33 + u_xlat33;\n   
            u_xlat6.xyz = u_xlat3.xyz * (-vec3(u_xlat33)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat33 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat33
            = clamp(u_xlat33, 0.0, 1.0);\n    u_xlat16_7.xyz = vec3(u_xlat33) * _LightColor0.xyz;\n   
            u_xlat33 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat33
            = u_xlat33 * u_xlat33;\n    u_xlat2.y = u_xlat33 * u_xlat33;\n    u_xlat33
            = texture2D(unity_NHxRoughness, u_xlat2.yw).x;\n    u_xlat33 = u_xlat33
            * 16.0;\n    u_xlat16_37 = (-u_xlat2.x) + 1.0;\n    u_xlat2.x = u_xlat16_37
            * u_xlat16_37;\n    u_xlat2.x = u_xlat16_37 * u_xlat2.x;\n    u_xlat2.x
            = u_xlat16_37 * u_xlat2.x;\n    u_xlat16_37 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_38 = (-u_xlat16_37) + 1.0;\n    u_xlat16_38
            = u_xlat16_38 + _Glossiness;\n    u_xlat16_38 = clamp(u_xlat16_38, 0.0,
            1.0);\n    u_xlat16_8.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_9.xyz = vec3(u_xlat16_37) * u_xlat0.xyz;\n    u_xlat16_8.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_10.xyz = vec3(u_xlat16_38) +
            (-u_xlat16_8.xyz);\n    u_xlat16_10.xyz = u_xlat2.xxx * u_xlat16_10.xyz
            + u_xlat16_8.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat33) * u_xlat16_8.xyz
            + u_xlat16_9.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_5.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_8.xyz * u_xlat16_7.xyz + u_xlat16_4.xyz;\n   
            u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_4.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump sampler2D
            _EmissionMap;\nUNITY_LOCATION(4) uniform mediump samplerCube unity_SpecCube0;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3
            u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_12;\nfloat u_xlat33;\nmediump float u_xlat16_33;\nbool
            u_xlatb33;\nmediump float u_xlat16_37;\nmediump float u_xlat16_38;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.x = u_xlat16_0.w * _Color.w + (-_Cutoff);\n    u_xlatb33 =
            u_xlat16_1.x<0.0;\n    if(u_xlatb33){discard;}\n    u_xlat2.xw = (-vec2(_Glossiness))
            + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat2.x) * 0.699999988 + 1.70000005;\n   
            u_xlat16_1.x = u_xlat16_1.x * u_xlat2.x;\n    u_xlat16_1.x = u_xlat16_1.x
            * 6.0;\n    u_xlat33 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat3.xyz = vec3(u_xlat33) *
            vs_TEXCOORD4.xyz;\n    u_xlat16_12.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);\n   
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;\n    u_xlat16_12.xyz =
            u_xlat3.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1
            = textureLod(unity_SpecCube0, u_xlat16_12.xyz, u_xlat16_1.x);\n    u_xlat16_4.x
            = u_xlat16_1.w + -1.0;\n    u_xlat16_4.x = unity_SpecCube0_HDR.w * u_xlat16_4.x
            + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_4.xyz = u_xlat16_1.xyz * u_xlat16_4.xxx;\n    u_xlat16_33 =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat16_33)
            * u_xlat16_4.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat16_33) * vs_TEXCOORD5.xyz;\n   
            u_xlat33 = dot((-vs_TEXCOORD1.xyz), u_xlat3.xyz);\n    u_xlat2.x = u_xlat33;\n   
            u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat33 = u_xlat33 + u_xlat33;\n   
            u_xlat6.xyz = u_xlat3.xyz * (-vec3(u_xlat33)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat33 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat33
            = clamp(u_xlat33, 0.0, 1.0);\n    u_xlat16_7.xyz = vec3(u_xlat33) * _LightColor0.xyz;\n   
            u_xlat33 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat33
            = u_xlat33 * u_xlat33;\n    u_xlat2.y = u_xlat33 * u_xlat33;\n    u_xlat33
            = texture(unity_NHxRoughness, u_xlat2.yw).x;\n    u_xlat33 = u_xlat33
            * 16.0;\n    u_xlat16_37 = (-u_xlat2.x) + 1.0;\n    u_xlat2.x = u_xlat16_37
            * u_xlat16_37;\n    u_xlat2.x = u_xlat16_37 * u_xlat2.x;\n    u_xlat2.x
            = u_xlat16_37 * u_xlat2.x;\n    u_xlat16_37 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_38 = (-u_xlat16_37) + 1.0;\n    u_xlat16_38
            = u_xlat16_38 + _Glossiness;\n    u_xlat16_38 = clamp(u_xlat16_38, 0.0,
            1.0);\n    u_xlat16_8.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_9.xyz = vec3(u_xlat16_37) * u_xlat0.xyz;\n    u_xlat16_8.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_10.xyz = vec3(u_xlat16_38) +
            (-u_xlat16_8.xyz);\n    u_xlat16_10.xyz = u_xlat2.xxx * u_xlat16_10.xyz
            + u_xlat16_8.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat33) * u_xlat16_8.xyz
            + u_xlat16_9.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_5.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_8.xyz * u_xlat16_7.xyz + u_xlat16_4.xyz;\n   
            u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_4.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D
            unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp
            samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3
            u_xlat2;\nlowp vec3 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3
            u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat20;\nmediump float u_xlat16_33;\nmediump
            float u_xlat16_34;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness))
            + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n   
            u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat16_11.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n    u_xlat16_11.x
            = u_xlat16_11.x + u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat2.xyz *
            (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat16_11.xyz, u_xlat16_1);\n    u_xlat16_3.x = u_xlat10_1.w + -1.0;\n   
            u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x
            = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_1.xyz
            * u_xlat16_3.xxx;\n    u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_3.xyz = u_xlat10_0.xxx * u_xlat16_3.xyz;\n    u_xlat16_4.xyz
            = u_xlat10_0.xxx * vs_TEXCOORD5.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat20 = u_xlat0.x;\n    u_xlat20 = clamp(u_xlat20,
            0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat5.xyz =
            u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_33 = (-u_xlat20) + 1.0;\n    u_xlat10
            = u_xlat16_33 * u_xlat16_33;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n   
            u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat16_33 = (-_Metallic) *
            0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n   
            u_xlat16_34 = u_xlat16_34 + _Glossiness;\n    u_xlat16_34 = clamp(u_xlat16_34,
            0.0, 1.0);\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_7.xyz = _Color.xyz * u_xlat10_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_8.xyz
            = vec3(u_xlat16_33) * u_xlat2.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n   
            u_xlat16_9.xyz = vec3(u_xlat10) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump sampler2D _EmissionMap;\nUNITY_LOCATION(4) uniform mediump
            samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat20;\nmediump float
            u_xlat16_33;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_11.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;\n   
            u_xlat16_11.xyz = u_xlat2.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_11.xyz, u_xlat16_1.x);\n   
            u_xlat16_3.x = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xxx;\n    u_xlat16_0.x =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat16_0.xxx
            * u_xlat16_3.xyz;\n    u_xlat16_4.xyz = u_xlat16_0.xxx * vs_TEXCOORD5.xyz;\n   
            u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat20 = u_xlat0.x;\n   
            u_xlat20 = clamp(u_xlat20, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat5.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_33 = (-u_xlat20) + 1.0;\n    u_xlat10
            = u_xlat16_33 * u_xlat16_33;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n   
            u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat16_33 = (-_Metallic) *
            0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n   
            u_xlat16_34 = u_xlat16_34 + _Glossiness;\n    u_xlat16_34 = clamp(u_xlat16_34,
            0.0, 1.0);\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_7.xyz = _Color.xyz * u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_8.xyz
            = vec3(u_xlat16_33) * u_xlat2.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n   
            u_xlat16_9.xyz = vec3(u_xlat10) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    u_xlat16_0.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz
            * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec4
            u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump
            vec3 u_xlat16_10;\nfloat u_xlat27;\nlowp float u_xlat10_27;\nbool u_xlatb27;\nmediump
            float u_xlat16_31;\nmediump float u_xlat16_33;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb27 = u_xlat16_1<0.0;\n    if(u_xlatb27){discard;}\n   
            u_xlat2.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 =
            (-u_xlat2.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat16_1
            * u_xlat2.x;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat27 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat3.xyz
            = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz,
            u_xlat3.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n   
            u_xlat16_10.xyz = u_xlat3.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_1);\n   
            u_xlat16_4.x = u_xlat10_1.w + -1.0;\n    u_xlat16_4.x = unity_SpecCube0_HDR.w
            * u_xlat16_4.x + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;\n    u_xlat10_27 =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_27)
            * u_xlat16_4.xyz;\n    u_xlat27 = dot((-vs_TEXCOORD1.xyz), u_xlat3.xyz);\n   
            u_xlat2.x = u_xlat27;\n    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n   
            u_xlat27 = u_xlat27 + u_xlat27;\n    u_xlat5.xyz = u_xlat3.xyz * (-vec3(u_xlat27))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat27 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat16_6.xyz = vec3(u_xlat27)
            * _LightColor0.xyz;\n    u_xlat27 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat27 = u_xlat27 * u_xlat27;\n    u_xlat2.y = u_xlat27 * u_xlat27;\n   
            u_xlat27 = texture2D(unity_NHxRoughness, u_xlat2.yw).x;\n    u_xlat27
            = u_xlat27 * 16.0;\n    u_xlat16_31 = (-u_xlat2.x) + 1.0;\n    u_xlat2.x
            = u_xlat16_31 * u_xlat16_31;\n    u_xlat2.x = u_xlat16_31 * u_xlat2.x;\n   
            u_xlat2.x = u_xlat16_31 * u_xlat2.x;\n    u_xlat16_31 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_33 = (-u_xlat16_31) + 1.0;\n   
            u_xlat16_33 = u_xlat16_33 + _Glossiness;\n    u_xlat16_33 = clamp(u_xlat16_33,
            0.0, 1.0);\n    u_xlat16_7.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz =
            vec3(u_xlat16_33) + (-u_xlat16_7.xyz);\n    u_xlat16_8.xyz = u_xlat2.xxx
            * u_xlat16_8.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat27)
            * u_xlat16_7.xyz;\n    u_xlat16_7.xyz = u_xlat0.xyz * vec3(u_xlat16_31)
            + u_xlat16_7.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_4.xyz;\n   
            u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_4.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump sampler2D
            _EmissionMap;\nUNITY_LOCATION(4) uniform mediump samplerCube unity_SpecCube0;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_10;\nfloat
            u_xlat27;\nmediump float u_xlat16_27;\nbool u_xlatb27;\nmediump float
            u_xlat16_31;\nmediump float u_xlat16_33;\nvoid main()\n{\n    u_xlat16_0
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb27 = u_xlat16_1.x<0.0;\n    if(u_xlatb27){discard;}\n   
            u_xlat2.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x
            = (-u_xlat2.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat16_1.x
            * u_xlat2.x;\n    u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat27 =
            dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat3.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x =
            dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);\n    u_xlat16_10.x = u_xlat16_10.x
            + u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat3.xyz * (-u_xlat16_10.xxx)
            + vs_TEXCOORD1.xyz;\n    u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_10.xyz,
            u_xlat16_1.x);\n    u_xlat16_4.x = u_xlat16_1.w + -1.0;\n    u_xlat16_4.x
            = unity_SpecCube0_HDR.w * u_xlat16_4.x + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x
            * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat16_1.xyz * u_xlat16_4.xxx;\n   
            u_xlat16_27 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz
            = vec3(u_xlat16_27) * u_xlat16_4.xyz;\n    u_xlat27 = dot((-vs_TEXCOORD1.xyz),
            u_xlat3.xyz);\n    u_xlat2.x = u_xlat27;\n    u_xlat2.x = clamp(u_xlat2.x,
            0.0, 1.0);\n    u_xlat27 = u_xlat27 + u_xlat27;\n    u_xlat5.xyz = u_xlat3.xyz
            * (-vec3(u_xlat27)) + (-vs_TEXCOORD1.xyz);\n    u_xlat27 = dot(u_xlat3.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n   
            u_xlat16_6.xyz = vec3(u_xlat27) * _LightColor0.xyz;\n    u_xlat27 = dot(u_xlat5.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat27 = u_xlat27 * u_xlat27;\n   
            u_xlat2.y = u_xlat27 * u_xlat27;\n    u_xlat27 = texture(unity_NHxRoughness,
            u_xlat2.yw).x;\n    u_xlat27 = u_xlat27 * 16.0;\n    u_xlat16_31 = (-u_xlat2.x)
            + 1.0;\n    u_xlat2.x = u_xlat16_31 * u_xlat16_31;\n    u_xlat2.x = u_xlat16_31
            * u_xlat2.x;\n    u_xlat2.x = u_xlat16_31 * u_xlat2.x;\n    u_xlat16_31
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_33 = (-u_xlat16_31)
            + 1.0;\n    u_xlat16_33 = u_xlat16_33 + _Glossiness;\n    u_xlat16_33
            = clamp(u_xlat16_33, 0.0, 1.0);\n    u_xlat16_7.xyz = u_xlat16_0.xyz
            * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_33) + (-u_xlat16_7.xyz);\n   
            u_xlat16_8.xyz = u_xlat2.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_7.xyz = vec3(u_xlat27) * u_xlat16_7.xyz;\n    u_xlat16_7.xyz
            = u_xlat0.xyz * vec3(u_xlat16_31) + u_xlat16_7.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz;\n    u_xlat16_4.xyz = u_xlat16_7.xyz
            * u_xlat16_6.xyz + u_xlat16_4.xyz;\n    u_xlat16_0.xyz = texture(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz * _EmissionColor.xyz
            + u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D
            unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp
            samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nvec3 u_xlat2;\nlowp vec3 u_xlat10_2;\nmediump vec3
            u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n   
            u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1
            = textureCubeLodEXT(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1);\n   
            u_xlat16_3.x = u_xlat10_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx;\n    u_xlat10_0.x =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat10_0.xxx
            * u_xlat16_3.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n   
            u_xlat16 = u_xlat0.x;\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n   
            u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx)
            + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_6.xyz = _Color.xyz * u_xlat10_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_6.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) +
            (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz
            + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat16_6.xyz = u_xlat2.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump sampler2D _EmissionMap;\nUNITY_LOCATION(4) uniform mediump
            samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1
            = textureLod(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1.x);\n    u_xlat16_3.x
            = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x
            + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xxx;\n    u_xlat16_0.x =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat16_0.xxx
            * u_xlat16_3.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n   
            u_xlat16 = u_xlat0.x;\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n   
            u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx)
            + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n   
            u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29
            = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0,
            1.0);\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_6.xyz = _Color.xyz * u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_6.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) +
            (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz
            + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n   
            u_xlat16_6.xyz = u_xlat2.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    u_xlat16_0.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz
            * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3
            u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_12;\nfloat u_xlat33;\nlowp float u_xlat10_33;\nbool u_xlatb33;\nmediump
            float u_xlat16_37;\nmediump float u_xlat16_38;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb33 = u_xlat16_1<0.0;\n    if(u_xlatb33){discard;}\n   
            u_xlat2.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 =
            (-u_xlat2.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat16_1
            * u_xlat2.x;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat33 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat3.xyz
            = vec3(u_xlat33) * vs_TEXCOORD4.xyz;\n    u_xlat16_12.x = dot(vs_TEXCOORD1.xyz,
            u_xlat3.xyz);\n    u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;\n   
            u_xlat16_12.xyz = u_xlat3.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_12.xyz, u_xlat16_1);\n   
            u_xlat16_4.x = u_xlat10_1.w + -1.0;\n    u_xlat16_4.x = unity_SpecCube0_HDR.w
            * u_xlat16_4.x + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;\n    u_xlat10_33 =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_33)
            * u_xlat16_4.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat10_33) * vs_TEXCOORD5.xyz;\n   
            u_xlat33 = dot((-vs_TEXCOORD1.xyz), u_xlat3.xyz);\n    u_xlat2.x = u_xlat33;\n   
            u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat33 = u_xlat33 + u_xlat33;\n   
            u_xlat6.xyz = u_xlat3.xyz * (-vec3(u_xlat33)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat33 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat33
            = clamp(u_xlat33, 0.0, 1.0);\n    u_xlat16_7.xyz = vec3(u_xlat33) * _LightColor0.xyz;\n   
            u_xlat33 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat33
            = u_xlat33 * u_xlat33;\n    u_xlat2.y = u_xlat33 * u_xlat33;\n    u_xlat33
            = texture2D(unity_NHxRoughness, u_xlat2.yw).x;\n    u_xlat33 = u_xlat33
            * 16.0;\n    u_xlat16_37 = (-u_xlat2.x) + 1.0;\n    u_xlat2.x = u_xlat16_37
            * u_xlat16_37;\n    u_xlat2.x = u_xlat16_37 * u_xlat2.x;\n    u_xlat2.x
            = u_xlat16_37 * u_xlat2.x;\n    u_xlat16_37 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_38 = (-u_xlat16_37) + 1.0;\n    u_xlat16_38
            = u_xlat16_38 + _Glossiness;\n    u_xlat16_38 = clamp(u_xlat16_38, 0.0,
            1.0);\n    u_xlat16_8.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_9.xyz = vec3(u_xlat16_37) * u_xlat0.xyz;\n    u_xlat16_8.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_10.xyz = vec3(u_xlat16_38) +
            (-u_xlat16_8.xyz);\n    u_xlat16_10.xyz = u_xlat2.xxx * u_xlat16_10.xyz
            + u_xlat16_8.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat33) * u_xlat16_8.xyz
            + u_xlat16_9.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_5.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_8.xyz * u_xlat16_7.xyz + u_xlat16_4.xyz;\n   
            u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_4.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4
            u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump sampler2D
            _EmissionMap;\nUNITY_LOCATION(4) uniform mediump samplerCube unity_SpecCube0;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3
            u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump
            vec3 u_xlat16_12;\nfloat u_xlat33;\nmediump float u_xlat16_33;\nbool
            u_xlatb33;\nmediump float u_xlat16_37;\nmediump float u_xlat16_38;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.x = u_xlat16_0.w * _Color.w + (-_Cutoff);\n    u_xlatb33 =
            u_xlat16_1.x<0.0;\n    if(u_xlatb33){discard;}\n    u_xlat2.xw = (-vec2(_Glossiness))
            + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat2.x) * 0.699999988 + 1.70000005;\n   
            u_xlat16_1.x = u_xlat16_1.x * u_xlat2.x;\n    u_xlat16_1.x = u_xlat16_1.x
            * 6.0;\n    u_xlat33 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat3.xyz = vec3(u_xlat33) *
            vs_TEXCOORD4.xyz;\n    u_xlat16_12.x = dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);\n   
            u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;\n    u_xlat16_12.xyz =
            u_xlat3.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1
            = textureLod(unity_SpecCube0, u_xlat16_12.xyz, u_xlat16_1.x);\n    u_xlat16_4.x
            = u_xlat16_1.w + -1.0;\n    u_xlat16_4.x = unity_SpecCube0_HDR.w * u_xlat16_4.x
            + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_4.xyz = u_xlat16_1.xyz * u_xlat16_4.xxx;\n    u_xlat16_33 =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat16_33)
            * u_xlat16_4.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat16_33) * vs_TEXCOORD5.xyz;\n   
            u_xlat33 = dot((-vs_TEXCOORD1.xyz), u_xlat3.xyz);\n    u_xlat2.x = u_xlat33;\n   
            u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat33 = u_xlat33 + u_xlat33;\n   
            u_xlat6.xyz = u_xlat3.xyz * (-vec3(u_xlat33)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat33 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat33
            = clamp(u_xlat33, 0.0, 1.0);\n    u_xlat16_7.xyz = vec3(u_xlat33) * _LightColor0.xyz;\n   
            u_xlat33 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat33
            = u_xlat33 * u_xlat33;\n    u_xlat2.y = u_xlat33 * u_xlat33;\n    u_xlat33
            = texture(unity_NHxRoughness, u_xlat2.yw).x;\n    u_xlat33 = u_xlat33
            * 16.0;\n    u_xlat16_37 = (-u_xlat2.x) + 1.0;\n    u_xlat2.x = u_xlat16_37
            * u_xlat16_37;\n    u_xlat2.x = u_xlat16_37 * u_xlat2.x;\n    u_xlat2.x
            = u_xlat16_37 * u_xlat2.x;\n    u_xlat16_37 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_38 = (-u_xlat16_37) + 1.0;\n    u_xlat16_38
            = u_xlat16_38 + _Glossiness;\n    u_xlat16_38 = clamp(u_xlat16_38, 0.0,
            1.0);\n    u_xlat16_8.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_9.xyz = vec3(u_xlat16_37) * u_xlat0.xyz;\n    u_xlat16_8.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_10.xyz = vec3(u_xlat16_38) +
            (-u_xlat16_8.xyz);\n    u_xlat16_10.xyz = u_xlat2.xxx * u_xlat16_10.xyz
            + u_xlat16_8.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat33) * u_xlat16_8.xyz
            + u_xlat16_9.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_5.xyz * u_xlat16_9.xyz + u_xlat16_4.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_8.xyz * u_xlat16_7.xyz + u_xlat16_4.xyz;\n   
            u_xlat16_0.xyz = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat16_0.xyz * _EmissionColor.xyz + u_xlat16_4.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D
            _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D
            unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp
            samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3
            u_xlat2;\nlowp vec3 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3
            u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat10;\nmediump
            vec3 u_xlat16_11;\nfloat u_xlat20;\nmediump float u_xlat16_33;\nmediump
            float u_xlat16_34;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness))
            + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n   
            u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat16_11.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n    u_xlat16_11.x
            = u_xlat16_11.x + u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat2.xyz *
            (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat16_11.xyz, u_xlat16_1);\n    u_xlat16_3.x = u_xlat10_1.w + -1.0;\n   
            u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x
            = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_1.xyz
            * u_xlat16_3.xxx;\n    u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_3.xyz = u_xlat10_0.xxx * u_xlat16_3.xyz;\n    u_xlat16_4.xyz
            = u_xlat10_0.xxx * vs_TEXCOORD5.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat20 = u_xlat0.x;\n    u_xlat20 = clamp(u_xlat20,
            0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat5.xyz =
            u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_33 = (-u_xlat20) + 1.0;\n    u_xlat10
            = u_xlat16_33 * u_xlat16_33;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n   
            u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat16_33 = (-_Metallic) *
            0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n   
            u_xlat16_34 = u_xlat16_34 + _Glossiness;\n    u_xlat16_34 = clamp(u_xlat16_34,
            0.0, 1.0);\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_7.xyz = _Color.xyz * u_xlat10_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_8.xyz
            = vec3(u_xlat16_33) * u_xlat2.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n   
            u_xlat16_9.xyz = vec3(u_xlat10) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz
            = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz =
            u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4
            u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3)
            uniform mediump sampler2D _EmissionMap;\nUNITY_LOCATION(4) uniform mediump
            samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nmediump vec3
            u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat20;\nmediump float
            u_xlat16_33;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_11.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;\n   
            u_xlat16_11.xyz = u_xlat2.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_11.xyz, u_xlat16_1.x);\n   
            u_xlat16_3.x = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xxx;\n    u_xlat16_0.x =
            texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat16_0.xxx
            * u_xlat16_3.xyz;\n    u_xlat16_4.xyz = u_xlat16_0.xxx * vs_TEXCOORD5.xyz;\n   
            u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat20 = u_xlat0.x;\n   
            u_xlat20 = clamp(u_xlat20, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat5.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_33 = (-u_xlat20) + 1.0;\n    u_xlat10
            = u_xlat16_33 * u_xlat16_33;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n   
            u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat16_33 = (-_Metallic) *
            0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n   
            u_xlat16_34 = u_xlat16_34 + _Glossiness;\n    u_xlat16_34 = clamp(u_xlat16_34,
            0.0, 1.0);\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_7.xyz = _Color.xyz * u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_8.xyz
            = vec3(u_xlat16_33) * u_xlat2.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n   
            u_xlat16_9.xyz = vec3(u_xlat10) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n   
            u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    u_xlat16_0.xyz
            = texture(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz
            * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n   
            return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec4
            u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump
            vec3 u_xlat16_10;\nfloat u_xlat27;\nlowp float u_xlat10_27;\nbool u_xlatb27;\nmediump
            float u_xlat16_31;\nmediump float u_xlat16_33;\nvoid main()\n{\n    u_xlat10_0
            = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1 = u_xlat10_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb27 = u_xlat16_1<0.0;\n    if(u_xlatb27){discard;}\n   
            u_xlat2.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 =
            (-u_xlat2.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat16_1
            * u_xlat2.x;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat27 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n    u_xlat3.xyz
            = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz,
            u_xlat3.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n   
            u_xlat16_10.xyz = u_xlat3.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n   
            u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_1);\n   
            u_xlat16_4.x = u_xlat10_1.w + -1.0;\n    u_xlat16_4.x = unity_SpecCube0_HDR.w
            * u_xlat16_4.x + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;\n    u_xlat10_27 =
            texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_27)
            * u_xlat16_4.xyz;\n    u_xlat27 = dot((-vs_TEXCOORD1.xyz), u_xlat3.xyz);\n   
            u_xlat2.x = u_xlat27;\n    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);\n   
            u_xlat27 = u_xlat27 + u_xlat27;\n    u_xlat5.xyz = u_xlat3.xyz * (-vec3(u_xlat27))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat27 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n    u_xlat16_6.xyz = vec3(u_xlat27)
            * _LightColor0.xyz;\n    u_xlat27 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat27 = u_xlat27 * u_xlat27;\n    u_xlat2.y = u_xlat27 * u_xlat27;\n   
            u_xlat27 = texture2D(unity_NHxRoughness, u_xlat2.yw).x;\n    u_xlat27
            = u_xlat27 * 16.0;\n    u_xlat16_31 = (-u_xlat2.x) + 1.0;\n    u_xlat2.x
            = u_xlat16_31 * u_xlat16_31;\n    u_xlat2.x = u_xlat16_31 * u_xlat2.x;\n   
            u_xlat2.x = u_xlat16_31 * u_xlat2.x;\n    u_xlat16_31 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_33 = (-u_xlat16_31) + 1.0;\n   
            u_xlat16_33 = u_xlat16_33 + _Glossiness;\n    u_xlat16_33 = clamp(u_xlat16_33,
            0.0, 1.0);\n    u_xlat16_7.xyz = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301,
            -0.220916301, -0.220916301);\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz
            + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz =
            vec3(u_xlat16_33) + (-u_xlat16_7.xyz);\n    u_xlat16_8.xyz = u_xlat2.xxx
            * u_xlat16_8.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat27)
            * u_xlat16_7.xyz;\n    u_xlat16_7.xyz = u_xlat0.xyz * vec3(u_xlat16_31)
            + u_xlat16_7.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_4.xyz;\n   
            u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz
            = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_4.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4
            _EmissionColor;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump sampler2D
            _EmissionMap;\nUNITY_LOCATION(4) uniform mediump samplerCube unity_SpecCube0;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump
            vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_10;\nfloat
            u_xlat27;\nmediump float u_xlat16_27;\nbool u_xlatb27;\nmediump float
            u_xlat16_31;\nmediump float u_xlat16_33;\nvoid main()\n{\n    u_xlat16_0
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb27 = u_xlat16_1.x<0.0;\n    if(u_xlatb27){discard;}\n   
            u_xlat2.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x
            = (-u_xlat2.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat16_1.x
            * u_xlat2.x;\n    u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat27 =
            dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat27 = inversesqrt(u_xlat27);\n   
            u_xlat3.xyz = vec3(u_xlat27) * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x =
            dot(vs_TEXCOORD1.xyz, u_xlat3.xyz);\n    u_xlat16_10.x = u_xlat16_10.x
            + u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat3.xyz * (-u_xlat16_10.xxx)
            + vs_TEXCOORD1.xyz;\n    u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_10.xyz,
            u_xlat16_1.x);\n    u_xlat16_4.x = u_xlat16_1.w + -1.0;\n    u_xlat16_4.x
            = unity_SpecCube0_HDR.w * u_xlat16_4.x + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x
            * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat16_1.xyz * u_xlat16_4.xxx;\n   
            u_xlat16_27 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz
            = vec3(u_xlat16_27) * u_xlat16_4.xyz;\n    u_xlat27 = dot((-vs_TEXCOORD1.xyz),
            u_xlat3.xyz);\n    u_xlat2.x = u_xlat27;\n    u_xlat2.x = clamp(u_xlat2.x,
            0.0, 1.0);\n    u_xlat27 = u_xlat27 + u_xlat27;\n    u_xlat5.xyz = u_xlat3.xyz
            * (-vec3(u_xlat27)) + (-vs_TEXCOORD1.xyz);\n    u_xlat27 = dot(u_xlat3.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);\n   
            u_xlat16_6.xyz = vec3(u_xlat27) * _LightColor0.xyz;\n    u_xlat27 = dot(u_xlat5.xyz,
            _WorldSpaceLightPos0.xyz);\n    u_xlat27 = u_xlat27 * u_xlat27;\n   
            u_xlat2.y = u_xlat27 * u_xlat27;\n    u_xlat27 = texture(unity_NHxRoughness,
            u_xlat2.yw).x;\n    u_xlat27 = u_xlat27 * 16.0;\n    u_xlat16_31 = (-u_xlat2.x)
            + 1.0;\n    u_xlat2.x = u_xlat16_31 * u_xlat16_31;\n    u_xlat2.x = u_xlat16_31
            * u_xlat2.x;\n    u_xlat2.x = u_xlat16_31 * u_xlat2.x;\n    u_xlat16_31
            = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_33 = (-u_xlat16_31)
            + 1.0;\n    u_xlat16_33 = u_xlat16_33 + _Glossiness;\n    u_xlat16_33
            = clamp(u_xlat16_33, 0.0, 1.0);\n    u_xlat16_7.xyz = u_xlat16_0.xyz
            * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_33) + (-u_xlat16_7.xyz);\n   
            u_xlat16_8.xyz = u_xlat2.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;\n   
            u_xlat16_7.xyz = vec3(u_xlat27) * u_xlat16_7.xyz;\n    u_xlat16_7.xyz
            = u_xlat0.xyz * vec3(u_xlat16_31) + u_xlat16_7.xyz;\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz * u_xlat16_8.xyz;\n    u_xlat16_4.xyz = u_xlat16_7.xyz
            * u_xlat16_6.xyz + u_xlat16_4.xyz;\n    u_xlat16_0.xyz = texture(_EmissionMap,
            vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat16_0.xyz * _EmissionColor.xyz
            + u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _EMISSION
        - _GLOSSYREFLECTIONS_OFF
        - _METALLICGLOSSMAP
        - _NORMALMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECULARHIGHLIGHTS_OFF
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - _NORMALMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _METALLICGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 52
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
          - _GLOSSYREFLECTIONS_OFF
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _ALPHATEST_ON
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _ALPHATEST_ON
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _EMISSION
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _EMISSION
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 1
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w
            = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www +
            _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x
            = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n   
            u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform
            highp sampler2D _LightTexture0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3
            u_xlat0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nfloat u_xlat15;\nmediump
            float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot((-vs_TEXCOORD1.xyz),
            u_xlat0.xyz);\n    u_xlat15 = u_xlat15 + u_xlat15;\n    u_xlat1.xyz =
            u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n    u_xlat2.x
            = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n   
            u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz,
            u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat5.x
            = u_xlat15 * u_xlat15;\n    u_xlat1.x = u_xlat5.x * u_xlat5.x;\n    u_xlat1.y
            = (-_Glossiness) + 1.0;\n    u_xlat5.x = texture2D(unity_NHxRoughness,
            u_xlat1.xy).x;\n    u_xlat5.x = u_xlat5.x * 16.0;\n    u_xlat10_1.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_3.xyz = _Color.xyz
            * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_3.xyz = u_xlat5.xxx * u_xlat16_3.xyz;\n   
            u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_18) + u_xlat16_3.xyz;\n    u_xlat5.xyz
            = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx + u_xlat5.xyz;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD5.zzz
            + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat5.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat5.x = texture2D(_LightTexture0,
            u_xlat5.xx).x;\n    u_xlat16_4.xyz = u_xlat5.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    SV_Target0.xyz =
            u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nin highp vec4 in_POSITION0;\nin
            mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2
            in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4
            vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec3 vs_TEXCOORD6;\nout
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w
            = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www +
            _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x
            = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n   
            u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform highp
            sampler2D _LightTexture0;\nUNITY_LOCATION(2) uniform highp sampler2D
            unity_NHxRoughness;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4
            vs_TEXCOORD4;\nin highp vec3 vs_TEXCOORD5;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec3 u_xlat1;\nmediump vec3
            u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat15 = u_xlat15
            + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z
            = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat5.x = u_xlat15 * u_xlat15;\n    u_xlat1.x = u_xlat5.x
            * u_xlat5.x;\n    u_xlat1.y = (-_Glossiness) + 1.0;\n    u_xlat5.x =
            texture(unity_NHxRoughness, u_xlat1.xy).x;\n    u_xlat5.x = u_xlat5.x
            * 16.0;\n    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat16_3.xyz = _Color.xyz * u_xlat16_1.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat16_3.xyz = u_xlat5.xxx * u_xlat16_3.xyz;\n   
            u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz
            = u_xlat1.xyz * vec3(u_xlat16_18) + u_xlat16_3.xyz;\n    u_xlat5.xyz
            = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx + u_xlat5.xyz;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD5.zzz
            + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat5.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat5.x = texture(_LightTexture0,
            u_xlat5.xx).x;\n    u_xlat16_4.xyz = u_xlat5.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    SV_Target0.xyz =
            u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform highp
            sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvec3
            u_xlat2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nfloat
            u_xlat18;\nbool u_xlatb18;\nmediump float u_xlat16_19;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x
            = u_xlat10_0.w * _Color.w + (-_Cutoff);\n    u_xlatb18 = u_xlat16_1.x<0.0;\n   
            if(u_xlatb18){discard;}\n    u_xlat16_1.xyz = u_xlat10_0.xyz * _Color.xyz
            + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xyz =
            u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_1.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_1.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat2.xyz = vec3(u_xlat18) *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n   
            u_xlat18 = u_xlat18 + u_xlat18;\n    u_xlat3.xyz = u_xlat2.xyz * (-vec3(u_xlat18))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat4.x = vs_TEXCOORD2.w;\n    u_xlat4.y
            = vs_TEXCOORD3.w;\n    u_xlat4.z = vs_TEXCOORD4.w;\n    u_xlat18 = dot(u_xlat3.xyz,
            u_xlat4.xyz);\n    u_xlat2.x = dot(u_xlat2.xyz, u_xlat4.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat2.xxx * _LightColor0.xyz;\n   
            u_xlat18 = u_xlat18 * u_xlat18;\n    u_xlat2.x = u_xlat18 * u_xlat18;\n   
            u_xlat2.y = (-_Glossiness) + 1.0;\n    u_xlat18 = texture2D(unity_NHxRoughness,
            u_xlat2.xy).x;\n    u_xlat18 = u_xlat18 * 16.0;\n    u_xlat16_1.xyz =
            u_xlat16_1.xyz * vec3(u_xlat18);\n    u_xlat16_19 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat16_19)
            + u_xlat16_1.xyz;\n    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nUNITY_LOCATION(0) uniform
            mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform highp sampler2D
            unity_NHxRoughness;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4
            vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3
            u_xlat3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nfloat u_xlat18;\nbool
            u_xlatb18;\nmediump float u_xlat16_19;\nvoid main()\n{\n    u_xlat16_0
            = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w
            * _Color.w + (-_Cutoff);\n    u_xlatb18 = u_xlat16_1.x<0.0;\n    if(u_xlatb18){discard;}\n   
            u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301,
            -0.220916301);\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_1.xyz
            = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_1.xyz + vec3(0.220916301,
            0.220916301, 0.220916301);\n    u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat2.xyz = vec3(u_xlat18) *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n   
            u_xlat18 = u_xlat18 + u_xlat18;\n    u_xlat3.xyz = u_xlat2.xyz * (-vec3(u_xlat18))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat4.x = vs_TEXCOORD2.w;\n    u_xlat4.y
            = vs_TEXCOORD3.w;\n    u_xlat4.z = vs_TEXCOORD4.w;\n    u_xlat18 = dot(u_xlat3.xyz,
            u_xlat4.xyz);\n    u_xlat2.x = dot(u_xlat2.xyz, u_xlat4.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat2.xxx * _LightColor0.xyz;\n   
            u_xlat18 = u_xlat18 * u_xlat18;\n    u_xlat2.x = u_xlat18 * u_xlat18;\n   
            u_xlat2.y = (-_Glossiness) + 1.0;\n    u_xlat18 = texture(unity_NHxRoughness,
            u_xlat2.xy).x;\n    u_xlat18 = u_xlat18 * 16.0;\n    u_xlat16_1.xyz =
            u_xlat16_1.xyz * vec3(u_xlat18);\n    u_xlat16_19 = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat16_19)
            + u_xlat16_1.xyz;\n    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform
            lowp sampler2D _MainTex;\nuniform highp sampler2D unity_NHxRoughness;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nvec3
            u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3
            u_xlat5;\nlowp vec3 u_xlat10_5;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n   
            u_xlat15 = u_xlat15 + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y
            = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz,
            u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = u_xlat15 * u_xlat15;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.y = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness,
            u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_5.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_4.xyz = _Color.xyz
            * u_xlat10_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat5.xyz = u_xlat10_5.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n   
            u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz
            = u_xlat5.xyz * vec3(u_xlat16_18) + u_xlat16_4.xyz;\n    SV_Target0.xyz
            = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform highp sampler2D unity_NHxRoughness;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3
            u_xlat16_5;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat15 = u_xlat15
            + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z
            = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_3.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = u_xlat15 * u_xlat15;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.y = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture(unity_NHxRoughness,
            u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_5.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_4.xyz = _Color.xyz
            * u_xlat16_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat5.xyz = u_xlat16_5.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n   
            u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz
            = u_xlat5.xyz * vec3(u_xlat16_18) + u_xlat16_4.xyz;\n    SV_Target0.xyz
            = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w
            = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www +
            _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x
            = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n   
            u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tfloat _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform
            lowp sampler2D _MainTex;\nuniform highp sampler2D _LightTexture0;\nuniform
            highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3
            vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nvec3
            u_xlat4;\nmediump vec3 u_xlat16_5;\nfloat u_xlat18;\nbool u_xlatb18;\nmediump
            float u_xlat16_19;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat10_0.w * _Color.w + (-_Cutoff);\n   
            u_xlatb18 = u_xlat16_1.x<0.0;\n    if(u_xlatb18){discard;}\n    u_xlat16_1.xyz
            = u_xlat10_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_1.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_1.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat2.xyz = vec3(u_xlat18) *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n   
            u_xlat18 = u_xlat18 + u_xlat18;\n    u_xlat3.xyz = u_xlat2.xyz * (-vec3(u_xlat18))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat4.x = vs_TEXCOORD2.w;\n    u_xlat4.y
            = vs_TEXCOORD3.w;\n    u_xlat4.z = vs_TEXCOORD4.w;\n    u_xlat18 = dot(u_xlat3.xyz,
            u_xlat4.xyz);\n    u_xlat2.x = dot(u_xlat2.xyz, u_xlat4.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat18 = u_xlat18 * u_xlat18;\n   
            u_xlat3.x = u_xlat18 * u_xlat18;\n    u_xlat3.y = (-_Glossiness) + 1.0;\n   
            u_xlat18 = texture2D(unity_NHxRoughness, u_xlat3.xy).x;\n    u_xlat18
            = u_xlat18 * 16.0;\n    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat18);\n   
            u_xlat16_19 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_1.xyz
            = u_xlat0.xyz * vec3(u_xlat16_19) + u_xlat16_1.xyz;\n    u_xlat0.xyz
            = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx + u_xlat0.xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD5.zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat0.x = texture2D(_LightTexture0,
            u_xlat0.xx).x;\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_5.xyz = u_xlat2.xxx * u_xlat16_5.xyz;\n    SV_Target0.xyz =
            u_xlat16_1.xyz * u_xlat16_5.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - POINT
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nin highp vec4 in_POSITION0;\nin
            mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2
            in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4
            vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec3 vs_TEXCOORD6;\nout
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w
            = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www +
            _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x
            = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n   
            u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform highp
            sampler2D _LightTexture0;\nUNITY_LOCATION(2) uniform highp sampler2D
            unity_NHxRoughness;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4
            vs_TEXCOORD4;\nin highp vec3 vs_TEXCOORD5;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nmediump
            vec3 u_xlat16_5;\nfloat u_xlat18;\nbool u_xlatb18;\nmediump float u_xlat16_19;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.x = u_xlat16_0.w * _Color.w + (-_Cutoff);\n    u_xlatb18 =
            u_xlat16_1.x<0.0;\n    if(u_xlatb18){discard;}\n    u_xlat16_1.xyz =
            u_xlat16_0.xyz * _Color.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n   
            u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_1.xyz = vec3(vec3(_Metallic,
            _Metallic, _Metallic)) * u_xlat16_1.xyz + vec3(0.220916301, 0.220916301,
            0.220916301);\n    u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat2.xyz = vec3(u_xlat18) *
            vs_TEXCOORD4.xyz;\n    u_xlat18 = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n   
            u_xlat18 = u_xlat18 + u_xlat18;\n    u_xlat3.xyz = u_xlat2.xyz * (-vec3(u_xlat18))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat4.x = vs_TEXCOORD2.w;\n    u_xlat4.y
            = vs_TEXCOORD3.w;\n    u_xlat4.z = vs_TEXCOORD4.w;\n    u_xlat18 = dot(u_xlat3.xyz,
            u_xlat4.xyz);\n    u_xlat2.x = dot(u_xlat2.xyz, u_xlat4.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat18 = u_xlat18 * u_xlat18;\n   
            u_xlat3.x = u_xlat18 * u_xlat18;\n    u_xlat3.y = (-_Glossiness) + 1.0;\n   
            u_xlat18 = texture(unity_NHxRoughness, u_xlat3.xy).x;\n    u_xlat18 =
            u_xlat18 * 16.0;\n    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat18);\n   
            u_xlat16_19 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_1.xyz
            = u_xlat0.xyz * vec3(u_xlat16_19) + u_xlat16_1.xyz;\n    u_xlat0.xyz
            = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx + u_xlat0.xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD5.zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat0.x = texture(_LightTexture0,
            u_xlat0.xx).x;\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_5.xyz = u_xlat2.xxx * u_xlat16_5.xyz;\n    SV_Target0.xyz =
            u_xlat16_1.xyz * u_xlat16_5.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - POINT
          - _ALPHATEST_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w
            = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www +
            _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x
            = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n   
            u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Metallic;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform
            lowp sampler2D _MainTex;\nuniform highp sampler2D _LightTexture0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3
            vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3
            u_xlat16_3;\nmediump float u_xlat16_13;\nvoid main()\n{\n    u_xlat0.xyz
            = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat0.xyz
            = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx + u_xlat0.xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD5.zzz
            + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat0.x = texture2D(_LightTexture0,
            u_xlat0.xx).x;\n    u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z
            = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat0.xxx
            * u_xlat16_1.xyz;\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_13 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat0.xyz * vec3(u_xlat16_13);\n   
            SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - POINT
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nin highp vec4 in_POSITION0;\nin
            mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2
            in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4
            vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec3 vs_TEXCOORD6;\nout
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w
            = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www +
            _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x
            = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n   
            u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tvec4
            hlslcc_mtx4x4unity_WorldToLight[4];\nUNITY_LOCATION(0) uniform mediump
            sampler2D _MainTex;\nUNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nin highp vec3 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump float
            u_xlat16_13;\nvoid main()\n{\n    u_xlat0.xyz = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat0.x = texture(_LightTexture0,
            u_xlat0.xx).x;\n    u_xlat16_1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z
            = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat0.xxx
            * u_xlat16_1.xyz;\n    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_13 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat0.xyz * vec3(u_xlat16_13);\n   
            SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - POINT
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            lowp sampler2D _MainTex;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3
            u_xlat16_3;\nbool u_xlatb12;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat10_0.w * _Color.w + (-_Cutoff);\n   
            u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlatb12 = u_xlat16_1.x<0.0;\n   
            if(u_xlatb12){discard;}\n    u_xlat16_1.x = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_1.xyz = u_xlat0.xyz * u_xlat16_1.xxx;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z
            = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec3 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nbool u_xlatb12;\nvoid
            main()\n{\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.x = u_xlat16_0.w * _Color.w + (-_Cutoff);\n    u_xlat0.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlatb12 = u_xlat16_1.x<0.0;\n   
            if(u_xlatb12){discard;}\n    u_xlat16_1.x = (-_Metallic) * 0.779083729
            + 0.779083729;\n    u_xlat16_1.xyz = u_xlat0.xyz * u_xlat16_1.xxx;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z
            = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Metallic;\nuniform lowp sampler2D _MainTex;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump float u_xlat16_14;\nvoid
            main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat1.x = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n   
            u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_14 = (-_Metallic)
            * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat0.xyz * vec3(u_xlat16_14);\n   
            SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4
            vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nmediump float u_xlat16_14;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = vs_TEXCOORD2.w;\n   
            u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat0.x
            = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_0.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz
            * _Color.xyz;\n    u_xlat16_14 = (-_Metallic) * 0.779083729 + 0.779083729;\n   
            u_xlat16_3.xyz = u_xlat0.xyz * vec3(u_xlat16_14);\n    SV_Target0.xyz
            = u_xlat16_2.xyz * u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w
            = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www +
            _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x
            = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n   
            u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump float _Metallic;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform
            highp sampler2D _LightTexture0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nvec3 u_xlat3;\nbool u_xlatb12;\nvoid main()\n{\n   
            u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x
            = u_xlat10_0.w * _Color.w + (-_Cutoff);\n    u_xlat0.xyz = u_xlat10_0.xyz
            * _Color.xyz;\n    u_xlatb12 = u_xlat16_1.x<0.0;\n    if(u_xlatb12){discard;}\n   
            u_xlat16_1.x = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_1.xyz
            = u_xlat0.xyz * u_xlat16_1.xxx;\n    u_xlat0.xyz = vs_TEXCOORD5.yyy *
            hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * vs_TEXCOORD5.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat0.x = texture2D(_LightTexture0,
            u_xlat0.xx).x;\n    u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z
            = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.xyz = u_xlat0.xxx
            * u_xlat16_2.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - POINT
          - _ALPHATEST_ON
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nin highp vec4 in_POSITION0;\nin
            mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2
            in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4
            vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec3 vs_TEXCOORD6;\nout
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w
            = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www +
            _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x
            = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n   
            u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _Cutoff;\nuniform \tmediump
            float _Metallic;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform highp
            sampler2D _LightTexture0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nin
            highp vec3 vs_TEXCOORD5;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nvec3 u_xlat3;\nbool u_xlatb12;\nvoid main()\n{\n   
            u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_1.x =
            u_xlat16_0.w * _Color.w + (-_Cutoff);\n    u_xlat0.xyz = u_xlat16_0.xyz
            * _Color.xyz;\n    u_xlatb12 = u_xlat16_1.x<0.0;\n    if(u_xlatb12){discard;}\n   
            u_xlat16_1.x = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_1.xyz
            = u_xlat0.xyz * u_xlat16_1.xxx;\n    u_xlat0.xyz = vs_TEXCOORD5.yyy *
            hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * vs_TEXCOORD5.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat0.x = texture(_LightTexture0,
            u_xlat0.xx).x;\n    u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z
            = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_2.xyz = u_xlat0.xxx
            * u_xlat16_2.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;\n   
            SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - POINT
          - _ALPHATEST_ON
          - _SPECULARHIGHLIGHTS_OFF
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - LIGHTMAP_SHADOW_MIXING
        - POINT
        - POINT_COOKIE
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _DETAIL_MULX2
        - _METALLICGLOSSMAP
        - _NORMALMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECULARHIGHLIGHTS_OFF
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - _NORMALMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _METALLICGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - POINT
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - SPOT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 35
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - POINT
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - POINT
          - _ALPHATEST_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - POINT
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - POINT
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _ALPHATEST_ON
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 5
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - POINT
          - _ALPHATEST_ON
          - _SPECULARHIGHLIGHTS_OFF
        - shaderCompilerPlatform: 9
          shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - POINT
          - _ALPHATEST_ON
          - _SPECULARHIGHLIGHTS_OFF
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 1
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords:
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _METALLICGLOSSMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _
        KeywordGroups:
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _METALLICGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SHADOWS_CUBE
          hasDiscard: 0
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 1
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: PerformanceChecks
        Value: False
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - SHADOWS_SCREEN
    - SHADOWS_SHADOWMASK
    - VERTEXLIGHT_ON
    - _ALPHABLEND_ON
    - _ALPHAPREMULTIPLY_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _METALLICGLOSSMAP
    - _NORMALMAP
    - _PARALLAXMAP
    - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
    - _SPECULARHIGHLIGHTS_OFF
    - DIRECTIONAL_COOKIE
    - POINT
    - POINT_COOKIE
    - SHADOWS_DEPTH
    - SPOT
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _DETAIL_MULX2
    - __
    - _
    - SHADOWS_CUBE
    - SHADOWS_SOFT
    fallbackShader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHATEST_ON
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHATEST_ON
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
      - _ALPHATEST_ON
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
      - _ALPHATEST_ON
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
      - _EMISSION
      - _GLOSSYREFLECTIONS_OFF
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHATEST_ON
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _ALPHATEST_ON
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _ALPHATEST_ON
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
      - _EMISSION
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
      - _EMISSION
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - POINT
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - POINT
      - _ALPHATEST_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - POINT
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - POINT
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _ALPHATEST_ON
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 5
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - POINT
      - _ALPHATEST_ON
      - _SPECULARHIGHLIGHTS_OFF
    - shaderCompilerPlatform: 9
      shader: {fileID: 46, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - POINT
      - _ALPHATEST_ON
      - _SPECULARHIGHLIGHTS_OFF
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform
            \tmediump vec4 _Color;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _OcclusionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform
            lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nmediump float u_xlat16_1;\nvec3 u_xlat2;\nbool u_xlatb2;\nmediump
            vec3 u_xlat16_3;\nvec3 u_xlat4;\nlowp vec4 u_xlat10_4;\nbool u_xlatb4;\nvec3
            u_xlat5;\nlowp vec4 u_xlat10_5;\nvec3 u_xlat6;\nvec3 u_xlat7;\nbvec3
            u_xlatb7;\nmediump vec4 u_xlat16_8;\nvec3 u_xlat9;\nmediump vec3 u_xlat16_9;\nbvec3
            u_xlatb10;\nfloat u_xlat11;\nmediump vec3 u_xlat16_12;\nfloat u_xlat13;\nmediump
            vec3 u_xlat16_14;\nmediump float u_xlat16_19;\nfloat u_xlat22;\nfloat
            u_xlat24;\nmediump float u_xlat16_30;\nfloat u_xlat33;\nfloat u_xlat35;\nlowp
            float u_xlat10_35;\nmediump float u_xlat16_36;\nfloat u_xlat37;\nbool
            u_xlatb37;\nvoid main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_1 = max(_SpecColor.y, _SpecColor.x);\n    u_xlat16_1 = max(u_xlat16_1,
            _SpecColor.z);\n    u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_12.xyz
            = u_xlat0.xyz * vec3(u_xlat16_1);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat33 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat2.xyz
            = vec3(u_xlat33) * vs_TEXCOORD1.xyz;\n    u_xlat10_35 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.x = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_3.x = u_xlat10_35 * _OcclusionStrength + u_xlat16_3.x;\n   
            u_xlat35 = (-_Glossiness) + 1.0;\n    u_xlat16_14.x = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat16_14.x = u_xlat16_14.x + u_xlat16_14.x;\n   
            u_xlat16_14.xyz = u_xlat0.xyz * (-u_xlat16_14.xxx) + u_xlat2.xyz;\n   
            u_xlatb4 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb4){\n       
            u_xlat4.x = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n        u_xlat4.x
            = inversesqrt(u_xlat4.x);\n        u_xlat4.xyz = u_xlat16_14.xyz * u_xlat4.xxx;\n       
            u_xlat5.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat5.xyz = u_xlat5.xyz / u_xlat4.xyz;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat6.xyz = u_xlat6.xyz / u_xlat4.xyz;\n       
            u_xlatb7.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat4.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat5;\n            hlslcc_movcTemp.x
            = (u_xlatb7.x) ? u_xlat5.x : u_xlat6.x;\n            hlslcc_movcTemp.y
            = (u_xlatb7.y) ? u_xlat5.y : u_xlat6.y;\n            hlslcc_movcTemp.z
            = (u_xlatb7.z) ? u_xlat5.z : u_xlat6.z;\n            u_xlat5 = hlslcc_movcTemp;\n       
            }\n        u_xlat37 = min(u_xlat5.y, u_xlat5.x);\n        u_xlat37 =
            min(u_xlat5.z, u_xlat37);\n        u_xlat5.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat37) + u_xlat5.xyz;\n    } else
            {\n        u_xlat4.xyz = u_xlat16_14.xyz;\n    }\n    u_xlat16_8.x =
            (-u_xlat35) * 0.699999988 + 1.70000005;\n    u_xlat16_8.x = u_xlat35
            * u_xlat16_8.x;\n    u_xlat16_8.x = u_xlat16_8.x * 6.0;\n    u_xlat10_4
            = textureCubeLodEXT(unity_SpecCube0, u_xlat4.xyz, u_xlat16_8.x);\n   
            u_xlat16_19 = u_xlat10_4.w + -1.0;\n    u_xlat16_19 = unity_SpecCube0_HDR.w
            * u_xlat16_19 + 1.0;\n    u_xlat16_19 = u_xlat16_19 * unity_SpecCube0_HDR.x;\n   
            u_xlat16_9.xyz = u_xlat10_4.xyz * vec3(u_xlat16_19);\n    u_xlatb37 =
            unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb37){\n        u_xlatb37
            = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb37){\n           
            u_xlat37 = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n            u_xlat37
            = inversesqrt(u_xlat37);\n            u_xlat5.xyz = u_xlat16_14.xyz *
            vec3(u_xlat37);\n            u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat7.xyz = u_xlat7.xyz
            / u_xlat5.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat5.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat6;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat6.x
            : u_xlat7.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat6.y
            : u_xlat7.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat6.z
            : u_xlat7.z;\n                u_xlat6 = hlslcc_movcTemp;\n           
            }\n            u_xlat37 = min(u_xlat6.y, u_xlat6.x);\n            u_xlat37
            = min(u_xlat6.z, u_xlat37);\n            u_xlat6.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat5.xyz = u_xlat5.xyz
            * vec3(u_xlat37) + u_xlat6.xyz;\n        } else {\n            u_xlat5.xyz
            = u_xlat16_14.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat5.xyz, u_xlat16_8.x);\n        u_xlat16_14.x = u_xlat10_5.w + -1.0;\n       
            u_xlat16_14.x = unity_SpecCube1_HDR.w * u_xlat16_14.x + 1.0;\n       
            u_xlat16_14.x = u_xlat16_14.x * unity_SpecCube1_HDR.x;\n        u_xlat16_14.xyz
            = u_xlat10_5.xyz * u_xlat16_14.xxx;\n        u_xlat4.xyz = vec3(u_xlat16_19)
            * u_xlat10_4.xyz + (-u_xlat16_14.xyz);\n        u_xlat9.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat4.xyz + u_xlat16_14.xyz;\n        u_xlat16_9.xyz = u_xlat9.xyz;\n   
            }\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;\n    u_xlat4.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat33) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat33 = dot(u_xlat4.xyz, u_xlat4.xyz);\n    u_xlat33 = max(u_xlat33,
            0.00100000005);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat4.xyz
            = vec3(u_xlat33) * u_xlat4.xyz;\n    u_xlat33 = dot(u_xlat0.xyz, (-u_xlat2.xyz));\n   
            u_xlat2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat4.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat11 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n    u_xlat11 = clamp(u_xlat11, 0.0, 1.0);\n    u_xlat16_36
            = u_xlat11 + u_xlat11;\n    u_xlat16_36 = u_xlat11 * u_xlat16_36;\n   
            u_xlat16_36 = u_xlat16_36 * u_xlat35 + -0.5;\n    u_xlat16_8.x = (-u_xlat2.x)
            + 1.0;\n    u_xlat16_19 = u_xlat16_8.x * u_xlat16_8.x;\n    u_xlat16_19
            = u_xlat16_19 * u_xlat16_19;\n    u_xlat16_8.x = u_xlat16_8.x * u_xlat16_19;\n   
            u_xlat16_8.x = u_xlat16_36 * u_xlat16_8.x + 1.0;\n    u_xlat16_19 = -abs(u_xlat33)
            + 1.0;\n    u_xlat16_30 = u_xlat16_19 * u_xlat16_19;\n    u_xlat16_30
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_19 = u_xlat16_19 * u_xlat16_30;\n   
            u_xlat16_36 = u_xlat16_36 * u_xlat16_19 + 1.0;\n    u_xlat16_36 = u_xlat16_36
            * u_xlat16_8.x;\n    u_xlat22 = u_xlat2.x * u_xlat16_36;\n    u_xlat13
            = u_xlat35 * u_xlat35;\n    u_xlat13 = max(u_xlat13, 0.00200000009);\n   
            u_xlat24 = (-u_xlat13) + 1.0;\n    u_xlat4.x = abs(u_xlat33) * u_xlat24
            + u_xlat13;\n    u_xlat24 = u_xlat2.x * u_xlat24 + u_xlat13;\n    u_xlat33
            = abs(u_xlat33) * u_xlat24;\n    u_xlat33 = u_xlat2.x * u_xlat4.x + u_xlat33;\n   
            u_xlat33 = u_xlat33 + 9.99999975e-06;\n    u_xlat33 = 0.5 / u_xlat33;\n   
            u_xlat24 = u_xlat13 * u_xlat13;\n    u_xlat4.x = u_xlat0.x * u_xlat24
            + (-u_xlat0.x);\n    u_xlat0.x = u_xlat4.x * u_xlat0.x + 1.0;\n    u_xlat24
            = u_xlat24 * 0.318309873;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n   
            u_xlat0.x = u_xlat24 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat33;\n   
            u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat2.x * u_xlat0.x;\n   
            u_xlat33 = u_xlat13 * u_xlat35;\n    u_xlat33 = (-u_xlat33) * 0.280000001
            + 1.0;\n    u_xlat16_36 = dot(_SpecColor.xyz, _SpecColor.xyz);\n    u_xlatb2
            = u_xlat16_36!=0.0;\n    u_xlat2.x = u_xlatb2 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat2.x;\n    u_xlat16_1 = (-u_xlat16_1) +
            1.0;\n    u_xlat16_1 = u_xlat16_1 + _Glossiness;\n    u_xlat16_1 = clamp(u_xlat16_1,
            0.0, 1.0);\n    u_xlat16_8.xzw = vec3(u_xlat22) * _LightColor0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_36 = (-u_xlat11)
            + 1.0;\n    u_xlat16_9.x = u_xlat16_36 * u_xlat16_36;\n    u_xlat16_9.x
            = u_xlat16_9.x * u_xlat16_9.x;\n    u_xlat16_36 = u_xlat16_36 * u_xlat16_9.x;\n   
            u_xlat16_9.xyz = (-_SpecColor.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_9.xyz
            = u_xlat16_9.xyz * vec3(u_xlat16_36) + _SpecColor.xyz;\n    u_xlat0.xyz
            = u_xlat2.xyz * u_xlat16_9.xyz;\n    u_xlat0.xyz = u_xlat16_12.xyz *
            u_xlat16_8.xzw + u_xlat0.xyz;\n    u_xlat16_12.xyz = u_xlat16_3.xyz *
            vec3(u_xlat33);\n    u_xlat16_3.xyz = vec3(u_xlat16_1) + (-_SpecColor.xyz);\n   
            u_xlat16_3.xyz = vec3(u_xlat16_19) * u_xlat16_3.xyz + _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat16_12.xyz * u_xlat16_3.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform
            \tmediump vec4 _Color;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2)
            uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(3) uniform
            mediump samplerCube unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin highp vec3
            vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump float u_xlat16_1;\nvec3 u_xlat2;\nbool
            u_xlatb2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec4 u_xlat16_4;\nbool
            u_xlatb4;\nvec3 u_xlat5;\nmediump vec4 u_xlat16_5;\nvec3 u_xlat6;\nvec3
            u_xlat7;\nbvec3 u_xlatb7;\nmediump vec4 u_xlat16_8;\nvec3 u_xlat9;\nmediump
            vec3 u_xlat16_9;\nbvec3 u_xlatb10;\nfloat u_xlat11;\nmediump vec3 u_xlat16_12;\nfloat
            u_xlat13;\nmediump vec3 u_xlat16_14;\nmediump float u_xlat16_19;\nfloat
            u_xlat22;\nfloat u_xlat24;\nmediump float u_xlat16_30;\nfloat u_xlat33;\nfloat
            u_xlat35;\nmediump float u_xlat16_35;\nmediump float u_xlat16_36;\nfloat
            u_xlat37;\nbool u_xlatb37;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_1 = max(_SpecColor.y, _SpecColor.x);\n    u_xlat16_1 = max(u_xlat16_1,
            _SpecColor.z);\n    u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_12.xyz
            = u_xlat0.xyz * vec3(u_xlat16_1);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat33 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat2.xyz
            = vec3(u_xlat33) * vs_TEXCOORD1.xyz;\n    u_xlat16_35 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.x = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_3.x = u_xlat16_35 * _OcclusionStrength + u_xlat16_3.x;\n   
            u_xlat35 = (-_Glossiness) + 1.0;\n    u_xlat16_14.x = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat16_14.x = u_xlat16_14.x + u_xlat16_14.x;\n   
            u_xlat16_14.xyz = u_xlat0.xyz * (-u_xlat16_14.xxx) + u_xlat2.xyz;\n   
            u_xlatb4 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb4){\n       
            u_xlat4.x = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n        u_xlat4.x
            = inversesqrt(u_xlat4.x);\n        u_xlat4.xyz = u_xlat16_14.xyz * u_xlat4.xxx;\n       
            u_xlat5.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat5.xyz = u_xlat5.xyz / u_xlat4.xyz;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat6.xyz = u_xlat6.xyz / u_xlat4.xyz;\n       
            u_xlatb7.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat4.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat5;\n            hlslcc_movcTemp.x
            = (u_xlatb7.x) ? u_xlat5.x : u_xlat6.x;\n            hlslcc_movcTemp.y
            = (u_xlatb7.y) ? u_xlat5.y : u_xlat6.y;\n            hlslcc_movcTemp.z
            = (u_xlatb7.z) ? u_xlat5.z : u_xlat6.z;\n            u_xlat5 = hlslcc_movcTemp;\n       
            }\n        u_xlat37 = min(u_xlat5.y, u_xlat5.x);\n        u_xlat37 =
            min(u_xlat5.z, u_xlat37);\n        u_xlat5.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat37) + u_xlat5.xyz;\n    } else
            {\n        u_xlat4.xyz = u_xlat16_14.xyz;\n    }\n    u_xlat16_8.x =
            (-u_xlat35) * 0.699999988 + 1.70000005;\n    u_xlat16_8.x = u_xlat35
            * u_xlat16_8.x;\n    u_xlat16_8.x = u_xlat16_8.x * 6.0;\n    u_xlat16_4
            = textureLod(unity_SpecCube0, u_xlat4.xyz, u_xlat16_8.x);\n    u_xlat16_19
            = u_xlat16_4.w + -1.0;\n    u_xlat16_19 = unity_SpecCube0_HDR.w * u_xlat16_19
            + 1.0;\n    u_xlat16_19 = u_xlat16_19 * unity_SpecCube0_HDR.x;\n    u_xlat16_9.xyz
            = u_xlat16_4.xyz * vec3(u_xlat16_19);\n    u_xlatb37 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb37){\n        u_xlatb37 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb37){\n            u_xlat37 = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n           
            u_xlat37 = inversesqrt(u_xlat37);\n            u_xlat5.xyz = u_xlat16_14.xyz
            * vec3(u_xlat37);\n            u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat7.xyz = u_xlat7.xyz
            / u_xlat5.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat5.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat6;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat6.x
            : u_xlat7.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat6.y
            : u_xlat7.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat6.z
            : u_xlat7.z;\n                u_xlat6 = hlslcc_movcTemp;\n           
            }\n            u_xlat37 = min(u_xlat6.y, u_xlat6.x);\n            u_xlat37
            = min(u_xlat6.z, u_xlat37);\n            u_xlat6.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat5.xyz = u_xlat5.xyz
            * vec3(u_xlat37) + u_xlat6.xyz;\n        } else {\n            u_xlat5.xyz
            = u_xlat16_14.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat5.xyz, u_xlat16_8.x);\n        u_xlat16_14.x = u_xlat16_5.w + -1.0;\n       
            u_xlat16_14.x = unity_SpecCube1_HDR.w * u_xlat16_14.x + 1.0;\n       
            u_xlat16_14.x = u_xlat16_14.x * unity_SpecCube1_HDR.x;\n        u_xlat16_14.xyz
            = u_xlat16_5.xyz * u_xlat16_14.xxx;\n        u_xlat4.xyz = vec3(u_xlat16_19)
            * u_xlat16_4.xyz + (-u_xlat16_14.xyz);\n        u_xlat9.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat4.xyz + u_xlat16_14.xyz;\n        u_xlat16_9.xyz = u_xlat9.xyz;\n   
            }\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;\n    u_xlat4.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat33) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat33 = dot(u_xlat4.xyz, u_xlat4.xyz);\n    u_xlat33 = max(u_xlat33,
            0.00100000005);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat4.xyz
            = vec3(u_xlat33) * u_xlat4.xyz;\n    u_xlat33 = dot(u_xlat0.xyz, (-u_xlat2.xyz));\n   
            u_xlat2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat4.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat11 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n    u_xlat11 = clamp(u_xlat11, 0.0, 1.0);\n    u_xlat16_36
            = u_xlat11 + u_xlat11;\n    u_xlat16_36 = u_xlat11 * u_xlat16_36;\n   
            u_xlat16_36 = u_xlat16_36 * u_xlat35 + -0.5;\n    u_xlat16_8.x = (-u_xlat2.x)
            + 1.0;\n    u_xlat16_19 = u_xlat16_8.x * u_xlat16_8.x;\n    u_xlat16_19
            = u_xlat16_19 * u_xlat16_19;\n    u_xlat16_8.x = u_xlat16_8.x * u_xlat16_19;\n   
            u_xlat16_8.x = u_xlat16_36 * u_xlat16_8.x + 1.0;\n    u_xlat16_19 = -abs(u_xlat33)
            + 1.0;\n    u_xlat16_30 = u_xlat16_19 * u_xlat16_19;\n    u_xlat16_30
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_19 = u_xlat16_19 * u_xlat16_30;\n   
            u_xlat16_36 = u_xlat16_36 * u_xlat16_19 + 1.0;\n    u_xlat16_36 = u_xlat16_36
            * u_xlat16_8.x;\n    u_xlat22 = u_xlat2.x * u_xlat16_36;\n    u_xlat13
            = u_xlat35 * u_xlat35;\n    u_xlat13 = max(u_xlat13, 0.00200000009);\n   
            u_xlat24 = (-u_xlat13) + 1.0;\n    u_xlat4.x = abs(u_xlat33) * u_xlat24
            + u_xlat13;\n    u_xlat24 = u_xlat2.x * u_xlat24 + u_xlat13;\n    u_xlat33
            = abs(u_xlat33) * u_xlat24;\n    u_xlat33 = u_xlat2.x * u_xlat4.x + u_xlat33;\n   
            u_xlat33 = u_xlat33 + 9.99999975e-06;\n    u_xlat33 = 0.5 / u_xlat33;\n   
            u_xlat24 = u_xlat13 * u_xlat13;\n    u_xlat4.x = u_xlat0.x * u_xlat24
            + (-u_xlat0.x);\n    u_xlat0.x = u_xlat4.x * u_xlat0.x + 1.0;\n    u_xlat24
            = u_xlat24 * 0.318309873;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n   
            u_xlat0.x = u_xlat24 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat33;\n   
            u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat2.x * u_xlat0.x;\n   
            u_xlat33 = u_xlat13 * u_xlat35;\n    u_xlat33 = (-u_xlat33) * 0.280000001
            + 1.0;\n    u_xlat16_36 = dot(_SpecColor.xyz, _SpecColor.xyz);\n    u_xlatb2
            = u_xlat16_36!=0.0;\n    u_xlat2.x = u_xlatb2 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat2.x;\n    u_xlat16_1 = (-u_xlat16_1) +
            1.0;\n    u_xlat16_1 = u_xlat16_1 + _Glossiness;\n    u_xlat16_1 = clamp(u_xlat16_1,
            0.0, 1.0);\n    u_xlat16_8.xzw = vec3(u_xlat22) * _LightColor0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_36 = (-u_xlat11)
            + 1.0;\n    u_xlat16_9.x = u_xlat16_36 * u_xlat16_36;\n    u_xlat16_9.x
            = u_xlat16_9.x * u_xlat16_9.x;\n    u_xlat16_36 = u_xlat16_36 * u_xlat16_9.x;\n   
            u_xlat16_9.xyz = (-_SpecColor.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_9.xyz
            = u_xlat16_9.xyz * vec3(u_xlat16_36) + _SpecColor.xyz;\n    u_xlat0.xyz
            = u_xlat2.xyz * u_xlat16_9.xyz;\n    u_xlat0.xyz = u_xlat16_12.xyz *
            u_xlat16_8.xzw + u_xlat0.xyz;\n    u_xlat16_12.xyz = u_xlat16_3.xyz *
            vec3(u_xlat33);\n    u_xlat16_3.xyz = vec3(u_xlat16_1) + (-_SpecColor.xyz);\n   
            u_xlat16_3.xyz = vec3(u_xlat16_19) * u_xlat16_3.xyz + _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat16_12.xyz * u_xlat16_3.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying
            mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying
            highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) *
            u_xlat0.xyz;\n    vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx
            * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n   
            u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_2.xyz;\n   
            vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat16_2.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_2.x =
            u_xlat1.x * u_xlat1.x + (-u_xlat16_2.x);\n    u_xlat16_0 = u_xlat1.yzzx
            * u_xlat1.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * u_xlat16_2.xxx +
            u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4
            unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform
            \tfloat _GlossMapScale;\nuniform \tmediump float _OcclusionStrength;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _SpecGlossMap;\nuniform
            lowp sampler2D _BumpMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec3
            vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvec4 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump float
            u_xlat16_2;\nmediump vec4 u_xlat16_3;\nmediump vec4 u_xlat16_4;\nvec3
            u_xlat5;\nbool u_xlatb5;\nfloat u_xlat6;\nlowp float u_xlat10_6;\nvec3
            u_xlat7;\nlowp vec4 u_xlat10_7;\nvec3 u_xlat8;\nlowp vec4 u_xlat10_8;\nvec3
            u_xlat9;\nvec3 u_xlat10;\nbvec3 u_xlatb10;\nvec3 u_xlat11;\nmediump vec3
            u_xlat16_11;\nbvec3 u_xlatb12;\nfloat u_xlat14;\nmediump vec3 u_xlat16_15;\nmediump
            vec3 u_xlat16_16;\nmediump float u_xlat16_17;\nvec3 u_xlat18;\nvec3 u_xlat19;\nfloat
            u_xlat27;\nmediump float u_xlat16_29;\nmediump float u_xlat16_30;\nfloat
            u_xlat31;\nfloat u_xlat40;\nbool u_xlatb40;\nmediump float u_xlat16_43;\nfloat
            u_xlat44;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap,
            vs_TEXCOORD0.xy);\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_2 = max(u_xlat10_0.y,
            u_xlat10_0.x);\n    u_xlat16_2 = max(u_xlat10_0.z, u_xlat16_2);\n   
            u_xlat16_2 = (-u_xlat16_2) + 1.0;\n    u_xlat16_15.xyz = u_xlat1.xyz
            * vec3(u_xlat16_2);\n    u_xlat10_1.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n   
            u_xlat16_3.xy = u_xlat10_1.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_29 = dot(u_xlat16_3.xy, u_xlat16_3.xy);\n    u_xlat16_29 = min(u_xlat16_29,
            1.0);\n    u_xlat16_29 = (-u_xlat16_29) + 1.0;\n    u_xlat16_29 = sqrt(u_xlat16_29);\n   
            u_xlat16_3.xy = u_xlat16_3.xy * vec2(_BumpScale);\n    u_xlat16_4.xyz
            = u_xlat16_3.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_3.xyw = vs_TEXCOORD2.xyz
            * u_xlat16_3.xxx + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = vs_TEXCOORD4.xyz
            * vec3(u_xlat16_29) + u_xlat16_3.xyw;\n    u_xlat1.x = dot(u_xlat16_3.xyz,
            u_xlat16_3.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz
            = u_xlat1.xxx * u_xlat16_3.xyz;\n    u_xlat5.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat5.x = inversesqrt(u_xlat5.x);\n    u_xlat18.xyz
            = u_xlat5.xxx * vs_TEXCOORD1.xyz;\n    u_xlat10_6 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.x = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_3.x = u_xlat10_6 * _OcclusionStrength + u_xlat16_3.x;\n    u_xlat6
            = (-u_xlat10_0.w) * _GlossMapScale + 1.0;\n    u_xlat16_16.x = dot(u_xlat18.xyz,
            u_xlat1.xyz);\n    u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;\n   
            u_xlat16_16.xyz = u_xlat1.xyz * (-u_xlat16_16.xxx) + u_xlat18.xyz;\n   
            u_xlat1.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_4.y
            = dot(unity_SHAg, u_xlat1);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);\n   
            u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz
            = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat19.xyz = log2(u_xlat16_4.xyz);\n   
            u_xlat19.xyz = u_xlat19.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat19.xyz = exp2(u_xlat19.xyz);\n    u_xlat19.xyz = u_xlat19.xyz *
            vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997,
            -0.0549999997);\n    u_xlat19.xyz = max(u_xlat19.xyz, vec3(0.0, 0.0,
            0.0));\n    u_xlatb40 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb40){\n       
            u_xlat40 = dot(u_xlat16_16.xyz, u_xlat16_16.xyz);\n        u_xlat40 =
            inversesqrt(u_xlat40);\n        u_xlat7.xyz = vec3(u_xlat40) * u_xlat16_16.xyz;\n       
            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat40 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat40 =
            min(u_xlat8.z, u_xlat40);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat40) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_16.xyz;\n    }\n    u_xlat16_4.x =
            (-u_xlat6) * 0.699999988 + 1.70000005;\n    u_xlat16_4.x = u_xlat16_4.x
            * u_xlat6;\n    u_xlat16_4.x = u_xlat16_4.x * 6.0;\n    u_xlat10_7 =
            textureCubeLodEXT(unity_SpecCube0, u_xlat7.xyz, u_xlat16_4.x);\n    u_xlat16_17
            = u_xlat10_7.w + -1.0;\n    u_xlat16_17 = unity_SpecCube0_HDR.w * u_xlat16_17
            + 1.0;\n    u_xlat16_17 = u_xlat16_17 * unity_SpecCube0_HDR.x;\n    u_xlat16_11.xyz
            = u_xlat10_7.xyz * vec3(u_xlat16_17);\n    u_xlatb40 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb40){\n        u_xlatb40 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb40){\n            u_xlat40 = dot(u_xlat16_16.xyz, u_xlat16_16.xyz);\n           
            u_xlat40 = inversesqrt(u_xlat40);\n            u_xlat8.xyz = vec3(u_xlat40)
            * u_xlat16_16.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat9.xyz = u_xlat9.xyz / u_xlat8.xyz;\n            u_xlat10.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat10.xyz
            = u_xlat10.xyz / u_xlat8.xyz;\n            u_xlatb12.xyz = lessThan(vec4(0.0,
            0.0, 0.0, 0.0), u_xlat8.xyzx).xyz;\n            {\n                vec3
            hlslcc_movcTemp = u_xlat9;\n                hlslcc_movcTemp.x = (u_xlatb12.x)
            ? u_xlat9.x : u_xlat10.x;\n                hlslcc_movcTemp.y = (u_xlatb12.y)
            ? u_xlat9.y : u_xlat10.y;\n                hlslcc_movcTemp.z = (u_xlatb12.z)
            ? u_xlat9.z : u_xlat10.z;\n                u_xlat9 = hlslcc_movcTemp;\n           
            }\n            u_xlat40 = min(u_xlat9.y, u_xlat9.x);\n            u_xlat40
            = min(u_xlat9.z, u_xlat40);\n            u_xlat9.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat8.xyz = u_xlat8.xyz
            * vec3(u_xlat40) + u_xlat9.xyz;\n        } else {\n            u_xlat8.xyz
            = u_xlat16_16.xyz;\n        }\n        u_xlat10_8 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat8.xyz, u_xlat16_4.x);\n        u_xlat16_16.x = u_xlat10_8.w + -1.0;\n       
            u_xlat16_16.x = unity_SpecCube1_HDR.w * u_xlat16_16.x + 1.0;\n       
            u_xlat16_16.x = u_xlat16_16.x * unity_SpecCube1_HDR.x;\n        u_xlat16_16.xyz
            = u_xlat10_8.xyz * u_xlat16_16.xxx;\n        u_xlat7.xyz = vec3(u_xlat16_17)
            * u_xlat10_7.xyz + (-u_xlat16_16.xyz);\n        u_xlat11.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_16.xyz;\n        u_xlat16_11.xyz = u_xlat11.xyz;\n   
            }\n    u_xlat16_16.xyz = u_xlat16_3.xxx * u_xlat16_11.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat5.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat40 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat40 = max(u_xlat40,
            0.00100000005);\n    u_xlat40 = inversesqrt(u_xlat40);\n    u_xlat7.xyz
            = vec3(u_xlat40) * u_xlat7.xyz;\n    u_xlat40 = dot(u_xlat1.xyz, (-u_xlat18.xyz));\n   
            u_xlat5.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat5.x
            = clamp(u_xlat5.x, 0.0, 1.0);\n    u_xlat1.x = dot(u_xlat1.xyz, u_xlat7.xyz);\n   
            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_4.x
            = u_xlat14 + u_xlat14;\n    u_xlat16_4.x = u_xlat14 * u_xlat16_4.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat6 + -0.5;\n    u_xlat16_17 = (-u_xlat5.x)
            + 1.0;\n    u_xlat16_30 = u_xlat16_17 * u_xlat16_17;\n    u_xlat16_30
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_17 = u_xlat16_17 * u_xlat16_30;\n   
            u_xlat16_17 = u_xlat16_4.x * u_xlat16_17 + 1.0;\n    u_xlat16_30 = -abs(u_xlat40)
            + 1.0;\n    u_xlat16_43 = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_43
            = u_xlat16_43 * u_xlat16_43;\n    u_xlat16_30 = u_xlat16_30 * u_xlat16_43;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_30 + 1.0;\n    u_xlat16_4.x =
            u_xlat16_4.x * u_xlat16_17;\n    u_xlat27 = u_xlat5.x * u_xlat16_4.x;\n   
            u_xlat18.x = u_xlat6 * u_xlat6;\n    u_xlat18.x = max(u_xlat18.x, 0.00200000009);\n   
            u_xlat31 = (-u_xlat18.x) + 1.0;\n    u_xlat44 = abs(u_xlat40) * u_xlat31
            + u_xlat18.x;\n    u_xlat31 = u_xlat5.x * u_xlat31 + u_xlat18.x;\n   
            u_xlat40 = abs(u_xlat40) * u_xlat31;\n    u_xlat40 = u_xlat5.x * u_xlat44
            + u_xlat40;\n    u_xlat40 = u_xlat40 + 9.99999975e-06;\n    u_xlat40
            = 0.5 / u_xlat40;\n    u_xlat31 = u_xlat18.x * u_xlat18.x;\n    u_xlat44
            = u_xlat1.x * u_xlat31 + (-u_xlat1.x);\n    u_xlat1.x = u_xlat44 * u_xlat1.x
            + 1.0;\n    u_xlat31 = u_xlat31 * 0.318309873;\n    u_xlat1.x = u_xlat1.x
            * u_xlat1.x + 1.00000001e-07;\n    u_xlat1.x = u_xlat31 / u_xlat1.x;\n   
            u_xlat1.x = u_xlat1.x * u_xlat40;\n    u_xlat1.x = u_xlat1.x * 3.14159274;\n   
            u_xlat1.x = max(u_xlat1.x, 9.99999975e-05);\n    u_xlat1.x = sqrt(u_xlat1.x);\n   
            u_xlat1.x = u_xlat5.x * u_xlat1.x;\n    u_xlat40 = u_xlat18.x * u_xlat6;\n   
            u_xlat40 = (-u_xlat40) * 0.280000001 + 1.0;\n    u_xlat16_4.x = dot(u_xlat10_0.xyz,
            u_xlat10_0.xyz);\n    u_xlatb5 = u_xlat16_4.x!=0.0;\n    u_xlat5.x =
            u_xlatb5 ? 1.0 : float(0.0);\n    u_xlat1.x = u_xlat1.x * u_xlat5.x;\n   
            u_xlat16_2 = (-u_xlat16_2) + 1.0;\n    u_xlat16_2 = u_xlat10_0.w * _GlossMapScale
            + u_xlat16_2;\n    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);\n    u_xlat16_4.xyw
            = vec3(u_xlat27) * _LightColor0.xyz;\n    u_xlat16_4.xyw = u_xlat19.xyz
            * u_xlat16_3.xxx + u_xlat16_4.xyw;\n    u_xlat5.xyz = u_xlat1.xxx * _LightColor0.xyz;\n   
            u_xlat16_3.x = (-u_xlat14) + 1.0;\n    u_xlat16_11.x = u_xlat16_3.x *
            u_xlat16_3.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_3.x = u_xlat16_3.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat10_0.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_11.xyz = u_xlat16_11.xyz * u_xlat16_3.xxx
            + u_xlat10_0.xyz;\n    u_xlat1.xyz = u_xlat5.xyz * u_xlat16_11.xyz;\n   
            u_xlat1.xyz = u_xlat16_15.xyz * u_xlat16_4.xyw + u_xlat1.xyz;\n    u_xlat16_15.xyz
            = u_xlat16_16.xyz * vec3(u_xlat40);\n    u_xlat16_3.xyz = (-u_xlat10_0.xyz)
            + vec3(u_xlat16_2);\n    u_xlat16_3.xyz = vec3(u_xlat16_30) * u_xlat16_3.xyz
            + u_xlat10_0.xyz;\n    u_xlat0.xyz = u_xlat16_15.xyz * u_xlat16_3.xyz
            + u_xlat1.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nin mediump vec4 in_TANGENT0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) *
            u_xlat0.xyz;\n    vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx
            * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n   
            u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_2.xyz;\n   
            vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat16_2.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_2.x =
            u_xlat1.x * u_xlat1.x + (-u_xlat16_2.x);\n    u_xlat16_0 = u_xlat1.yzzx
            * u_xlat1.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * u_xlat16_2.xxx +
            u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform
            \tfloat _GlossMapScale;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _SpecGlossMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _BumpMap;\nUNITY_LOCATION(3) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(4)
            uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(5) uniform
            mediump samplerCube unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nin
            highp vec3 vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_1;\nmediump
            float u_xlat16_2;\nmediump vec4 u_xlat16_3;\nmediump vec4 u_xlat16_4;\nvec3
            u_xlat5;\nbool u_xlatb5;\nfloat u_xlat6;\nmediump float u_xlat16_6;\nvec3
            u_xlat7;\nmediump vec4 u_xlat16_7;\nvec3 u_xlat8;\nmediump vec4 u_xlat16_8;\nvec3
            u_xlat9;\nvec3 u_xlat10;\nbvec3 u_xlatb10;\nvec3 u_xlat11;\nmediump vec3
            u_xlat16_11;\nbvec3 u_xlatb12;\nfloat u_xlat14;\nmediump vec3 u_xlat16_15;\nmediump
            vec3 u_xlat16_16;\nmediump float u_xlat16_17;\nvec3 u_xlat18;\nvec3 u_xlat19;\nfloat
            u_xlat27;\nmediump float u_xlat16_29;\nmediump float u_xlat16_30;\nfloat
            u_xlat31;\nfloat u_xlat40;\nbool u_xlatb40;\nmediump float u_xlat16_43;\nfloat
            u_xlat44;\nvoid main()\n{\n    u_xlat16_0 = texture(_SpecGlossMap, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz
            = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_2 = max(u_xlat16_0.y, u_xlat16_0.x);\n   
            u_xlat16_2 = max(u_xlat16_0.z, u_xlat16_2);\n    u_xlat16_2 = (-u_xlat16_2)
            + 1.0;\n    u_xlat16_15.xyz = u_xlat1.xyz * vec3(u_xlat16_2);\n    u_xlat16_1.xy
            = texture(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_3.xy = u_xlat16_1.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_29 = dot(u_xlat16_3.xy,
            u_xlat16_3.xy);\n    u_xlat16_29 = min(u_xlat16_29, 1.0);\n    u_xlat16_29
            = (-u_xlat16_29) + 1.0;\n    u_xlat16_29 = sqrt(u_xlat16_29);\n    u_xlat16_3.xy
            = u_xlat16_3.xy * vec2(_BumpScale);\n    u_xlat16_4.xyz = u_xlat16_3.yyy
            * vs_TEXCOORD3.xyz;\n    u_xlat16_3.xyw = vs_TEXCOORD2.xyz * u_xlat16_3.xxx
            + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_29)
            + u_xlat16_3.xyw;\n    u_xlat1.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n   
            u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx *
            u_xlat16_3.xyz;\n    u_xlat5.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat5.x = inversesqrt(u_xlat5.x);\n    u_xlat18.xyz = u_xlat5.xxx *
            vs_TEXCOORD1.xyz;\n    u_xlat16_6 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_3.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_3.x = u_xlat16_6
            * _OcclusionStrength + u_xlat16_3.x;\n    u_xlat6 = (-u_xlat16_0.w) *
            _GlossMapScale + 1.0;\n    u_xlat16_16.x = dot(u_xlat18.xyz, u_xlat1.xyz);\n   
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;\n    u_xlat16_16.xyz =
            u_xlat1.xyz * (-u_xlat16_16.xxx) + u_xlat18.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_4.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_4.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat19.xyz = log2(u_xlat16_4.xyz);\n   
            u_xlat19.xyz = u_xlat19.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat19.xyz = exp2(u_xlat19.xyz);\n    u_xlat19.xyz = u_xlat19.xyz *
            vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997,
            -0.0549999997);\n    u_xlat19.xyz = max(u_xlat19.xyz, vec3(0.0, 0.0,
            0.0));\n    u_xlatb40 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb40){\n       
            u_xlat40 = dot(u_xlat16_16.xyz, u_xlat16_16.xyz);\n        u_xlat40 =
            inversesqrt(u_xlat40);\n        u_xlat7.xyz = vec3(u_xlat40) * u_xlat16_16.xyz;\n       
            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat40 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat40 =
            min(u_xlat8.z, u_xlat40);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat40) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_16.xyz;\n    }\n    u_xlat16_4.x =
            (-u_xlat6) * 0.699999988 + 1.70000005;\n    u_xlat16_4.x = u_xlat16_4.x
            * u_xlat6;\n    u_xlat16_4.x = u_xlat16_4.x * 6.0;\n    u_xlat16_7 =
            textureLod(unity_SpecCube0, u_xlat7.xyz, u_xlat16_4.x);\n    u_xlat16_17
            = u_xlat16_7.w + -1.0;\n    u_xlat16_17 = unity_SpecCube0_HDR.w * u_xlat16_17
            + 1.0;\n    u_xlat16_17 = u_xlat16_17 * unity_SpecCube0_HDR.x;\n    u_xlat16_11.xyz
            = u_xlat16_7.xyz * vec3(u_xlat16_17);\n    u_xlatb40 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb40){\n        u_xlatb40 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb40){\n            u_xlat40 = dot(u_xlat16_16.xyz, u_xlat16_16.xyz);\n           
            u_xlat40 = inversesqrt(u_xlat40);\n            u_xlat8.xyz = vec3(u_xlat40)
            * u_xlat16_16.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat9.xyz = u_xlat9.xyz / u_xlat8.xyz;\n            u_xlat10.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat10.xyz
            = u_xlat10.xyz / u_xlat8.xyz;\n            u_xlatb12.xyz = lessThan(vec4(0.0,
            0.0, 0.0, 0.0), u_xlat8.xyzx).xyz;\n            {\n                vec3
            hlslcc_movcTemp = u_xlat9;\n                hlslcc_movcTemp.x = (u_xlatb12.x)
            ? u_xlat9.x : u_xlat10.x;\n                hlslcc_movcTemp.y = (u_xlatb12.y)
            ? u_xlat9.y : u_xlat10.y;\n                hlslcc_movcTemp.z = (u_xlatb12.z)
            ? u_xlat9.z : u_xlat10.z;\n                u_xlat9 = hlslcc_movcTemp;\n           
            }\n            u_xlat40 = min(u_xlat9.y, u_xlat9.x);\n            u_xlat40
            = min(u_xlat9.z, u_xlat40);\n            u_xlat9.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat8.xyz = u_xlat8.xyz
            * vec3(u_xlat40) + u_xlat9.xyz;\n        } else {\n            u_xlat8.xyz
            = u_xlat16_16.xyz;\n        }\n        u_xlat16_8 = textureLod(unity_SpecCube1,
            u_xlat8.xyz, u_xlat16_4.x);\n        u_xlat16_16.x = u_xlat16_8.w + -1.0;\n       
            u_xlat16_16.x = unity_SpecCube1_HDR.w * u_xlat16_16.x + 1.0;\n       
            u_xlat16_16.x = u_xlat16_16.x * unity_SpecCube1_HDR.x;\n        u_xlat16_16.xyz
            = u_xlat16_8.xyz * u_xlat16_16.xxx;\n        u_xlat7.xyz = vec3(u_xlat16_17)
            * u_xlat16_7.xyz + (-u_xlat16_16.xyz);\n        u_xlat11.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_16.xyz;\n        u_xlat16_11.xyz = u_xlat11.xyz;\n   
            }\n    u_xlat16_16.xyz = u_xlat16_3.xxx * u_xlat16_11.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat5.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat40 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat40 = max(u_xlat40,
            0.00100000005);\n    u_xlat40 = inversesqrt(u_xlat40);\n    u_xlat7.xyz
            = vec3(u_xlat40) * u_xlat7.xyz;\n    u_xlat40 = dot(u_xlat1.xyz, (-u_xlat18.xyz));\n   
            u_xlat5.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat5.x
            = clamp(u_xlat5.x, 0.0, 1.0);\n    u_xlat1.x = dot(u_xlat1.xyz, u_xlat7.xyz);\n   
            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_4.x
            = u_xlat14 + u_xlat14;\n    u_xlat16_4.x = u_xlat14 * u_xlat16_4.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat6 + -0.5;\n    u_xlat16_17 = (-u_xlat5.x)
            + 1.0;\n    u_xlat16_30 = u_xlat16_17 * u_xlat16_17;\n    u_xlat16_30
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_17 = u_xlat16_17 * u_xlat16_30;\n   
            u_xlat16_17 = u_xlat16_4.x * u_xlat16_17 + 1.0;\n    u_xlat16_30 = -abs(u_xlat40)
            + 1.0;\n    u_xlat16_43 = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_43
            = u_xlat16_43 * u_xlat16_43;\n    u_xlat16_30 = u_xlat16_30 * u_xlat16_43;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_30 + 1.0;\n    u_xlat16_4.x =
            u_xlat16_4.x * u_xlat16_17;\n    u_xlat27 = u_xlat5.x * u_xlat16_4.x;\n   
            u_xlat18.x = u_xlat6 * u_xlat6;\n    u_xlat18.x = max(u_xlat18.x, 0.00200000009);\n   
            u_xlat31 = (-u_xlat18.x) + 1.0;\n    u_xlat44 = abs(u_xlat40) * u_xlat31
            + u_xlat18.x;\n    u_xlat31 = u_xlat5.x * u_xlat31 + u_xlat18.x;\n   
            u_xlat40 = abs(u_xlat40) * u_xlat31;\n    u_xlat40 = u_xlat5.x * u_xlat44
            + u_xlat40;\n    u_xlat40 = u_xlat40 + 9.99999975e-06;\n    u_xlat40
            = 0.5 / u_xlat40;\n    u_xlat31 = u_xlat18.x * u_xlat18.x;\n    u_xlat44
            = u_xlat1.x * u_xlat31 + (-u_xlat1.x);\n    u_xlat1.x = u_xlat44 * u_xlat1.x
            + 1.0;\n    u_xlat31 = u_xlat31 * 0.318309873;\n    u_xlat1.x = u_xlat1.x
            * u_xlat1.x + 1.00000001e-07;\n    u_xlat1.x = u_xlat31 / u_xlat1.x;\n   
            u_xlat1.x = u_xlat1.x * u_xlat40;\n    u_xlat1.x = u_xlat1.x * 3.14159274;\n   
            u_xlat1.x = max(u_xlat1.x, 9.99999975e-05);\n    u_xlat1.x = sqrt(u_xlat1.x);\n   
            u_xlat1.x = u_xlat5.x * u_xlat1.x;\n    u_xlat40 = u_xlat18.x * u_xlat6;\n   
            u_xlat40 = (-u_xlat40) * 0.280000001 + 1.0;\n    u_xlat16_4.x = dot(u_xlat16_0.xyz,
            u_xlat16_0.xyz);\n    u_xlatb5 = u_xlat16_4.x!=0.0;\n    u_xlat5.x =
            u_xlatb5 ? 1.0 : float(0.0);\n    u_xlat1.x = u_xlat1.x * u_xlat5.x;\n   
            u_xlat16_2 = (-u_xlat16_2) + 1.0;\n    u_xlat16_2 = u_xlat16_0.w * _GlossMapScale
            + u_xlat16_2;\n    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);\n    u_xlat16_4.xyw
            = vec3(u_xlat27) * _LightColor0.xyz;\n    u_xlat16_4.xyw = u_xlat19.xyz
            * u_xlat16_3.xxx + u_xlat16_4.xyw;\n    u_xlat5.xyz = u_xlat1.xxx * _LightColor0.xyz;\n   
            u_xlat16_3.x = (-u_xlat14) + 1.0;\n    u_xlat16_11.x = u_xlat16_3.x *
            u_xlat16_3.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_3.x = u_xlat16_3.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_0.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_11.xyz = u_xlat16_11.xyz * u_xlat16_3.xxx
            + u_xlat16_0.xyz;\n    u_xlat1.xyz = u_xlat5.xyz * u_xlat16_11.xyz;\n   
            u_xlat1.xyz = u_xlat16_15.xyz * u_xlat16_4.xyw + u_xlat1.xyz;\n    u_xlat16_15.xyz
            = u_xlat16_16.xyz * vec3(u_xlat40);\n    u_xlat16_3.xyz = (-u_xlat16_0.xyz)
            + vec3(u_xlat16_2);\n    u_xlat16_3.xyz = vec3(u_xlat16_30) * u_xlat16_3.xyz
            + u_xlat16_0.xyz;\n    u_xlat0.xyz = u_xlat16_15.xyz * u_xlat16_3.xyz
            + u_xlat1.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump
            vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4
            unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform lowp
            sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform lowp
            samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nmediump float u_xlat16_1;\nvec3 u_xlat2;\nbool u_xlatb2;\nfloat
            u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec4
            u_xlat16_5;\nvec3 u_xlat6;\nlowp vec4 u_xlat10_6;\nvec3 u_xlat7;\nlowp
            vec4 u_xlat10_7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb9;\nvec3
            u_xlat10;\nmediump vec3 u_xlat16_10;\nbvec3 u_xlatb11;\nfloat u_xlat12;\nmediump
            vec3 u_xlat16_13;\nvec3 u_xlat14;\nvec3 u_xlat15;\nmediump vec3 u_xlat16_16;\nmediump
            float u_xlat16_17;\nfloat u_xlat24;\nfloat u_xlat26;\nmediump float u_xlat16_29;\nfloat
            u_xlat36;\nbool u_xlatb36;\nfloat u_xlat38;\nmediump float u_xlat16_41;\nvoid
            main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_1 = max(_SpecColor.y,
            _SpecColor.x);\n    u_xlat16_1 = max(u_xlat16_1, _SpecColor.z);\n   
            u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_13.xyz = u_xlat0.xyz
            * vec3(u_xlat16_1);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat2.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat2.x = inversesqrt(u_xlat2.x);\n    u_xlat14.xyz = u_xlat2.xxx *
            vs_TEXCOORD1.xyz;\n    u_xlat10_3 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_4.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_4.x = u_xlat10_3
            * _OcclusionStrength + u_xlat16_4.x;\n    u_xlat3 = (-_Glossiness) +
            1.0;\n    u_xlat16_16.x = dot(u_xlat14.xyz, u_xlat0.xyz);\n    u_xlat16_16.x
            = u_xlat16_16.x + u_xlat16_16.x;\n    u_xlat16_16.xyz = u_xlat0.xyz *
            (-u_xlat16_16.xxx) + u_xlat14.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_5.x
            = dot(unity_SHAr, u_xlat0);\n    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);\n   
            u_xlat16_5.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_5.xyz = u_xlat16_5.xyz
            + vs_TEXCOORD5.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlat15.xyz = log2(u_xlat16_5.xyz);\n    u_xlat15.xyz
            = u_xlat15.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat15.xyz
            = exp2(u_xlat15.xyz);\n    u_xlat15.xyz = u_xlat15.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat15.xyz = max(u_xlat15.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb36
            = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb36){\n        u_xlat36
            = dot(u_xlat16_16.xyz, u_xlat16_16.xyz);\n        u_xlat36 = inversesqrt(u_xlat36);\n       
            u_xlat6.xyz = vec3(u_xlat36) * u_xlat16_16.xyz;\n        u_xlat7.xyz
            = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat7.xyz
            = u_xlat7.xyz / u_xlat6.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat8.xyz = u_xlat8.xyz / u_xlat6.xyz;\n       
            u_xlatb9.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat6.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat7;\n            hlslcc_movcTemp.x
            = (u_xlatb9.x) ? u_xlat7.x : u_xlat8.x;\n            hlslcc_movcTemp.y
            = (u_xlatb9.y) ? u_xlat7.y : u_xlat8.y;\n            hlslcc_movcTemp.z
            = (u_xlatb9.z) ? u_xlat7.z : u_xlat8.z;\n            u_xlat7 = hlslcc_movcTemp;\n       
            }\n        u_xlat36 = min(u_xlat7.y, u_xlat7.x);\n        u_xlat36 =
            min(u_xlat7.z, u_xlat36);\n        u_xlat7.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat6.xyz = u_xlat6.xyz * vec3(u_xlat36) + u_xlat7.xyz;\n    } else
            {\n        u_xlat6.xyz = u_xlat16_16.xyz;\n    }\n    u_xlat16_5.x =
            (-u_xlat3) * 0.699999988 + 1.70000005;\n    u_xlat16_5.x = u_xlat3 *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * 6.0;\n    u_xlat10_6
            = textureCubeLodEXT(unity_SpecCube0, u_xlat6.xyz, u_xlat16_5.x);\n   
            u_xlat16_17 = u_xlat10_6.w + -1.0;\n    u_xlat16_17 = unity_SpecCube0_HDR.w
            * u_xlat16_17 + 1.0;\n    u_xlat16_17 = u_xlat16_17 * unity_SpecCube0_HDR.x;\n   
            u_xlat16_10.xyz = u_xlat10_6.xyz * vec3(u_xlat16_17);\n    u_xlatb36
            = unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb36){\n       
            u_xlatb36 = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb36){\n           
            u_xlat36 = dot(u_xlat16_16.xyz, u_xlat16_16.xyz);\n            u_xlat36
            = inversesqrt(u_xlat36);\n            u_xlat7.xyz = vec3(u_xlat36) *
            u_xlat16_16.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb11.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb11.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb11.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb11.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat36 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat36
            = min(u_xlat8.z, u_xlat36);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat36) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_16.xyz;\n        }\n        u_xlat10_7 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_5.x);\n        u_xlat16_16.x = u_xlat10_7.w + -1.0;\n       
            u_xlat16_16.x = unity_SpecCube1_HDR.w * u_xlat16_16.x + 1.0;\n       
            u_xlat16_16.x = u_xlat16_16.x * unity_SpecCube1_HDR.x;\n        u_xlat16_16.xyz
            = u_xlat10_7.xyz * u_xlat16_16.xxx;\n        u_xlat6.xyz = vec3(u_xlat16_17)
            * u_xlat10_6.xyz + (-u_xlat16_16.xyz);\n        u_xlat10.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat6.xyz + u_xlat16_16.xyz;\n        u_xlat16_10.xyz = u_xlat10.xyz;\n   
            }\n    u_xlat16_16.xyz = u_xlat16_4.xxx * u_xlat16_10.xyz;\n    u_xlat6.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat2.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat36 = dot(u_xlat6.xyz, u_xlat6.xyz);\n    u_xlat36 = max(u_xlat36,
            0.00100000005);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat6.xyz
            = vec3(u_xlat36) * u_xlat6.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, (-u_xlat14.xyz));\n   
            u_xlat2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat6.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat12 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat6.xyz);\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat16_5.x
            = u_xlat12 + u_xlat12;\n    u_xlat16_5.x = u_xlat12 * u_xlat16_5.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat3 + -0.5;\n    u_xlat16_17 = (-u_xlat2.x)
            + 1.0;\n    u_xlat16_29 = u_xlat16_17 * u_xlat16_17;\n    u_xlat16_29
            = u_xlat16_29 * u_xlat16_29;\n    u_xlat16_17 = u_xlat16_17 * u_xlat16_29;\n   
            u_xlat16_17 = u_xlat16_5.x * u_xlat16_17 + 1.0;\n    u_xlat16_29 = -abs(u_xlat36)
            + 1.0;\n    u_xlat16_41 = u_xlat16_29 * u_xlat16_29;\n    u_xlat16_41
            = u_xlat16_41 * u_xlat16_41;\n    u_xlat16_29 = u_xlat16_29 * u_xlat16_41;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_29 + 1.0;\n    u_xlat16_5.x =
            u_xlat16_5.x * u_xlat16_17;\n    u_xlat24 = u_xlat2.x * u_xlat16_5.x;\n   
            u_xlat14.x = u_xlat3 * u_xlat3;\n    u_xlat14.x = max(u_xlat14.x, 0.00200000009);\n   
            u_xlat26 = (-u_xlat14.x) + 1.0;\n    u_xlat38 = abs(u_xlat36) * u_xlat26
            + u_xlat14.x;\n    u_xlat26 = u_xlat2.x * u_xlat26 + u_xlat14.x;\n   
            u_xlat36 = abs(u_xlat36) * u_xlat26;\n    u_xlat36 = u_xlat2.x * u_xlat38
            + u_xlat36;\n    u_xlat36 = u_xlat36 + 9.99999975e-06;\n    u_xlat36
            = 0.5 / u_xlat36;\n    u_xlat26 = u_xlat14.x * u_xlat14.x;\n    u_xlat38
            = u_xlat0.x * u_xlat26 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat38 * u_xlat0.x
            + 1.0;\n    u_xlat26 = u_xlat26 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat26 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat36;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat2.x * u_xlat0.x;\n    u_xlat36 = u_xlat14.x * u_xlat3;\n   
            u_xlat36 = (-u_xlat36) * 0.280000001 + 1.0;\n    u_xlat16_5.x = dot(_SpecColor.xyz,
            _SpecColor.xyz);\n    u_xlatb2 = u_xlat16_5.x!=0.0;\n    u_xlat2.x =
            u_xlatb2 ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat2.x;\n   
            u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_1 = u_xlat16_1 + _Glossiness;\n   
            u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n    u_xlat16_5.xyw = vec3(u_xlat24)
            * _LightColor0.xyz;\n    u_xlat16_5.xyw = u_xlat15.xyz * u_xlat16_4.xxx
            + u_xlat16_5.xyw;\n    u_xlat2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.x = (-u_xlat12) + 1.0;\n    u_xlat16_10.x = u_xlat16_4.x *
            u_xlat16_4.x;\n    u_xlat16_10.x = u_xlat16_10.x * u_xlat16_10.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_10.x;\n    u_xlat16_10.xyz = (-_SpecColor.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_10.xyz * u_xlat16_4.xxx
            + _SpecColor.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * u_xlat16_10.xyz;\n   
            u_xlat0.xyz = u_xlat16_13.xyz * u_xlat16_5.xyw + u_xlat0.xyz;\n    u_xlat16_13.xyz
            = u_xlat16_16.xyz * vec3(u_xlat36);\n    u_xlat16_4.xyz = vec3(u_xlat16_1)
            + (-_SpecColor.xyz);\n    u_xlat16_4.xyz = vec3(u_xlat16_29) * u_xlat16_4.xyz
            + _SpecColor.xyz;\n    u_xlat0.xyz = u_xlat16_13.xyz * u_xlat16_4.xyz
            + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz
            = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2
            = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx
            * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2)
            + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube1;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nin highp vec3 vs_TEXCOORD8;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump
            float u_xlat16_1;\nvec3 u_xlat2;\nbool u_xlatb2;\nfloat u_xlat3;\nmediump
            float u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec4 u_xlat16_5;\nvec3
            u_xlat6;\nmediump vec4 u_xlat16_6;\nvec3 u_xlat7;\nmediump vec4 u_xlat16_7;\nvec3
            u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb9;\nvec3 u_xlat10;\nmediump vec3
            u_xlat16_10;\nbvec3 u_xlatb11;\nfloat u_xlat12;\nmediump vec3 u_xlat16_13;\nvec3
            u_xlat14;\nvec3 u_xlat15;\nmediump vec3 u_xlat16_16;\nmediump float u_xlat16_17;\nfloat
            u_xlat24;\nfloat u_xlat26;\nmediump float u_xlat16_29;\nfloat u_xlat36;\nbool
            u_xlatb36;\nfloat u_xlat38;\nmediump float u_xlat16_41;\nvoid main()\n{\n   
            u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_1 = max(_SpecColor.y, _SpecColor.x);\n   
            u_xlat16_1 = max(u_xlat16_1, _SpecColor.z);\n    u_xlat16_1 = (-u_xlat16_1)
            + 1.0;\n    u_xlat16_13.xyz = u_xlat0.xyz * vec3(u_xlat16_1);\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat2.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat2.x = inversesqrt(u_xlat2.x);\n    u_xlat14.xyz
            = u_xlat2.xxx * vs_TEXCOORD1.xyz;\n    u_xlat16_3 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_4.x = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_4.x = u_xlat16_3 * _OcclusionStrength + u_xlat16_4.x;\n    u_xlat3
            = (-_Glossiness) + 1.0;\n    u_xlat16_16.x = dot(u_xlat14.xyz, u_xlat0.xyz);\n   
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;\n    u_xlat16_16.xyz =
            u_xlat0.xyz * (-u_xlat16_16.xxx) + u_xlat14.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_5.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_5.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat15.xyz = log2(u_xlat16_5.xyz);\n   
            u_xlat15.xyz = u_xlat15.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat15.xyz = exp2(u_xlat15.xyz);\n    u_xlat15.xyz = u_xlat15.xyz *
            vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997,
            -0.0549999997);\n    u_xlat15.xyz = max(u_xlat15.xyz, vec3(0.0, 0.0,
            0.0));\n    u_xlatb36 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb36){\n       
            u_xlat36 = dot(u_xlat16_16.xyz, u_xlat16_16.xyz);\n        u_xlat36 =
            inversesqrt(u_xlat36);\n        u_xlat6.xyz = vec3(u_xlat36) * u_xlat16_16.xyz;\n       
            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat8.xyz = u_xlat8.xyz / u_xlat6.xyz;\n       
            u_xlatb9.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat6.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat7;\n            hlslcc_movcTemp.x
            = (u_xlatb9.x) ? u_xlat7.x : u_xlat8.x;\n            hlslcc_movcTemp.y
            = (u_xlatb9.y) ? u_xlat7.y : u_xlat8.y;\n            hlslcc_movcTemp.z
            = (u_xlatb9.z) ? u_xlat7.z : u_xlat8.z;\n            u_xlat7 = hlslcc_movcTemp;\n       
            }\n        u_xlat36 = min(u_xlat7.y, u_xlat7.x);\n        u_xlat36 =
            min(u_xlat7.z, u_xlat36);\n        u_xlat7.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat6.xyz = u_xlat6.xyz * vec3(u_xlat36) + u_xlat7.xyz;\n    } else
            {\n        u_xlat6.xyz = u_xlat16_16.xyz;\n    }\n    u_xlat16_5.x =
            (-u_xlat3) * 0.699999988 + 1.70000005;\n    u_xlat16_5.x = u_xlat3 *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * 6.0;\n    u_xlat16_6
            = textureLod(unity_SpecCube0, u_xlat6.xyz, u_xlat16_5.x);\n    u_xlat16_17
            = u_xlat16_6.w + -1.0;\n    u_xlat16_17 = unity_SpecCube0_HDR.w * u_xlat16_17
            + 1.0;\n    u_xlat16_17 = u_xlat16_17 * unity_SpecCube0_HDR.x;\n    u_xlat16_10.xyz
            = u_xlat16_6.xyz * vec3(u_xlat16_17);\n    u_xlatb36 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb36){\n        u_xlatb36 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb36){\n            u_xlat36 = dot(u_xlat16_16.xyz, u_xlat16_16.xyz);\n           
            u_xlat36 = inversesqrt(u_xlat36);\n            u_xlat7.xyz = vec3(u_xlat36)
            * u_xlat16_16.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb11.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb11.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb11.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb11.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat36 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat36
            = min(u_xlat8.z, u_xlat36);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat36) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_16.xyz;\n        }\n        u_xlat16_7 = textureLod(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_5.x);\n        u_xlat16_16.x = u_xlat16_7.w + -1.0;\n       
            u_xlat16_16.x = unity_SpecCube1_HDR.w * u_xlat16_16.x + 1.0;\n       
            u_xlat16_16.x = u_xlat16_16.x * unity_SpecCube1_HDR.x;\n        u_xlat16_16.xyz
            = u_xlat16_7.xyz * u_xlat16_16.xxx;\n        u_xlat6.xyz = vec3(u_xlat16_17)
            * u_xlat16_6.xyz + (-u_xlat16_16.xyz);\n        u_xlat10.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat6.xyz + u_xlat16_16.xyz;\n        u_xlat16_10.xyz = u_xlat10.xyz;\n   
            }\n    u_xlat16_16.xyz = u_xlat16_4.xxx * u_xlat16_10.xyz;\n    u_xlat6.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat2.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat36 = dot(u_xlat6.xyz, u_xlat6.xyz);\n    u_xlat36 = max(u_xlat36,
            0.00100000005);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat6.xyz
            = vec3(u_xlat36) * u_xlat6.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, (-u_xlat14.xyz));\n   
            u_xlat2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat6.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat12 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat6.xyz);\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat16_5.x
            = u_xlat12 + u_xlat12;\n    u_xlat16_5.x = u_xlat12 * u_xlat16_5.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat3 + -0.5;\n    u_xlat16_17 = (-u_xlat2.x)
            + 1.0;\n    u_xlat16_29 = u_xlat16_17 * u_xlat16_17;\n    u_xlat16_29
            = u_xlat16_29 * u_xlat16_29;\n    u_xlat16_17 = u_xlat16_17 * u_xlat16_29;\n   
            u_xlat16_17 = u_xlat16_5.x * u_xlat16_17 + 1.0;\n    u_xlat16_29 = -abs(u_xlat36)
            + 1.0;\n    u_xlat16_41 = u_xlat16_29 * u_xlat16_29;\n    u_xlat16_41
            = u_xlat16_41 * u_xlat16_41;\n    u_xlat16_29 = u_xlat16_29 * u_xlat16_41;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_29 + 1.0;\n    u_xlat16_5.x =
            u_xlat16_5.x * u_xlat16_17;\n    u_xlat24 = u_xlat2.x * u_xlat16_5.x;\n   
            u_xlat14.x = u_xlat3 * u_xlat3;\n    u_xlat14.x = max(u_xlat14.x, 0.00200000009);\n   
            u_xlat26 = (-u_xlat14.x) + 1.0;\n    u_xlat38 = abs(u_xlat36) * u_xlat26
            + u_xlat14.x;\n    u_xlat26 = u_xlat2.x * u_xlat26 + u_xlat14.x;\n   
            u_xlat36 = abs(u_xlat36) * u_xlat26;\n    u_xlat36 = u_xlat2.x * u_xlat38
            + u_xlat36;\n    u_xlat36 = u_xlat36 + 9.99999975e-06;\n    u_xlat36
            = 0.5 / u_xlat36;\n    u_xlat26 = u_xlat14.x * u_xlat14.x;\n    u_xlat38
            = u_xlat0.x * u_xlat26 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat38 * u_xlat0.x
            + 1.0;\n    u_xlat26 = u_xlat26 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat26 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat36;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat2.x * u_xlat0.x;\n    u_xlat36 = u_xlat14.x * u_xlat3;\n   
            u_xlat36 = (-u_xlat36) * 0.280000001 + 1.0;\n    u_xlat16_5.x = dot(_SpecColor.xyz,
            _SpecColor.xyz);\n    u_xlatb2 = u_xlat16_5.x!=0.0;\n    u_xlat2.x =
            u_xlatb2 ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat2.x;\n   
            u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_1 = u_xlat16_1 + _Glossiness;\n   
            u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n    u_xlat16_5.xyw = vec3(u_xlat24)
            * _LightColor0.xyz;\n    u_xlat16_5.xyw = u_xlat15.xyz * u_xlat16_4.xxx
            + u_xlat16_5.xyw;\n    u_xlat2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.x = (-u_xlat12) + 1.0;\n    u_xlat16_10.x = u_xlat16_4.x *
            u_xlat16_4.x;\n    u_xlat16_10.x = u_xlat16_10.x * u_xlat16_10.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_10.x;\n    u_xlat16_10.xyz = (-_SpecColor.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_10.xyz * u_xlat16_4.xxx
            + _SpecColor.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * u_xlat16_10.xyz;\n   
            u_xlat0.xyz = u_xlat16_13.xyz * u_xlat16_5.xyw + u_xlat0.xyz;\n    u_xlat16_13.xyz
            = u_xlat16_16.xyz * vec3(u_xlat36);\n    u_xlat16_4.xyz = vec3(u_xlat16_1)
            + (-_SpecColor.xyz);\n    u_xlat16_4.xyz = vec3(u_xlat16_29) * u_xlat16_4.xyz
            + _SpecColor.xyz;\n    u_xlat0.xyz = u_xlat16_13.xyz * u_xlat16_4.xyz
            + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying
            mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying
            highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            vec3 u_xlat16_2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat1.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n   
            u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx
            * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n   
            vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz
            = u_xlat16_2.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n   
            vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _BumpScale;\nuniform \tfloat _GlossMapScale;\nuniform
            \tmediump float _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform
            lowp sampler2D _OcclusionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform
            lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3
            vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump float
            u_xlat16_2;\nmediump vec4 u_xlat16_3;\nmediump vec4 u_xlat16_4;\nvec3
            u_xlat5;\nbool u_xlatb5;\nvec3 u_xlat6;\nlowp vec4 u_xlat10_6;\nbool
            u_xlatb6;\nvec3 u_xlat7;\nlowp vec4 u_xlat10_7;\nvec3 u_xlat8;\nvec3
            u_xlat9;\nbvec3 u_xlatb9;\nvec3 u_xlat10;\nmediump vec3 u_xlat16_10;\nbvec3
            u_xlatb11;\nfloat u_xlat13;\nmediump vec3 u_xlat16_14;\nmediump vec3
            u_xlat16_15;\nmediump float u_xlat16_16;\nfloat u_xlat17;\nfloat u_xlat25;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_28;\nfloat u_xlat29;\nfloat
            u_xlat37;\nmediump float u_xlat16_39;\nfloat u_xlat41;\nlowp float u_xlat10_41;\nfloat
            u_xlat42;\nbool u_xlatb42;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap,
            vs_TEXCOORD0.xy);\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_2 = max(u_xlat10_0.y,
            u_xlat10_0.x);\n    u_xlat16_2 = max(u_xlat10_0.z, u_xlat16_2);\n   
            u_xlat16_2 = (-u_xlat16_2) + 1.0;\n    u_xlat16_14.xyz = u_xlat1.xyz
            * vec3(u_xlat16_2);\n    u_xlat10_1.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n   
            u_xlat16_3.xy = u_xlat10_1.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_27 = dot(u_xlat16_3.xy, u_xlat16_3.xy);\n    u_xlat16_27 = min(u_xlat16_27,
            1.0);\n    u_xlat16_27 = (-u_xlat16_27) + 1.0;\n    u_xlat16_27 = sqrt(u_xlat16_27);\n   
            u_xlat16_3.xy = u_xlat16_3.xy * vec2(_BumpScale);\n    u_xlat16_4.xyz
            = u_xlat16_3.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_3.xyw = vs_TEXCOORD2.xyz
            * u_xlat16_3.xxx + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = vs_TEXCOORD4.xyz
            * vec3(u_xlat16_27) + u_xlat16_3.xyw;\n    u_xlat1.x = dot(u_xlat16_3.xyz,
            u_xlat16_3.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz
            = u_xlat1.xxx * u_xlat16_3.xyz;\n    u_xlat37 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat37 = inversesqrt(u_xlat37);\n    u_xlat5.xyz
            = vec3(u_xlat37) * vs_TEXCOORD1.xyz;\n    u_xlat10_41 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.x = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_3.x = u_xlat10_41 * _OcclusionStrength + u_xlat16_3.x;\n   
            u_xlat41 = (-u_xlat10_0.w) * _GlossMapScale + 1.0;\n    u_xlat16_15.x
            = dot(u_xlat5.xyz, u_xlat1.xyz);\n    u_xlat16_15.x = u_xlat16_15.x +
            u_xlat16_15.x;\n    u_xlat16_15.xyz = u_xlat1.xyz * (-u_xlat16_15.xxx)
            + u_xlat5.xyz;\n    u_xlatb6 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb6){\n        u_xlat6.x = dot(u_xlat16_15.xyz, u_xlat16_15.xyz);\n       
            u_xlat6.x = inversesqrt(u_xlat6.x);\n        u_xlat6.xyz = u_xlat16_15.xyz
            * u_xlat6.xxx;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat8.xyz = u_xlat8.xyz / u_xlat6.xyz;\n       
            u_xlatb9.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat6.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat7;\n            hlslcc_movcTemp.x
            = (u_xlatb9.x) ? u_xlat7.x : u_xlat8.x;\n            hlslcc_movcTemp.y
            = (u_xlatb9.y) ? u_xlat7.y : u_xlat8.y;\n            hlslcc_movcTemp.z
            = (u_xlatb9.z) ? u_xlat7.z : u_xlat8.z;\n            u_xlat7 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat7.y, u_xlat7.x);\n        u_xlat42 =
            min(u_xlat7.z, u_xlat42);\n        u_xlat7.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat6.xyz = u_xlat6.xyz * vec3(u_xlat42) + u_xlat7.xyz;\n    } else
            {\n        u_xlat6.xyz = u_xlat16_15.xyz;\n    }\n    u_xlat16_4.x =
            (-u_xlat41) * 0.699999988 + 1.70000005;\n    u_xlat16_4.x = u_xlat16_4.x
            * u_xlat41;\n    u_xlat16_4.x = u_xlat16_4.x * 6.0;\n    u_xlat10_6 =
            textureCubeLodEXT(unity_SpecCube0, u_xlat6.xyz, u_xlat16_4.x);\n    u_xlat16_16
            = u_xlat10_6.w + -1.0;\n    u_xlat16_16 = unity_SpecCube0_HDR.w * u_xlat16_16
            + 1.0;\n    u_xlat16_16 = u_xlat16_16 * unity_SpecCube0_HDR.x;\n    u_xlat16_10.xyz
            = u_xlat10_6.xyz * vec3(u_xlat16_16);\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_15.xyz, u_xlat16_15.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = u_xlat16_15.xyz
            * vec3(u_xlat42);\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb11.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb11.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb11.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb11.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_15.xyz;\n        }\n        u_xlat10_7 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_4.x);\n        u_xlat16_15.x = u_xlat10_7.w + -1.0;\n       
            u_xlat16_15.x = unity_SpecCube1_HDR.w * u_xlat16_15.x + 1.0;\n       
            u_xlat16_15.x = u_xlat16_15.x * unity_SpecCube1_HDR.x;\n        u_xlat16_15.xyz
            = u_xlat10_7.xyz * u_xlat16_15.xxx;\n        u_xlat6.xyz = vec3(u_xlat16_16)
            * u_xlat10_6.xyz + (-u_xlat16_15.xyz);\n        u_xlat10.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat6.xyz + u_xlat16_15.xyz;\n        u_xlat16_10.xyz = u_xlat10.xyz;\n   
            }\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_10.xyz;\n    u_xlat6.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat37) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat37 = dot(u_xlat6.xyz, u_xlat6.xyz);\n    u_xlat37 = max(u_xlat37,
            0.00100000005);\n    u_xlat37 = inversesqrt(u_xlat37);\n    u_xlat6.xyz
            = vec3(u_xlat37) * u_xlat6.xyz;\n    u_xlat37 = dot(u_xlat1.xyz, (-u_xlat5.xyz));\n   
            u_xlat5.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat5.x
            = clamp(u_xlat5.x, 0.0, 1.0);\n    u_xlat1.x = dot(u_xlat1.xyz, u_xlat6.xyz);\n   
            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat6.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_39
            = u_xlat13 + u_xlat13;\n    u_xlat16_39 = u_xlat13 * u_xlat16_39;\n   
            u_xlat16_39 = u_xlat16_39 * u_xlat41 + -0.5;\n    u_xlat16_4.x = (-u_xlat5.x)
            + 1.0;\n    u_xlat16_16 = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_16
            = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_16;\n   
            u_xlat16_4.x = u_xlat16_39 * u_xlat16_4.x + 1.0;\n    u_xlat16_16 = -abs(u_xlat37)
            + 1.0;\n    u_xlat16_28 = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_28
            = u_xlat16_28 * u_xlat16_28;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_28;\n   
            u_xlat16_39 = u_xlat16_39 * u_xlat16_16 + 1.0;\n    u_xlat16_39 = u_xlat16_39
            * u_xlat16_4.x;\n    u_xlat25 = u_xlat5.x * u_xlat16_39;\n    u_xlat17
            = u_xlat41 * u_xlat41;\n    u_xlat17 = max(u_xlat17, 0.00200000009);\n   
            u_xlat29 = (-u_xlat17) + 1.0;\n    u_xlat6.x = abs(u_xlat37) * u_xlat29
            + u_xlat17;\n    u_xlat29 = u_xlat5.x * u_xlat29 + u_xlat17;\n    u_xlat37
            = abs(u_xlat37) * u_xlat29;\n    u_xlat37 = u_xlat5.x * u_xlat6.x + u_xlat37;\n   
            u_xlat37 = u_xlat37 + 9.99999975e-06;\n    u_xlat37 = 0.5 / u_xlat37;\n   
            u_xlat29 = u_xlat17 * u_xlat17;\n    u_xlat6.x = u_xlat1.x * u_xlat29
            + (-u_xlat1.x);\n    u_xlat1.x = u_xlat6.x * u_xlat1.x + 1.0;\n    u_xlat29
            = u_xlat29 * 0.318309873;\n    u_xlat1.x = u_xlat1.x * u_xlat1.x + 1.00000001e-07;\n   
            u_xlat1.x = u_xlat29 / u_xlat1.x;\n    u_xlat1.x = u_xlat1.x * u_xlat37;\n   
            u_xlat1.x = u_xlat1.x * 3.14159274;\n    u_xlat1.x = max(u_xlat1.x, 9.99999975e-05);\n   
            u_xlat1.x = sqrt(u_xlat1.x);\n    u_xlat1.x = u_xlat5.x * u_xlat1.x;\n   
            u_xlat37 = u_xlat17 * u_xlat41;\n    u_xlat37 = (-u_xlat37) * 0.280000001
            + 1.0;\n    u_xlat16_39 = dot(u_xlat10_0.xyz, u_xlat10_0.xyz);\n    u_xlatb5
            = u_xlat16_39!=0.0;\n    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);\n   
            u_xlat1.x = u_xlat1.x * u_xlat5.x;\n    u_xlat16_2 = (-u_xlat16_2) +
            1.0;\n    u_xlat16_2 = u_xlat10_0.w * _GlossMapScale + u_xlat16_2;\n   
            u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);\n    u_xlat16_4.xzw = vec3(u_xlat25)
            * _LightColor0.xyz;\n    u_xlat5.xyz = u_xlat1.xxx * _LightColor0.xyz;\n   
            u_xlat16_39 = (-u_xlat13) + 1.0;\n    u_xlat16_10.x = u_xlat16_39 * u_xlat16_39;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat16_10.x;\n    u_xlat16_39 = u_xlat16_39
            * u_xlat16_10.x;\n    u_xlat16_10.xyz = (-u_xlat10_0.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(u_xlat16_39)
            + u_xlat10_0.xyz;\n    u_xlat1.xyz = u_xlat5.xyz * u_xlat16_10.xyz;\n   
            u_xlat1.xyz = u_xlat16_14.xyz * u_xlat16_4.xzw + u_xlat1.xyz;\n    u_xlat16_14.xyz
            = u_xlat16_3.xyz * vec3(u_xlat37);\n    u_xlat16_3.xyz = (-u_xlat10_0.xyz)
            + vec3(u_xlat16_2);\n    u_xlat16_3.xyz = vec3(u_xlat16_16) * u_xlat16_3.xyz
            + u_xlat10_0.xyz;\n    u_xlat0.xyz = u_xlat16_14.xyz * u_xlat16_3.xyz
            + u_xlat1.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nin mediump vec4 in_TANGENT0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_2;\nfloat
            u_xlat9;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat1.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n   
            u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx
            * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n   
            vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz
            = u_xlat16_2.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n   
            vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _BumpScale;\nuniform \tfloat _GlossMapScale;\nuniform
            \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump
            sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _SpecGlossMap;\nUNITY_LOCATION(2)
            uniform mediump sampler2D _BumpMap;\nUNITY_LOCATION(3) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(4) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(5) uniform mediump samplerCube unity_SpecCube1;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nin
            highp vec3 vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_1;\nmediump
            float u_xlat16_2;\nmediump vec4 u_xlat16_3;\nmediump vec4 u_xlat16_4;\nvec3
            u_xlat5;\nbool u_xlatb5;\nvec3 u_xlat6;\nmediump vec4 u_xlat16_6;\nbool
            u_xlatb6;\nvec3 u_xlat7;\nmediump vec4 u_xlat16_7;\nvec3 u_xlat8;\nvec3
            u_xlat9;\nbvec3 u_xlatb9;\nvec3 u_xlat10;\nmediump vec3 u_xlat16_10;\nbvec3
            u_xlatb11;\nfloat u_xlat13;\nmediump vec3 u_xlat16_14;\nmediump vec3
            u_xlat16_15;\nmediump float u_xlat16_16;\nfloat u_xlat17;\nfloat u_xlat25;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_28;\nfloat u_xlat29;\nfloat
            u_xlat37;\nmediump float u_xlat16_39;\nfloat u_xlat41;\nmediump float
            u_xlat16_41;\nfloat u_xlat42;\nbool u_xlatb42;\nvoid main()\n{\n    u_xlat16_0
            = texture(_SpecGlossMap, vs_TEXCOORD0.xy);\n    u_xlat16_1.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n   
            u_xlat16_2 = max(u_xlat16_0.y, u_xlat16_0.x);\n    u_xlat16_2 = max(u_xlat16_0.z,
            u_xlat16_2);\n    u_xlat16_2 = (-u_xlat16_2) + 1.0;\n    u_xlat16_14.xyz
            = u_xlat1.xyz * vec3(u_xlat16_2);\n    u_xlat16_1.xy = texture(_BumpMap,
            vs_TEXCOORD0.xy).yw;\n    u_xlat16_3.xy = u_xlat16_1.yx * vec2(2.0, 2.0)
            + vec2(-1.0, -1.0);\n    u_xlat16_27 = dot(u_xlat16_3.xy, u_xlat16_3.xy);\n   
            u_xlat16_27 = min(u_xlat16_27, 1.0);\n    u_xlat16_27 = (-u_xlat16_27)
            + 1.0;\n    u_xlat16_27 = sqrt(u_xlat16_27);\n    u_xlat16_3.xy = u_xlat16_3.xy
            * vec2(_BumpScale);\n    u_xlat16_4.xyz = u_xlat16_3.yyy * vs_TEXCOORD3.xyz;\n   
            u_xlat16_3.xyw = vs_TEXCOORD2.xyz * u_xlat16_3.xxx + u_xlat16_4.xyz;\n   
            u_xlat16_3.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_27) + u_xlat16_3.xyw;\n   
            u_xlat1.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n   
            u_xlat1.xyz = u_xlat1.xxx * u_xlat16_3.xyz;\n    u_xlat37 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat37 = inversesqrt(u_xlat37);\n    u_xlat5.xyz
            = vec3(u_xlat37) * vs_TEXCOORD1.xyz;\n    u_xlat16_41 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.x = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_3.x = u_xlat16_41 * _OcclusionStrength + u_xlat16_3.x;\n   
            u_xlat41 = (-u_xlat16_0.w) * _GlossMapScale + 1.0;\n    u_xlat16_15.x
            = dot(u_xlat5.xyz, u_xlat1.xyz);\n    u_xlat16_15.x = u_xlat16_15.x +
            u_xlat16_15.x;\n    u_xlat16_15.xyz = u_xlat1.xyz * (-u_xlat16_15.xxx)
            + u_xlat5.xyz;\n    u_xlatb6 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb6){\n        u_xlat6.x = dot(u_xlat16_15.xyz, u_xlat16_15.xyz);\n       
            u_xlat6.x = inversesqrt(u_xlat6.x);\n        u_xlat6.xyz = u_xlat16_15.xyz
            * u_xlat6.xxx;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat8.xyz = u_xlat8.xyz / u_xlat6.xyz;\n       
            u_xlatb9.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat6.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat7;\n            hlslcc_movcTemp.x
            = (u_xlatb9.x) ? u_xlat7.x : u_xlat8.x;\n            hlslcc_movcTemp.y
            = (u_xlatb9.y) ? u_xlat7.y : u_xlat8.y;\n            hlslcc_movcTemp.z
            = (u_xlatb9.z) ? u_xlat7.z : u_xlat8.z;\n            u_xlat7 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat7.y, u_xlat7.x);\n        u_xlat42 =
            min(u_xlat7.z, u_xlat42);\n        u_xlat7.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat6.xyz = u_xlat6.xyz * vec3(u_xlat42) + u_xlat7.xyz;\n    } else
            {\n        u_xlat6.xyz = u_xlat16_15.xyz;\n    }\n    u_xlat16_4.x =
            (-u_xlat41) * 0.699999988 + 1.70000005;\n    u_xlat16_4.x = u_xlat16_4.x
            * u_xlat41;\n    u_xlat16_4.x = u_xlat16_4.x * 6.0;\n    u_xlat16_6 =
            textureLod(unity_SpecCube0, u_xlat6.xyz, u_xlat16_4.x);\n    u_xlat16_16
            = u_xlat16_6.w + -1.0;\n    u_xlat16_16 = unity_SpecCube0_HDR.w * u_xlat16_16
            + 1.0;\n    u_xlat16_16 = u_xlat16_16 * unity_SpecCube0_HDR.x;\n    u_xlat16_10.xyz
            = u_xlat16_6.xyz * vec3(u_xlat16_16);\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_15.xyz, u_xlat16_15.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = u_xlat16_15.xyz
            * vec3(u_xlat42);\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb11.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb11.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb11.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb11.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_15.xyz;\n        }\n        u_xlat16_7 = textureLod(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_4.x);\n        u_xlat16_15.x = u_xlat16_7.w + -1.0;\n       
            u_xlat16_15.x = unity_SpecCube1_HDR.w * u_xlat16_15.x + 1.0;\n       
            u_xlat16_15.x = u_xlat16_15.x * unity_SpecCube1_HDR.x;\n        u_xlat16_15.xyz
            = u_xlat16_7.xyz * u_xlat16_15.xxx;\n        u_xlat6.xyz = vec3(u_xlat16_16)
            * u_xlat16_6.xyz + (-u_xlat16_15.xyz);\n        u_xlat10.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat6.xyz + u_xlat16_15.xyz;\n        u_xlat16_10.xyz = u_xlat10.xyz;\n   
            }\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_10.xyz;\n    u_xlat6.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat37) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat37 = dot(u_xlat6.xyz, u_xlat6.xyz);\n    u_xlat37 = max(u_xlat37,
            0.00100000005);\n    u_xlat37 = inversesqrt(u_xlat37);\n    u_xlat6.xyz
            = vec3(u_xlat37) * u_xlat6.xyz;\n    u_xlat37 = dot(u_xlat1.xyz, (-u_xlat5.xyz));\n   
            u_xlat5.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat5.x
            = clamp(u_xlat5.x, 0.0, 1.0);\n    u_xlat1.x = dot(u_xlat1.xyz, u_xlat6.xyz);\n   
            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat6.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_39
            = u_xlat13 + u_xlat13;\n    u_xlat16_39 = u_xlat13 * u_xlat16_39;\n   
            u_xlat16_39 = u_xlat16_39 * u_xlat41 + -0.5;\n    u_xlat16_4.x = (-u_xlat5.x)
            + 1.0;\n    u_xlat16_16 = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_16
            = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_16;\n   
            u_xlat16_4.x = u_xlat16_39 * u_xlat16_4.x + 1.0;\n    u_xlat16_16 = -abs(u_xlat37)
            + 1.0;\n    u_xlat16_28 = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_28
            = u_xlat16_28 * u_xlat16_28;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_28;\n   
            u_xlat16_39 = u_xlat16_39 * u_xlat16_16 + 1.0;\n    u_xlat16_39 = u_xlat16_39
            * u_xlat16_4.x;\n    u_xlat25 = u_xlat5.x * u_xlat16_39;\n    u_xlat17
            = u_xlat41 * u_xlat41;\n    u_xlat17 = max(u_xlat17, 0.00200000009);\n   
            u_xlat29 = (-u_xlat17) + 1.0;\n    u_xlat6.x = abs(u_xlat37) * u_xlat29
            + u_xlat17;\n    u_xlat29 = u_xlat5.x * u_xlat29 + u_xlat17;\n    u_xlat37
            = abs(u_xlat37) * u_xlat29;\n    u_xlat37 = u_xlat5.x * u_xlat6.x + u_xlat37;\n   
            u_xlat37 = u_xlat37 + 9.99999975e-06;\n    u_xlat37 = 0.5 / u_xlat37;\n   
            u_xlat29 = u_xlat17 * u_xlat17;\n    u_xlat6.x = u_xlat1.x * u_xlat29
            + (-u_xlat1.x);\n    u_xlat1.x = u_xlat6.x * u_xlat1.x + 1.0;\n    u_xlat29
            = u_xlat29 * 0.318309873;\n    u_xlat1.x = u_xlat1.x * u_xlat1.x + 1.00000001e-07;\n   
            u_xlat1.x = u_xlat29 / u_xlat1.x;\n    u_xlat1.x = u_xlat1.x * u_xlat37;\n   
            u_xlat1.x = u_xlat1.x * 3.14159274;\n    u_xlat1.x = max(u_xlat1.x, 9.99999975e-05);\n   
            u_xlat1.x = sqrt(u_xlat1.x);\n    u_xlat1.x = u_xlat5.x * u_xlat1.x;\n   
            u_xlat37 = u_xlat17 * u_xlat41;\n    u_xlat37 = (-u_xlat37) * 0.280000001
            + 1.0;\n    u_xlat16_39 = dot(u_xlat16_0.xyz, u_xlat16_0.xyz);\n    u_xlatb5
            = u_xlat16_39!=0.0;\n    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);\n   
            u_xlat1.x = u_xlat1.x * u_xlat5.x;\n    u_xlat16_2 = (-u_xlat16_2) +
            1.0;\n    u_xlat16_2 = u_xlat16_0.w * _GlossMapScale + u_xlat16_2;\n   
            u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);\n    u_xlat16_4.xzw = vec3(u_xlat25)
            * _LightColor0.xyz;\n    u_xlat5.xyz = u_xlat1.xxx * _LightColor0.xyz;\n   
            u_xlat16_39 = (-u_xlat13) + 1.0;\n    u_xlat16_10.x = u_xlat16_39 * u_xlat16_39;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat16_10.x;\n    u_xlat16_39 = u_xlat16_39
            * u_xlat16_10.x;\n    u_xlat16_10.xyz = (-u_xlat16_0.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(u_xlat16_39)
            + u_xlat16_0.xyz;\n    u_xlat1.xyz = u_xlat5.xyz * u_xlat16_10.xyz;\n   
            u_xlat1.xyz = u_xlat16_14.xyz * u_xlat16_4.xzw + u_xlat1.xyz;\n    u_xlat16_14.xyz
            = u_xlat16_3.xyz * vec3(u_xlat37);\n    u_xlat16_3.xyz = (-u_xlat16_0.xyz)
            + vec3(u_xlat16_2);\n    u_xlat16_3.xyz = vec3(u_xlat16_16) * u_xlat16_3.xyz
            + u_xlat16_0.xyz;\n    u_xlat0.xyz = u_xlat16_14.xyz * u_xlat16_3.xyz
            + u_xlat1.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform
            \tmediump vec4 _Color;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _OcclusionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform
            lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nmediump float u_xlat16_1;\nvec3 u_xlat2;\nbool u_xlatb2;\nmediump
            vec3 u_xlat16_3;\nvec3 u_xlat4;\nlowp vec4 u_xlat10_4;\nbool u_xlatb4;\nvec3
            u_xlat5;\nlowp vec4 u_xlat10_5;\nvec3 u_xlat6;\nvec3 u_xlat7;\nbvec3
            u_xlatb7;\nmediump vec4 u_xlat16_8;\nvec3 u_xlat9;\nmediump vec3 u_xlat16_9;\nbvec3
            u_xlatb10;\nfloat u_xlat11;\nmediump vec3 u_xlat16_12;\nfloat u_xlat13;\nmediump
            vec3 u_xlat16_14;\nmediump float u_xlat16_19;\nfloat u_xlat22;\nfloat
            u_xlat24;\nmediump float u_xlat16_30;\nfloat u_xlat33;\nfloat u_xlat35;\nlowp
            float u_xlat10_35;\nmediump float u_xlat16_36;\nfloat u_xlat37;\nbool
            u_xlatb37;\nvoid main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_1 = max(_SpecColor.y, _SpecColor.x);\n    u_xlat16_1 = max(u_xlat16_1,
            _SpecColor.z);\n    u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_12.xyz
            = u_xlat0.xyz * vec3(u_xlat16_1);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat33 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat2.xyz
            = vec3(u_xlat33) * vs_TEXCOORD1.xyz;\n    u_xlat10_35 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.x = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_3.x = u_xlat10_35 * _OcclusionStrength + u_xlat16_3.x;\n   
            u_xlat35 = (-_Glossiness) + 1.0;\n    u_xlat16_14.x = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat16_14.x = u_xlat16_14.x + u_xlat16_14.x;\n   
            u_xlat16_14.xyz = u_xlat0.xyz * (-u_xlat16_14.xxx) + u_xlat2.xyz;\n   
            u_xlatb4 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb4){\n       
            u_xlat4.x = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n        u_xlat4.x
            = inversesqrt(u_xlat4.x);\n        u_xlat4.xyz = u_xlat16_14.xyz * u_xlat4.xxx;\n       
            u_xlat5.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat5.xyz = u_xlat5.xyz / u_xlat4.xyz;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat6.xyz = u_xlat6.xyz / u_xlat4.xyz;\n       
            u_xlatb7.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat4.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat5;\n            hlslcc_movcTemp.x
            = (u_xlatb7.x) ? u_xlat5.x : u_xlat6.x;\n            hlslcc_movcTemp.y
            = (u_xlatb7.y) ? u_xlat5.y : u_xlat6.y;\n            hlslcc_movcTemp.z
            = (u_xlatb7.z) ? u_xlat5.z : u_xlat6.z;\n            u_xlat5 = hlslcc_movcTemp;\n       
            }\n        u_xlat37 = min(u_xlat5.y, u_xlat5.x);\n        u_xlat37 =
            min(u_xlat5.z, u_xlat37);\n        u_xlat5.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat37) + u_xlat5.xyz;\n    } else
            {\n        u_xlat4.xyz = u_xlat16_14.xyz;\n    }\n    u_xlat16_8.x =
            (-u_xlat35) * 0.699999988 + 1.70000005;\n    u_xlat16_8.x = u_xlat35
            * u_xlat16_8.x;\n    u_xlat16_8.x = u_xlat16_8.x * 6.0;\n    u_xlat10_4
            = textureCubeLodEXT(unity_SpecCube0, u_xlat4.xyz, u_xlat16_8.x);\n   
            u_xlat16_19 = u_xlat10_4.w + -1.0;\n    u_xlat16_19 = unity_SpecCube0_HDR.w
            * u_xlat16_19 + 1.0;\n    u_xlat16_19 = u_xlat16_19 * unity_SpecCube0_HDR.x;\n   
            u_xlat16_9.xyz = u_xlat10_4.xyz * vec3(u_xlat16_19);\n    u_xlatb37 =
            unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb37){\n        u_xlatb37
            = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb37){\n           
            u_xlat37 = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n            u_xlat37
            = inversesqrt(u_xlat37);\n            u_xlat5.xyz = u_xlat16_14.xyz *
            vec3(u_xlat37);\n            u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat7.xyz = u_xlat7.xyz
            / u_xlat5.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat5.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat6;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat6.x
            : u_xlat7.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat6.y
            : u_xlat7.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat6.z
            : u_xlat7.z;\n                u_xlat6 = hlslcc_movcTemp;\n           
            }\n            u_xlat37 = min(u_xlat6.y, u_xlat6.x);\n            u_xlat37
            = min(u_xlat6.z, u_xlat37);\n            u_xlat6.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat5.xyz = u_xlat5.xyz
            * vec3(u_xlat37) + u_xlat6.xyz;\n        } else {\n            u_xlat5.xyz
            = u_xlat16_14.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat5.xyz, u_xlat16_8.x);\n        u_xlat16_14.x = u_xlat10_5.w + -1.0;\n       
            u_xlat16_14.x = unity_SpecCube1_HDR.w * u_xlat16_14.x + 1.0;\n       
            u_xlat16_14.x = u_xlat16_14.x * unity_SpecCube1_HDR.x;\n        u_xlat16_14.xyz
            = u_xlat10_5.xyz * u_xlat16_14.xxx;\n        u_xlat4.xyz = vec3(u_xlat16_19)
            * u_xlat10_4.xyz + (-u_xlat16_14.xyz);\n        u_xlat9.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat4.xyz + u_xlat16_14.xyz;\n        u_xlat16_9.xyz = u_xlat9.xyz;\n   
            }\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;\n    u_xlat4.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat33) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat33 = dot(u_xlat4.xyz, u_xlat4.xyz);\n    u_xlat33 = max(u_xlat33,
            0.00100000005);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat4.xyz
            = vec3(u_xlat33) * u_xlat4.xyz;\n    u_xlat33 = dot(u_xlat0.xyz, (-u_xlat2.xyz));\n   
            u_xlat2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat4.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat11 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n    u_xlat11 = clamp(u_xlat11, 0.0, 1.0);\n    u_xlat16_36
            = u_xlat11 + u_xlat11;\n    u_xlat16_36 = u_xlat11 * u_xlat16_36;\n   
            u_xlat16_36 = u_xlat16_36 * u_xlat35 + -0.5;\n    u_xlat16_8.x = (-u_xlat2.x)
            + 1.0;\n    u_xlat16_19 = u_xlat16_8.x * u_xlat16_8.x;\n    u_xlat16_19
            = u_xlat16_19 * u_xlat16_19;\n    u_xlat16_8.x = u_xlat16_8.x * u_xlat16_19;\n   
            u_xlat16_8.x = u_xlat16_36 * u_xlat16_8.x + 1.0;\n    u_xlat16_19 = -abs(u_xlat33)
            + 1.0;\n    u_xlat16_30 = u_xlat16_19 * u_xlat16_19;\n    u_xlat16_30
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_19 = u_xlat16_19 * u_xlat16_30;\n   
            u_xlat16_36 = u_xlat16_36 * u_xlat16_19 + 1.0;\n    u_xlat16_36 = u_xlat16_36
            * u_xlat16_8.x;\n    u_xlat22 = u_xlat2.x * u_xlat16_36;\n    u_xlat13
            = u_xlat35 * u_xlat35;\n    u_xlat13 = max(u_xlat13, 0.00200000009);\n   
            u_xlat24 = (-u_xlat13) + 1.0;\n    u_xlat4.x = abs(u_xlat33) * u_xlat24
            + u_xlat13;\n    u_xlat24 = u_xlat2.x * u_xlat24 + u_xlat13;\n    u_xlat33
            = abs(u_xlat33) * u_xlat24;\n    u_xlat33 = u_xlat2.x * u_xlat4.x + u_xlat33;\n   
            u_xlat33 = u_xlat33 + 9.99999975e-06;\n    u_xlat33 = 0.5 / u_xlat33;\n   
            u_xlat24 = u_xlat13 * u_xlat13;\n    u_xlat4.x = u_xlat0.x * u_xlat24
            + (-u_xlat0.x);\n    u_xlat0.x = u_xlat4.x * u_xlat0.x + 1.0;\n    u_xlat24
            = u_xlat24 * 0.318309873;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n   
            u_xlat0.x = u_xlat24 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat33;\n   
            u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat2.x * u_xlat0.x;\n   
            u_xlat33 = u_xlat13 * u_xlat35;\n    u_xlat33 = (-u_xlat33) * 0.280000001
            + 1.0;\n    u_xlat16_36 = dot(_SpecColor.xyz, _SpecColor.xyz);\n    u_xlatb2
            = u_xlat16_36!=0.0;\n    u_xlat2.x = u_xlatb2 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat2.x;\n    u_xlat16_1 = (-u_xlat16_1) +
            1.0;\n    u_xlat16_1 = u_xlat16_1 + _Glossiness;\n    u_xlat16_1 = clamp(u_xlat16_1,
            0.0, 1.0);\n    u_xlat16_8.xzw = vec3(u_xlat22) * _LightColor0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_36 = (-u_xlat11)
            + 1.0;\n    u_xlat16_9.x = u_xlat16_36 * u_xlat16_36;\n    u_xlat16_9.x
            = u_xlat16_9.x * u_xlat16_9.x;\n    u_xlat16_36 = u_xlat16_36 * u_xlat16_9.x;\n   
            u_xlat16_9.xyz = (-_SpecColor.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_9.xyz
            = u_xlat16_9.xyz * vec3(u_xlat16_36) + _SpecColor.xyz;\n    u_xlat0.xyz
            = u_xlat2.xyz * u_xlat16_9.xyz;\n    u_xlat0.xyz = u_xlat16_12.xyz *
            u_xlat16_8.xzw + u_xlat0.xyz;\n    u_xlat16_12.xyz = u_xlat16_3.xyz *
            vec3(u_xlat33);\n    u_xlat16_3.xyz = vec3(u_xlat16_1) + (-_SpecColor.xyz);\n   
            u_xlat16_3.xyz = vec3(u_xlat16_19) * u_xlat16_3.xyz + _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat16_12.xyz * u_xlat16_3.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz,
            u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz
            = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5
            = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform
            \tmediump vec4 _Color;\nuniform \tfloat _Glossiness;\nuniform \tmediump
            float _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2)
            uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(3) uniform
            mediump samplerCube unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD4;\nin highp vec3
            vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump float u_xlat16_1;\nvec3 u_xlat2;\nbool
            u_xlatb2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec4 u_xlat16_4;\nbool
            u_xlatb4;\nvec3 u_xlat5;\nmediump vec4 u_xlat16_5;\nvec3 u_xlat6;\nvec3
            u_xlat7;\nbvec3 u_xlatb7;\nmediump vec4 u_xlat16_8;\nvec3 u_xlat9;\nmediump
            vec3 u_xlat16_9;\nbvec3 u_xlatb10;\nfloat u_xlat11;\nmediump vec3 u_xlat16_12;\nfloat
            u_xlat13;\nmediump vec3 u_xlat16_14;\nmediump float u_xlat16_19;\nfloat
            u_xlat22;\nfloat u_xlat24;\nmediump float u_xlat16_30;\nfloat u_xlat33;\nfloat
            u_xlat35;\nmediump float u_xlat16_35;\nmediump float u_xlat16_36;\nfloat
            u_xlat37;\nbool u_xlatb37;\nvoid main()\n{\n    u_xlat16_0.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n   
            u_xlat16_1 = max(_SpecColor.y, _SpecColor.x);\n    u_xlat16_1 = max(u_xlat16_1,
            _SpecColor.z);\n    u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_12.xyz
            = u_xlat0.xyz * vec3(u_xlat16_1);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat33 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat2.xyz
            = vec3(u_xlat33) * vs_TEXCOORD1.xyz;\n    u_xlat16_35 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.x = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_3.x = u_xlat16_35 * _OcclusionStrength + u_xlat16_3.x;\n   
            u_xlat35 = (-_Glossiness) + 1.0;\n    u_xlat16_14.x = dot(u_xlat2.xyz,
            u_xlat0.xyz);\n    u_xlat16_14.x = u_xlat16_14.x + u_xlat16_14.x;\n   
            u_xlat16_14.xyz = u_xlat0.xyz * (-u_xlat16_14.xxx) + u_xlat2.xyz;\n   
            u_xlatb4 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb4){\n       
            u_xlat4.x = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n        u_xlat4.x
            = inversesqrt(u_xlat4.x);\n        u_xlat4.xyz = u_xlat16_14.xyz * u_xlat4.xxx;\n       
            u_xlat5.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat5.xyz = u_xlat5.xyz / u_xlat4.xyz;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat6.xyz = u_xlat6.xyz / u_xlat4.xyz;\n       
            u_xlatb7.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat4.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat5;\n            hlslcc_movcTemp.x
            = (u_xlatb7.x) ? u_xlat5.x : u_xlat6.x;\n            hlslcc_movcTemp.y
            = (u_xlatb7.y) ? u_xlat5.y : u_xlat6.y;\n            hlslcc_movcTemp.z
            = (u_xlatb7.z) ? u_xlat5.z : u_xlat6.z;\n            u_xlat5 = hlslcc_movcTemp;\n       
            }\n        u_xlat37 = min(u_xlat5.y, u_xlat5.x);\n        u_xlat37 =
            min(u_xlat5.z, u_xlat37);\n        u_xlat5.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat37) + u_xlat5.xyz;\n    } else
            {\n        u_xlat4.xyz = u_xlat16_14.xyz;\n    }\n    u_xlat16_8.x =
            (-u_xlat35) * 0.699999988 + 1.70000005;\n    u_xlat16_8.x = u_xlat35
            * u_xlat16_8.x;\n    u_xlat16_8.x = u_xlat16_8.x * 6.0;\n    u_xlat16_4
            = textureLod(unity_SpecCube0, u_xlat4.xyz, u_xlat16_8.x);\n    u_xlat16_19
            = u_xlat16_4.w + -1.0;\n    u_xlat16_19 = unity_SpecCube0_HDR.w * u_xlat16_19
            + 1.0;\n    u_xlat16_19 = u_xlat16_19 * unity_SpecCube0_HDR.x;\n    u_xlat16_9.xyz
            = u_xlat16_4.xyz * vec3(u_xlat16_19);\n    u_xlatb37 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb37){\n        u_xlatb37 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb37){\n            u_xlat37 = dot(u_xlat16_14.xyz, u_xlat16_14.xyz);\n           
            u_xlat37 = inversesqrt(u_xlat37);\n            u_xlat5.xyz = u_xlat16_14.xyz
            * vec3(u_xlat37);\n            u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat7.xyz = u_xlat7.xyz
            / u_xlat5.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat5.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat6;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat6.x
            : u_xlat7.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat6.y
            : u_xlat7.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat6.z
            : u_xlat7.z;\n                u_xlat6 = hlslcc_movcTemp;\n           
            }\n            u_xlat37 = min(u_xlat6.y, u_xlat6.x);\n            u_xlat37
            = min(u_xlat6.z, u_xlat37);\n            u_xlat6.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat5.xyz = u_xlat5.xyz
            * vec3(u_xlat37) + u_xlat6.xyz;\n        } else {\n            u_xlat5.xyz
            = u_xlat16_14.xyz;\n        }\n        u_xlat16_5 = textureLod(unity_SpecCube1,
            u_xlat5.xyz, u_xlat16_8.x);\n        u_xlat16_14.x = u_xlat16_5.w + -1.0;\n       
            u_xlat16_14.x = unity_SpecCube1_HDR.w * u_xlat16_14.x + 1.0;\n       
            u_xlat16_14.x = u_xlat16_14.x * unity_SpecCube1_HDR.x;\n        u_xlat16_14.xyz
            = u_xlat16_5.xyz * u_xlat16_14.xxx;\n        u_xlat4.xyz = vec3(u_xlat16_19)
            * u_xlat16_4.xyz + (-u_xlat16_14.xyz);\n        u_xlat9.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat4.xyz + u_xlat16_14.xyz;\n        u_xlat16_9.xyz = u_xlat9.xyz;\n   
            }\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;\n    u_xlat4.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat33) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat33 = dot(u_xlat4.xyz, u_xlat4.xyz);\n    u_xlat33 = max(u_xlat33,
            0.00100000005);\n    u_xlat33 = inversesqrt(u_xlat33);\n    u_xlat4.xyz
            = vec3(u_xlat33) * u_xlat4.xyz;\n    u_xlat33 = dot(u_xlat0.xyz, (-u_xlat2.xyz));\n   
            u_xlat2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat4.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat11 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat4.xyz);\n    u_xlat11 = clamp(u_xlat11, 0.0, 1.0);\n    u_xlat16_36
            = u_xlat11 + u_xlat11;\n    u_xlat16_36 = u_xlat11 * u_xlat16_36;\n   
            u_xlat16_36 = u_xlat16_36 * u_xlat35 + -0.5;\n    u_xlat16_8.x = (-u_xlat2.x)
            + 1.0;\n    u_xlat16_19 = u_xlat16_8.x * u_xlat16_8.x;\n    u_xlat16_19
            = u_xlat16_19 * u_xlat16_19;\n    u_xlat16_8.x = u_xlat16_8.x * u_xlat16_19;\n   
            u_xlat16_8.x = u_xlat16_36 * u_xlat16_8.x + 1.0;\n    u_xlat16_19 = -abs(u_xlat33)
            + 1.0;\n    u_xlat16_30 = u_xlat16_19 * u_xlat16_19;\n    u_xlat16_30
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_19 = u_xlat16_19 * u_xlat16_30;\n   
            u_xlat16_36 = u_xlat16_36 * u_xlat16_19 + 1.0;\n    u_xlat16_36 = u_xlat16_36
            * u_xlat16_8.x;\n    u_xlat22 = u_xlat2.x * u_xlat16_36;\n    u_xlat13
            = u_xlat35 * u_xlat35;\n    u_xlat13 = max(u_xlat13, 0.00200000009);\n   
            u_xlat24 = (-u_xlat13) + 1.0;\n    u_xlat4.x = abs(u_xlat33) * u_xlat24
            + u_xlat13;\n    u_xlat24 = u_xlat2.x * u_xlat24 + u_xlat13;\n    u_xlat33
            = abs(u_xlat33) * u_xlat24;\n    u_xlat33 = u_xlat2.x * u_xlat4.x + u_xlat33;\n   
            u_xlat33 = u_xlat33 + 9.99999975e-06;\n    u_xlat33 = 0.5 / u_xlat33;\n   
            u_xlat24 = u_xlat13 * u_xlat13;\n    u_xlat4.x = u_xlat0.x * u_xlat24
            + (-u_xlat0.x);\n    u_xlat0.x = u_xlat4.x * u_xlat0.x + 1.0;\n    u_xlat24
            = u_xlat24 * 0.318309873;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n   
            u_xlat0.x = u_xlat24 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat33;\n   
            u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n   
            u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat2.x * u_xlat0.x;\n   
            u_xlat33 = u_xlat13 * u_xlat35;\n    u_xlat33 = (-u_xlat33) * 0.280000001
            + 1.0;\n    u_xlat16_36 = dot(_SpecColor.xyz, _SpecColor.xyz);\n    u_xlatb2
            = u_xlat16_36!=0.0;\n    u_xlat2.x = u_xlatb2 ? 1.0 : float(0.0);\n   
            u_xlat0.x = u_xlat0.x * u_xlat2.x;\n    u_xlat16_1 = (-u_xlat16_1) +
            1.0;\n    u_xlat16_1 = u_xlat16_1 + _Glossiness;\n    u_xlat16_1 = clamp(u_xlat16_1,
            0.0, 1.0);\n    u_xlat16_8.xzw = vec3(u_xlat22) * _LightColor0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_36 = (-u_xlat11)
            + 1.0;\n    u_xlat16_9.x = u_xlat16_36 * u_xlat16_36;\n    u_xlat16_9.x
            = u_xlat16_9.x * u_xlat16_9.x;\n    u_xlat16_36 = u_xlat16_36 * u_xlat16_9.x;\n   
            u_xlat16_9.xyz = (-_SpecColor.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_9.xyz
            = u_xlat16_9.xyz * vec3(u_xlat16_36) + _SpecColor.xyz;\n    u_xlat0.xyz
            = u_xlat2.xyz * u_xlat16_9.xyz;\n    u_xlat0.xyz = u_xlat16_12.xyz *
            u_xlat16_8.xzw + u_xlat0.xyz;\n    u_xlat16_12.xyz = u_xlat16_3.xyz *
            vec3(u_xlat33);\n    u_xlat16_3.xyz = vec3(u_xlat16_1) + (-_SpecColor.xyz);\n   
            u_xlat16_3.xyz = vec3(u_xlat16_19) * u_xlat16_3.xyz + _SpecColor.xyz;\n   
            u_xlat0.xyz = u_xlat16_12.xyz * u_xlat16_3.xyz + u_xlat0.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute
            mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3
            vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nmediump
            vec4 u_xlat16_2;\nvec4 u_xlat3;\nmediump vec3 u_xlat16_3;\nvec4 u_xlat4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat1.xyz = vec3(u_xlat21) *
            u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2.w
            = 0.0;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = vec3(u_xlat21) * u_xlat2.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx
            * u_xlat2.zxy;\n    u_xlat16_3.xyz = u_xlat2.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n   
            u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_3.xyz
            = vec3(u_xlat21) * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_3.xyz;\n   
            vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD4.xyz
            = u_xlat2.xyz;\n    u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n   
            u_xlat3 = u_xlat2.yyyy * u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat1;\n   
            u_xlat4 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = u_xlat4
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat1 = u_xlat4 * u_xlat4 + u_xlat1;\n   
            u_xlat4 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz
            = u_xlat0.xyz;\n    u_xlat0 = u_xlat4 * u_xlat2.zzzz + u_xlat3;\n   
            u_xlat1 = u_xlat4 * u_xlat4 + u_xlat1;\n    u_xlat1 = max(u_xlat1, vec4(9.99999997e-07,
            9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat1);\n   
            u_xlat1 = u_xlat1 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat1 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat1;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat1 * u_xlat0;\n    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat1.xyz = u_xlat0.xyz
            * u_xlat1.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_5.x = u_xlat2.x *
            u_xlat2.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat2.yzzx * u_xlat2.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat1.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4
            unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform
            \tfloat _GlossMapScale;\nuniform \tmediump float _OcclusionStrength;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _SpecGlossMap;\nuniform
            lowp sampler2D _BumpMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform
            lowp samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec3
            vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvec4 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump float
            u_xlat16_2;\nmediump vec4 u_xlat16_3;\nmediump vec4 u_xlat16_4;\nvec3
            u_xlat5;\nbool u_xlatb5;\nfloat u_xlat6;\nlowp float u_xlat10_6;\nvec3
            u_xlat7;\nlowp vec4 u_xlat10_7;\nvec3 u_xlat8;\nlowp vec4 u_xlat10_8;\nvec3
            u_xlat9;\nvec3 u_xlat10;\nbvec3 u_xlatb10;\nvec3 u_xlat11;\nmediump vec3
            u_xlat16_11;\nbvec3 u_xlatb12;\nfloat u_xlat14;\nmediump vec3 u_xlat16_15;\nmediump
            vec3 u_xlat16_16;\nmediump float u_xlat16_17;\nvec3 u_xlat18;\nvec3 u_xlat19;\nfloat
            u_xlat27;\nmediump float u_xlat16_29;\nmediump float u_xlat16_30;\nfloat
            u_xlat31;\nfloat u_xlat40;\nbool u_xlatb40;\nmediump float u_xlat16_43;\nfloat
            u_xlat44;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap,
            vs_TEXCOORD0.xy);\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_2 = max(u_xlat10_0.y,
            u_xlat10_0.x);\n    u_xlat16_2 = max(u_xlat10_0.z, u_xlat16_2);\n   
            u_xlat16_2 = (-u_xlat16_2) + 1.0;\n    u_xlat16_15.xyz = u_xlat1.xyz
            * vec3(u_xlat16_2);\n    u_xlat10_1.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n   
            u_xlat16_3.xy = u_xlat10_1.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_29 = dot(u_xlat16_3.xy, u_xlat16_3.xy);\n    u_xlat16_29 = min(u_xlat16_29,
            1.0);\n    u_xlat16_29 = (-u_xlat16_29) + 1.0;\n    u_xlat16_29 = sqrt(u_xlat16_29);\n   
            u_xlat16_3.xy = u_xlat16_3.xy * vec2(_BumpScale);\n    u_xlat16_4.xyz
            = u_xlat16_3.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_3.xyw = vs_TEXCOORD2.xyz
            * u_xlat16_3.xxx + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = vs_TEXCOORD4.xyz
            * vec3(u_xlat16_29) + u_xlat16_3.xyw;\n    u_xlat1.x = dot(u_xlat16_3.xyz,
            u_xlat16_3.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz
            = u_xlat1.xxx * u_xlat16_3.xyz;\n    u_xlat5.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat5.x = inversesqrt(u_xlat5.x);\n    u_xlat18.xyz
            = u_xlat5.xxx * vs_TEXCOORD1.xyz;\n    u_xlat10_6 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.x = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_3.x = u_xlat10_6 * _OcclusionStrength + u_xlat16_3.x;\n    u_xlat6
            = (-u_xlat10_0.w) * _GlossMapScale + 1.0;\n    u_xlat16_16.x = dot(u_xlat18.xyz,
            u_xlat1.xyz);\n    u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;\n   
            u_xlat16_16.xyz = u_xlat1.xyz * (-u_xlat16_16.xxx) + u_xlat18.xyz;\n   
            u_xlat1.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_4.y
            = dot(unity_SHAg, u_xlat1);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);\n   
            u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz
            = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat19.xyz = log2(u_xlat16_4.xyz);\n   
            u_xlat19.xyz = u_xlat19.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat19.xyz = exp2(u_xlat19.xyz);\n    u_xlat19.xyz = u_xlat19.xyz *
            vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997,
            -0.0549999997);\n    u_xlat19.xyz = max(u_xlat19.xyz, vec3(0.0, 0.0,
            0.0));\n    u_xlatb40 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb40){\n       
            u_xlat40 = dot(u_xlat16_16.xyz, u_xlat16_16.xyz);\n        u_xlat40 =
            inversesqrt(u_xlat40);\n        u_xlat7.xyz = vec3(u_xlat40) * u_xlat16_16.xyz;\n       
            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat40 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat40 =
            min(u_xlat8.z, u_xlat40);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat40) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_16.xyz;\n    }\n    u_xlat16_4.x =
            (-u_xlat6) * 0.699999988 + 1.70000005;\n    u_xlat16_4.x = u_xlat16_4.x
            * u_xlat6;\n    u_xlat16_4.x = u_xlat16_4.x * 6.0;\n    u_xlat10_7 =
            textureCubeLodEXT(unity_SpecCube0, u_xlat7.xyz, u_xlat16_4.x);\n    u_xlat16_17
            = u_xlat10_7.w + -1.0;\n    u_xlat16_17 = unity_SpecCube0_HDR.w * u_xlat16_17
            + 1.0;\n    u_xlat16_17 = u_xlat16_17 * unity_SpecCube0_HDR.x;\n    u_xlat16_11.xyz
            = u_xlat10_7.xyz * vec3(u_xlat16_17);\n    u_xlatb40 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb40){\n        u_xlatb40 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb40){\n            u_xlat40 = dot(u_xlat16_16.xyz, u_xlat16_16.xyz);\n           
            u_xlat40 = inversesqrt(u_xlat40);\n            u_xlat8.xyz = vec3(u_xlat40)
            * u_xlat16_16.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat9.xyz = u_xlat9.xyz / u_xlat8.xyz;\n            u_xlat10.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat10.xyz
            = u_xlat10.xyz / u_xlat8.xyz;\n            u_xlatb12.xyz = lessThan(vec4(0.0,
            0.0, 0.0, 0.0), u_xlat8.xyzx).xyz;\n            {\n                vec3
            hlslcc_movcTemp = u_xlat9;\n                hlslcc_movcTemp.x = (u_xlatb12.x)
            ? u_xlat9.x : u_xlat10.x;\n                hlslcc_movcTemp.y = (u_xlatb12.y)
            ? u_xlat9.y : u_xlat10.y;\n                hlslcc_movcTemp.z = (u_xlatb12.z)
            ? u_xlat9.z : u_xlat10.z;\n                u_xlat9 = hlslcc_movcTemp;\n           
            }\n            u_xlat40 = min(u_xlat9.y, u_xlat9.x);\n            u_xlat40
            = min(u_xlat9.z, u_xlat40);\n            u_xlat9.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat8.xyz = u_xlat8.xyz
            * vec3(u_xlat40) + u_xlat9.xyz;\n        } else {\n            u_xlat8.xyz
            = u_xlat16_16.xyz;\n        }\n        u_xlat10_8 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat8.xyz, u_xlat16_4.x);\n        u_xlat16_16.x = u_xlat10_8.w + -1.0;\n       
            u_xlat16_16.x = unity_SpecCube1_HDR.w * u_xlat16_16.x + 1.0;\n       
            u_xlat16_16.x = u_xlat16_16.x * unity_SpecCube1_HDR.x;\n        u_xlat16_16.xyz
            = u_xlat10_8.xyz * u_xlat16_16.xxx;\n        u_xlat7.xyz = vec3(u_xlat16_17)
            * u_xlat10_7.xyz + (-u_xlat16_16.xyz);\n        u_xlat11.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_16.xyz;\n        u_xlat16_11.xyz = u_xlat11.xyz;\n   
            }\n    u_xlat16_16.xyz = u_xlat16_3.xxx * u_xlat16_11.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat5.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat40 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat40 = max(u_xlat40,
            0.00100000005);\n    u_xlat40 = inversesqrt(u_xlat40);\n    u_xlat7.xyz
            = vec3(u_xlat40) * u_xlat7.xyz;\n    u_xlat40 = dot(u_xlat1.xyz, (-u_xlat18.xyz));\n   
            u_xlat5.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat5.x
            = clamp(u_xlat5.x, 0.0, 1.0);\n    u_xlat1.x = dot(u_xlat1.xyz, u_xlat7.xyz);\n   
            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_4.x
            = u_xlat14 + u_xlat14;\n    u_xlat16_4.x = u_xlat14 * u_xlat16_4.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat6 + -0.5;\n    u_xlat16_17 = (-u_xlat5.x)
            + 1.0;\n    u_xlat16_30 = u_xlat16_17 * u_xlat16_17;\n    u_xlat16_30
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_17 = u_xlat16_17 * u_xlat16_30;\n   
            u_xlat16_17 = u_xlat16_4.x * u_xlat16_17 + 1.0;\n    u_xlat16_30 = -abs(u_xlat40)
            + 1.0;\n    u_xlat16_43 = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_43
            = u_xlat16_43 * u_xlat16_43;\n    u_xlat16_30 = u_xlat16_30 * u_xlat16_43;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_30 + 1.0;\n    u_xlat16_4.x =
            u_xlat16_4.x * u_xlat16_17;\n    u_xlat27 = u_xlat5.x * u_xlat16_4.x;\n   
            u_xlat18.x = u_xlat6 * u_xlat6;\n    u_xlat18.x = max(u_xlat18.x, 0.00200000009);\n   
            u_xlat31 = (-u_xlat18.x) + 1.0;\n    u_xlat44 = abs(u_xlat40) * u_xlat31
            + u_xlat18.x;\n    u_xlat31 = u_xlat5.x * u_xlat31 + u_xlat18.x;\n   
            u_xlat40 = abs(u_xlat40) * u_xlat31;\n    u_xlat40 = u_xlat5.x * u_xlat44
            + u_xlat40;\n    u_xlat40 = u_xlat40 + 9.99999975e-06;\n    u_xlat40
            = 0.5 / u_xlat40;\n    u_xlat31 = u_xlat18.x * u_xlat18.x;\n    u_xlat44
            = u_xlat1.x * u_xlat31 + (-u_xlat1.x);\n    u_xlat1.x = u_xlat44 * u_xlat1.x
            + 1.0;\n    u_xlat31 = u_xlat31 * 0.318309873;\n    u_xlat1.x = u_xlat1.x
            * u_xlat1.x + 1.00000001e-07;\n    u_xlat1.x = u_xlat31 / u_xlat1.x;\n   
            u_xlat1.x = u_xlat1.x * u_xlat40;\n    u_xlat1.x = u_xlat1.x * 3.14159274;\n   
            u_xlat1.x = max(u_xlat1.x, 9.99999975e-05);\n    u_xlat1.x = sqrt(u_xlat1.x);\n   
            u_xlat1.x = u_xlat5.x * u_xlat1.x;\n    u_xlat40 = u_xlat18.x * u_xlat6;\n   
            u_xlat40 = (-u_xlat40) * 0.280000001 + 1.0;\n    u_xlat16_4.x = dot(u_xlat10_0.xyz,
            u_xlat10_0.xyz);\n    u_xlatb5 = u_xlat16_4.x!=0.0;\n    u_xlat5.x =
            u_xlatb5 ? 1.0 : float(0.0);\n    u_xlat1.x = u_xlat1.x * u_xlat5.x;\n   
            u_xlat16_2 = (-u_xlat16_2) + 1.0;\n    u_xlat16_2 = u_xlat10_0.w * _GlossMapScale
            + u_xlat16_2;\n    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);\n    u_xlat16_4.xyw
            = vec3(u_xlat27) * _LightColor0.xyz;\n    u_xlat16_4.xyw = u_xlat19.xyz
            * u_xlat16_3.xxx + u_xlat16_4.xyw;\n    u_xlat5.xyz = u_xlat1.xxx * _LightColor0.xyz;\n   
            u_xlat16_3.x = (-u_xlat14) + 1.0;\n    u_xlat16_11.x = u_xlat16_3.x *
            u_xlat16_3.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_3.x = u_xlat16_3.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat10_0.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_11.xyz = u_xlat16_11.xyz * u_xlat16_3.xxx
            + u_xlat10_0.xyz;\n    u_xlat1.xyz = u_xlat5.xyz * u_xlat16_11.xyz;\n   
            u_xlat1.xyz = u_xlat16_15.xyz * u_xlat16_4.xyw + u_xlat1.xyz;\n    u_xlat16_15.xyz
            = u_xlat16_16.xyz * vec3(u_xlat40);\n    u_xlat16_3.xyz = (-u_xlat10_0.xyz)
            + vec3(u_xlat16_2);\n    u_xlat16_3.xyz = vec3(u_xlat16_30) * u_xlat16_3.xyz
            + u_xlat10_0.xyz;\n    u_xlat0.xyz = u_xlat16_15.xyz * u_xlat16_3.xyz
            + u_xlat1.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nin mediump vec4
            in_TANGENT0;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4
            vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout
            highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec3
            u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nmediump vec3 u_xlat16_3;\nvec4
            u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat1.xyz = vec3(u_xlat21) *
            u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2.w
            = 0.0;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = vec3(u_xlat21) * u_xlat2.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx
            * u_xlat2.zxy;\n    u_xlat16_3.xyz = u_xlat2.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n   
            u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_3.xyz
            = vec3(u_xlat21) * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_3.xyz;\n   
            vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD4.xyz
            = u_xlat2.xyz;\n    u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n   
            u_xlat3 = u_xlat2.yyyy * u_xlat1;\n    u_xlat1 = u_xlat1 * u_xlat1;\n   
            u_xlat4 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = u_xlat4
            * u_xlat2.xxxx + u_xlat3;\n    u_xlat1 = u_xlat4 * u_xlat4 + u_xlat1;\n   
            u_xlat4 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz
            = u_xlat0.xyz;\n    u_xlat0 = u_xlat4 * u_xlat2.zzzz + u_xlat3;\n   
            u_xlat1 = u_xlat4 * u_xlat4 + u_xlat1;\n    u_xlat1 = max(u_xlat1, vec4(9.99999997e-07,
            9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat1);\n   
            u_xlat1 = u_xlat1 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat1 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat1;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat1 * u_xlat0;\n    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat1.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat1.xyz = u_xlat0.xyz
            * u_xlat1.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_5.x = u_xlat2.x *
            u_xlat2.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat2.yzzx * u_xlat2.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat1.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform
            \tfloat _GlossMapScale;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _SpecGlossMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _BumpMap;\nUNITY_LOCATION(3) uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(4)
            uniform mediump samplerCube unity_SpecCube0;\nUNITY_LOCATION(5) uniform
            mediump samplerCube unity_SpecCube1;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nin
            highp vec3 vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_1;\nmediump
            float u_xlat16_2;\nmediump vec4 u_xlat16_3;\nmediump vec4 u_xlat16_4;\nvec3
            u_xlat5;\nbool u_xlatb5;\nfloat u_xlat6;\nmediump float u_xlat16_6;\nvec3
            u_xlat7;\nmediump vec4 u_xlat16_7;\nvec3 u_xlat8;\nmediump vec4 u_xlat16_8;\nvec3
            u_xlat9;\nvec3 u_xlat10;\nbvec3 u_xlatb10;\nvec3 u_xlat11;\nmediump vec3
            u_xlat16_11;\nbvec3 u_xlatb12;\nfloat u_xlat14;\nmediump vec3 u_xlat16_15;\nmediump
            vec3 u_xlat16_16;\nmediump float u_xlat16_17;\nvec3 u_xlat18;\nvec3 u_xlat19;\nfloat
            u_xlat27;\nmediump float u_xlat16_29;\nmediump float u_xlat16_30;\nfloat
            u_xlat31;\nfloat u_xlat40;\nbool u_xlatb40;\nmediump float u_xlat16_43;\nfloat
            u_xlat44;\nvoid main()\n{\n    u_xlat16_0 = texture(_SpecGlossMap, vs_TEXCOORD0.xy);\n   
            u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz
            = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat16_2 = max(u_xlat16_0.y, u_xlat16_0.x);\n   
            u_xlat16_2 = max(u_xlat16_0.z, u_xlat16_2);\n    u_xlat16_2 = (-u_xlat16_2)
            + 1.0;\n    u_xlat16_15.xyz = u_xlat1.xyz * vec3(u_xlat16_2);\n    u_xlat16_1.xy
            = texture(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_3.xy = u_xlat16_1.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_29 = dot(u_xlat16_3.xy,
            u_xlat16_3.xy);\n    u_xlat16_29 = min(u_xlat16_29, 1.0);\n    u_xlat16_29
            = (-u_xlat16_29) + 1.0;\n    u_xlat16_29 = sqrt(u_xlat16_29);\n    u_xlat16_3.xy
            = u_xlat16_3.xy * vec2(_BumpScale);\n    u_xlat16_4.xyz = u_xlat16_3.yyy
            * vs_TEXCOORD3.xyz;\n    u_xlat16_3.xyw = vs_TEXCOORD2.xyz * u_xlat16_3.xxx
            + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_29)
            + u_xlat16_3.xyw;\n    u_xlat1.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n   
            u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx *
            u_xlat16_3.xyz;\n    u_xlat5.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat5.x = inversesqrt(u_xlat5.x);\n    u_xlat18.xyz = u_xlat5.xxx *
            vs_TEXCOORD1.xyz;\n    u_xlat16_6 = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_3.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_3.x = u_xlat16_6
            * _OcclusionStrength + u_xlat16_3.x;\n    u_xlat6 = (-u_xlat16_0.w) *
            _GlossMapScale + 1.0;\n    u_xlat16_16.x = dot(u_xlat18.xyz, u_xlat1.xyz);\n   
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;\n    u_xlat16_16.xyz =
            u_xlat1.xyz * (-u_xlat16_16.xxx) + u_xlat18.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_4.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_4.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_4.xyz
            = u_xlat16_4.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat19.xyz = log2(u_xlat16_4.xyz);\n   
            u_xlat19.xyz = u_xlat19.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat19.xyz = exp2(u_xlat19.xyz);\n    u_xlat19.xyz = u_xlat19.xyz *
            vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997,
            -0.0549999997);\n    u_xlat19.xyz = max(u_xlat19.xyz, vec3(0.0, 0.0,
            0.0));\n    u_xlatb40 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb40){\n       
            u_xlat40 = dot(u_xlat16_16.xyz, u_xlat16_16.xyz);\n        u_xlat40 =
            inversesqrt(u_xlat40);\n        u_xlat7.xyz = vec3(u_xlat40) * u_xlat16_16.xyz;\n       
            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n       
            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x
            = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y
            = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z
            = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n       
            }\n        u_xlat40 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat40 =
            min(u_xlat8.z, u_xlat40);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat40) + u_xlat8.xyz;\n    } else
            {\n        u_xlat7.xyz = u_xlat16_16.xyz;\n    }\n    u_xlat16_4.x =
            (-u_xlat6) * 0.699999988 + 1.70000005;\n    u_xlat16_4.x = u_xlat16_4.x
            * u_xlat6;\n    u_xlat16_4.x = u_xlat16_4.x * 6.0;\n    u_xlat16_7 =
            textureLod(unity_SpecCube0, u_xlat7.xyz, u_xlat16_4.x);\n    u_xlat16_17
            = u_xlat16_7.w + -1.0;\n    u_xlat16_17 = unity_SpecCube0_HDR.w * u_xlat16_17
            + 1.0;\n    u_xlat16_17 = u_xlat16_17 * unity_SpecCube0_HDR.x;\n    u_xlat16_11.xyz
            = u_xlat16_7.xyz * vec3(u_xlat16_17);\n    u_xlatb40 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb40){\n        u_xlatb40 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb40){\n            u_xlat40 = dot(u_xlat16_16.xyz, u_xlat16_16.xyz);\n           
            u_xlat40 = inversesqrt(u_xlat40);\n            u_xlat8.xyz = vec3(u_xlat40)
            * u_xlat16_16.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat9.xyz = u_xlat9.xyz / u_xlat8.xyz;\n            u_xlat10.xyz =
            (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat10.xyz
            = u_xlat10.xyz / u_xlat8.xyz;\n            u_xlatb12.xyz = lessThan(vec4(0.0,
            0.0, 0.0, 0.0), u_xlat8.xyzx).xyz;\n            {\n                vec3
            hlslcc_movcTemp = u_xlat9;\n                hlslcc_movcTemp.x = (u_xlatb12.x)
            ? u_xlat9.x : u_xlat10.x;\n                hlslcc_movcTemp.y = (u_xlatb12.y)
            ? u_xlat9.y : u_xlat10.y;\n                hlslcc_movcTemp.z = (u_xlatb12.z)
            ? u_xlat9.z : u_xlat10.z;\n                u_xlat9 = hlslcc_movcTemp;\n           
            }\n            u_xlat40 = min(u_xlat9.y, u_xlat9.x);\n            u_xlat40
            = min(u_xlat9.z, u_xlat40);\n            u_xlat9.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat8.xyz = u_xlat8.xyz
            * vec3(u_xlat40) + u_xlat9.xyz;\n        } else {\n            u_xlat8.xyz
            = u_xlat16_16.xyz;\n        }\n        u_xlat16_8 = textureLod(unity_SpecCube1,
            u_xlat8.xyz, u_xlat16_4.x);\n        u_xlat16_16.x = u_xlat16_8.w + -1.0;\n       
            u_xlat16_16.x = unity_SpecCube1_HDR.w * u_xlat16_16.x + 1.0;\n       
            u_xlat16_16.x = u_xlat16_16.x * unity_SpecCube1_HDR.x;\n        u_xlat16_16.xyz
            = u_xlat16_8.xyz * u_xlat16_16.xxx;\n        u_xlat7.xyz = vec3(u_xlat16_17)
            * u_xlat16_7.xyz + (-u_xlat16_16.xyz);\n        u_xlat11.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat7.xyz + u_xlat16_16.xyz;\n        u_xlat16_11.xyz = u_xlat11.xyz;\n   
            }\n    u_xlat16_16.xyz = u_xlat16_3.xxx * u_xlat16_11.xyz;\n    u_xlat7.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat5.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat40 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat40 = max(u_xlat40,
            0.00100000005);\n    u_xlat40 = inversesqrt(u_xlat40);\n    u_xlat7.xyz
            = vec3(u_xlat40) * u_xlat7.xyz;\n    u_xlat40 = dot(u_xlat1.xyz, (-u_xlat18.xyz));\n   
            u_xlat5.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat5.x
            = clamp(u_xlat5.x, 0.0, 1.0);\n    u_xlat1.x = dot(u_xlat1.xyz, u_xlat7.xyz);\n   
            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_4.x
            = u_xlat14 + u_xlat14;\n    u_xlat16_4.x = u_xlat14 * u_xlat16_4.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat6 + -0.5;\n    u_xlat16_17 = (-u_xlat5.x)
            + 1.0;\n    u_xlat16_30 = u_xlat16_17 * u_xlat16_17;\n    u_xlat16_30
            = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_17 = u_xlat16_17 * u_xlat16_30;\n   
            u_xlat16_17 = u_xlat16_4.x * u_xlat16_17 + 1.0;\n    u_xlat16_30 = -abs(u_xlat40)
            + 1.0;\n    u_xlat16_43 = u_xlat16_30 * u_xlat16_30;\n    u_xlat16_43
            = u_xlat16_43 * u_xlat16_43;\n    u_xlat16_30 = u_xlat16_30 * u_xlat16_43;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_30 + 1.0;\n    u_xlat16_4.x =
            u_xlat16_4.x * u_xlat16_17;\n    u_xlat27 = u_xlat5.x * u_xlat16_4.x;\n   
            u_xlat18.x = u_xlat6 * u_xlat6;\n    u_xlat18.x = max(u_xlat18.x, 0.00200000009);\n   
            u_xlat31 = (-u_xlat18.x) + 1.0;\n    u_xlat44 = abs(u_xlat40) * u_xlat31
            + u_xlat18.x;\n    u_xlat31 = u_xlat5.x * u_xlat31 + u_xlat18.x;\n   
            u_xlat40 = abs(u_xlat40) * u_xlat31;\n    u_xlat40 = u_xlat5.x * u_xlat44
            + u_xlat40;\n    u_xlat40 = u_xlat40 + 9.99999975e-06;\n    u_xlat40
            = 0.5 / u_xlat40;\n    u_xlat31 = u_xlat18.x * u_xlat18.x;\n    u_xlat44
            = u_xlat1.x * u_xlat31 + (-u_xlat1.x);\n    u_xlat1.x = u_xlat44 * u_xlat1.x
            + 1.0;\n    u_xlat31 = u_xlat31 * 0.318309873;\n    u_xlat1.x = u_xlat1.x
            * u_xlat1.x + 1.00000001e-07;\n    u_xlat1.x = u_xlat31 / u_xlat1.x;\n   
            u_xlat1.x = u_xlat1.x * u_xlat40;\n    u_xlat1.x = u_xlat1.x * 3.14159274;\n   
            u_xlat1.x = max(u_xlat1.x, 9.99999975e-05);\n    u_xlat1.x = sqrt(u_xlat1.x);\n   
            u_xlat1.x = u_xlat5.x * u_xlat1.x;\n    u_xlat40 = u_xlat18.x * u_xlat6;\n   
            u_xlat40 = (-u_xlat40) * 0.280000001 + 1.0;\n    u_xlat16_4.x = dot(u_xlat16_0.xyz,
            u_xlat16_0.xyz);\n    u_xlatb5 = u_xlat16_4.x!=0.0;\n    u_xlat5.x =
            u_xlatb5 ? 1.0 : float(0.0);\n    u_xlat1.x = u_xlat1.x * u_xlat5.x;\n   
            u_xlat16_2 = (-u_xlat16_2) + 1.0;\n    u_xlat16_2 = u_xlat16_0.w * _GlossMapScale
            + u_xlat16_2;\n    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);\n    u_xlat16_4.xyw
            = vec3(u_xlat27) * _LightColor0.xyz;\n    u_xlat16_4.xyw = u_xlat19.xyz
            * u_xlat16_3.xxx + u_xlat16_4.xyw;\n    u_xlat5.xyz = u_xlat1.xxx * _LightColor0.xyz;\n   
            u_xlat16_3.x = (-u_xlat14) + 1.0;\n    u_xlat16_11.x = u_xlat16_3.x *
            u_xlat16_3.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n   
            u_xlat16_3.x = u_xlat16_3.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_0.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_11.xyz = u_xlat16_11.xyz * u_xlat16_3.xxx
            + u_xlat16_0.xyz;\n    u_xlat1.xyz = u_xlat5.xyz * u_xlat16_11.xyz;\n   
            u_xlat1.xyz = u_xlat16_15.xyz * u_xlat16_4.xyw + u_xlat1.xyz;\n    u_xlat16_15.xyz
            = u_xlat16_16.xyz * vec3(u_xlat40);\n    u_xlat16_3.xyz = (-u_xlat16_0.xyz)
            + vec3(u_xlat16_2);\n    u_xlat16_3.xyz = vec3(u_xlat16_30) * u_xlat16_3.xyz
            + u_xlat16_0.xyz;\n    u_xlat0.xyz = u_xlat16_15.xyz * u_xlat16_3.xyz
            + u_xlat1.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump
            vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4
            unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform lowp
            sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform lowp
            samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp
            vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nmediump float u_xlat16_1;\nvec3 u_xlat2;\nbool u_xlatb2;\nfloat
            u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec4
            u_xlat16_5;\nvec3 u_xlat6;\nlowp vec4 u_xlat10_6;\nvec3 u_xlat7;\nlowp
            vec4 u_xlat10_7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb9;\nvec3
            u_xlat10;\nmediump vec3 u_xlat16_10;\nbvec3 u_xlatb11;\nfloat u_xlat12;\nmediump
            vec3 u_xlat16_13;\nvec3 u_xlat14;\nvec3 u_xlat15;\nmediump vec3 u_xlat16_16;\nmediump
            float u_xlat16_17;\nfloat u_xlat24;\nfloat u_xlat26;\nmediump float u_xlat16_29;\nfloat
            u_xlat36;\nbool u_xlatb36;\nfloat u_xlat38;\nmediump float u_xlat16_41;\nvoid
            main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_1 = max(_SpecColor.y,
            _SpecColor.x);\n    u_xlat16_1 = max(u_xlat16_1, _SpecColor.z);\n   
            u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_13.xyz = u_xlat0.xyz
            * vec3(u_xlat16_1);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            vs_TEXCOORD4.xyz;\n    u_xlat2.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat2.x = inversesqrt(u_xlat2.x);\n    u_xlat14.xyz = u_xlat2.xxx *
            vs_TEXCOORD1.xyz;\n    u_xlat10_3 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_4.x = (-_OcclusionStrength) + 1.0;\n    u_xlat16_4.x = u_xlat10_3
            * _OcclusionStrength + u_xlat16_4.x;\n    u_xlat3 = (-_Glossiness) +
            1.0;\n    u_xlat16_16.x = dot(u_xlat14.xyz, u_xlat0.xyz);\n    u_xlat16_16.x
            = u_xlat16_16.x + u_xlat16_16.x;\n    u_xlat16_16.xyz = u_xlat0.xyz *
            (-u_xlat16_16.xxx) + u_xlat14.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_5.x
            = dot(unity_SHAr, u_xlat0);\n    u_xlat16_5.y = dot(unity_SHAg, u_xlat0);\n   
            u_xlat16_5.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_5.xyz = u_xlat16_5.xyz
            + vs_TEXCOORD5.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0,
            0.0, 0.0));\n    u_xlat15.xyz = log2(u_xlat16_5.xyz);\n    u_xlat15.xyz
            = u_xlat15.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat15.xyz
            = exp2(u_xlat15.xyz);\n    u_xlat15.xyz = u_xlat15.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat15.xyz = max(u_xlat15.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb36
            = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb36){\n        u_xlat36
            = dot(u_xlat16_16.xyz, u_xlat16_16.xyz);\n        u_xlat36 = inversesqrt(u_xlat36);\n       
            u_xlat6.xyz = vec3(u_xlat36) * u_xlat16_16.xyz;\n        u_xlat7.xyz
            = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat7.xyz
            = u_xlat7.xyz / u_xlat6.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat8.xyz = u_xlat8.xyz / u_xlat6.xyz;\n       
            u_xlatb9.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat6.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat7;\n            hlslcc_movcTemp.x
            = (u_xlatb9.x) ? u_xlat7.x : u_xlat8.x;\n            hlslcc_movcTemp.y
            = (u_xlatb9.y) ? u_xlat7.y : u_xlat8.y;\n            hlslcc_movcTemp.z
            = (u_xlatb9.z) ? u_xlat7.z : u_xlat8.z;\n            u_xlat7 = hlslcc_movcTemp;\n       
            }\n        u_xlat36 = min(u_xlat7.y, u_xlat7.x);\n        u_xlat36 =
            min(u_xlat7.z, u_xlat36);\n        u_xlat7.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat6.xyz = u_xlat6.xyz * vec3(u_xlat36) + u_xlat7.xyz;\n    } else
            {\n        u_xlat6.xyz = u_xlat16_16.xyz;\n    }\n    u_xlat16_5.x =
            (-u_xlat3) * 0.699999988 + 1.70000005;\n    u_xlat16_5.x = u_xlat3 *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * 6.0;\n    u_xlat10_6
            = textureCubeLodEXT(unity_SpecCube0, u_xlat6.xyz, u_xlat16_5.x);\n   
            u_xlat16_17 = u_xlat10_6.w + -1.0;\n    u_xlat16_17 = unity_SpecCube0_HDR.w
            * u_xlat16_17 + 1.0;\n    u_xlat16_17 = u_xlat16_17 * unity_SpecCube0_HDR.x;\n   
            u_xlat16_10.xyz = u_xlat10_6.xyz * vec3(u_xlat16_17);\n    u_xlatb36
            = unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb36){\n       
            u_xlatb36 = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb36){\n           
            u_xlat36 = dot(u_xlat16_16.xyz, u_xlat16_16.xyz);\n            u_xlat36
            = inversesqrt(u_xlat36);\n            u_xlat7.xyz = vec3(u_xlat36) *
            u_xlat16_16.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb11.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb11.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb11.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb11.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat36 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat36
            = min(u_xlat8.z, u_xlat36);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat36) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_16.xyz;\n        }\n        u_xlat10_7 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_5.x);\n        u_xlat16_16.x = u_xlat10_7.w + -1.0;\n       
            u_xlat16_16.x = unity_SpecCube1_HDR.w * u_xlat16_16.x + 1.0;\n       
            u_xlat16_16.x = u_xlat16_16.x * unity_SpecCube1_HDR.x;\n        u_xlat16_16.xyz
            = u_xlat10_7.xyz * u_xlat16_16.xxx;\n        u_xlat6.xyz = vec3(u_xlat16_17)
            * u_xlat10_6.xyz + (-u_xlat16_16.xyz);\n        u_xlat10.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat6.xyz + u_xlat16_16.xyz;\n        u_xlat16_10.xyz = u_xlat10.xyz;\n   
            }\n    u_xlat16_16.xyz = u_xlat16_4.xxx * u_xlat16_10.xyz;\n    u_xlat6.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat2.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat36 = dot(u_xlat6.xyz, u_xlat6.xyz);\n    u_xlat36 = max(u_xlat36,
            0.00100000005);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat6.xyz
            = vec3(u_xlat36) * u_xlat6.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, (-u_xlat14.xyz));\n   
            u_xlat2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat6.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat12 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat6.xyz);\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat16_5.x
            = u_xlat12 + u_xlat12;\n    u_xlat16_5.x = u_xlat12 * u_xlat16_5.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat3 + -0.5;\n    u_xlat16_17 = (-u_xlat2.x)
            + 1.0;\n    u_xlat16_29 = u_xlat16_17 * u_xlat16_17;\n    u_xlat16_29
            = u_xlat16_29 * u_xlat16_29;\n    u_xlat16_17 = u_xlat16_17 * u_xlat16_29;\n   
            u_xlat16_17 = u_xlat16_5.x * u_xlat16_17 + 1.0;\n    u_xlat16_29 = -abs(u_xlat36)
            + 1.0;\n    u_xlat16_41 = u_xlat16_29 * u_xlat16_29;\n    u_xlat16_41
            = u_xlat16_41 * u_xlat16_41;\n    u_xlat16_29 = u_xlat16_29 * u_xlat16_41;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_29 + 1.0;\n    u_xlat16_5.x =
            u_xlat16_5.x * u_xlat16_17;\n    u_xlat24 = u_xlat2.x * u_xlat16_5.x;\n   
            u_xlat14.x = u_xlat3 * u_xlat3;\n    u_xlat14.x = max(u_xlat14.x, 0.00200000009);\n   
            u_xlat26 = (-u_xlat14.x) + 1.0;\n    u_xlat38 = abs(u_xlat36) * u_xlat26
            + u_xlat14.x;\n    u_xlat26 = u_xlat2.x * u_xlat26 + u_xlat14.x;\n   
            u_xlat36 = abs(u_xlat36) * u_xlat26;\n    u_xlat36 = u_xlat2.x * u_xlat38
            + u_xlat36;\n    u_xlat36 = u_xlat36 + 9.99999975e-06;\n    u_xlat36
            = 0.5 / u_xlat36;\n    u_xlat26 = u_xlat14.x * u_xlat14.x;\n    u_xlat38
            = u_xlat0.x * u_xlat26 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat38 * u_xlat0.x
            + 1.0;\n    u_xlat26 = u_xlat26 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat26 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat36;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat2.x * u_xlat0.x;\n    u_xlat36 = u_xlat14.x * u_xlat3;\n   
            u_xlat36 = (-u_xlat36) * 0.280000001 + 1.0;\n    u_xlat16_5.x = dot(_SpecColor.xyz,
            _SpecColor.xyz);\n    u_xlatb2 = u_xlat16_5.x!=0.0;\n    u_xlat2.x =
            u_xlatb2 ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat2.x;\n   
            u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_1 = u_xlat16_1 + _Glossiness;\n   
            u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n    u_xlat16_5.xyw = vec3(u_xlat24)
            * _LightColor0.xyz;\n    u_xlat16_5.xyw = u_xlat15.xyz * u_xlat16_4.xxx
            + u_xlat16_5.xyw;\n    u_xlat2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.x = (-u_xlat12) + 1.0;\n    u_xlat16_10.x = u_xlat16_4.x *
            u_xlat16_4.x;\n    u_xlat16_10.x = u_xlat16_10.x * u_xlat16_10.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_10.x;\n    u_xlat16_10.xyz = (-_SpecColor.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_10.xyz * u_xlat16_4.xxx
            + _SpecColor.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * u_xlat16_10.xyz;\n   
            u_xlat0.xyz = u_xlat16_13.xyz * u_xlat16_5.xyw + u_xlat0.xyz;\n    u_xlat16_13.xyz
            = u_xlat16_16.xyz * vec3(u_xlat36);\n    u_xlat16_4.xyz = vec3(u_xlat16_1)
            + (-_SpecColor.xyz);\n    u_xlat16_4.xyz = vec3(u_xlat16_29) * u_xlat16_4.xyz
            + _SpecColor.xyz;\n    u_xlat0.xyz = u_xlat16_13.xyz * u_xlat16_4.xyz
            + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec4
            u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0,
            0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat3 = u_xlat1.yyyy
            * u_xlat2;\n    u_xlat2 = u_xlat2 * u_xlat2;\n    u_xlat4 = (-u_xlat0.xxxx)
            + unity_4LightPosX0;\n    u_xlat3 = u_xlat4 * u_xlat1.xxxx + u_xlat3;\n   
            u_xlat2 = u_xlat4 * u_xlat4 + u_xlat2;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat3;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat2;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017)
            + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat2.xyz = u_xlat0.xyz
            * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;\n    vs_TEXCOORD5.w = 0.0;\n   
            vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform
            \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform
            \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform
            \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat
            _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(3) uniform mediump samplerCube unity_SpecCube1;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nin highp vec3 vs_TEXCOORD8;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump
            float u_xlat16_1;\nvec3 u_xlat2;\nbool u_xlatb2;\nfloat u_xlat3;\nmediump
            float u_xlat16_3;\nmediump vec3 u_xlat16_4;\nmediump vec4 u_xlat16_5;\nvec3
            u_xlat6;\nmediump vec4 u_xlat16_6;\nvec3 u_xlat7;\nmediump vec4 u_xlat16_7;\nvec3
            u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb9;\nvec3 u_xlat10;\nmediump vec3
            u_xlat16_10;\nbvec3 u_xlatb11;\nfloat u_xlat12;\nmediump vec3 u_xlat16_13;\nvec3
            u_xlat14;\nvec3 u_xlat15;\nmediump vec3 u_xlat16_16;\nmediump float u_xlat16_17;\nfloat
            u_xlat24;\nfloat u_xlat26;\nmediump float u_xlat16_29;\nfloat u_xlat36;\nbool
            u_xlatb36;\nfloat u_xlat38;\nmediump float u_xlat16_41;\nvoid main()\n{\n   
            u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_1 = max(_SpecColor.y, _SpecColor.x);\n   
            u_xlat16_1 = max(u_xlat16_1, _SpecColor.z);\n    u_xlat16_1 = (-u_xlat16_1)
            + 1.0;\n    u_xlat16_13.xyz = u_xlat0.xyz * vec3(u_xlat16_1);\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat2.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat2.x = inversesqrt(u_xlat2.x);\n    u_xlat14.xyz
            = u_xlat2.xxx * vs_TEXCOORD1.xyz;\n    u_xlat16_3 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_4.x = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_4.x = u_xlat16_3 * _OcclusionStrength + u_xlat16_4.x;\n    u_xlat3
            = (-_Glossiness) + 1.0;\n    u_xlat16_16.x = dot(u_xlat14.xyz, u_xlat0.xyz);\n   
            u_xlat16_16.x = u_xlat16_16.x + u_xlat16_16.x;\n    u_xlat16_16.xyz =
            u_xlat0.xyz * (-u_xlat16_16.xxx) + u_xlat14.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_5.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_5.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_5.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat15.xyz = log2(u_xlat16_5.xyz);\n   
            u_xlat15.xyz = u_xlat15.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat15.xyz = exp2(u_xlat15.xyz);\n    u_xlat15.xyz = u_xlat15.xyz *
            vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997,
            -0.0549999997);\n    u_xlat15.xyz = max(u_xlat15.xyz, vec3(0.0, 0.0,
            0.0));\n    u_xlatb36 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb36){\n       
            u_xlat36 = dot(u_xlat16_16.xyz, u_xlat16_16.xyz);\n        u_xlat36 =
            inversesqrt(u_xlat36);\n        u_xlat6.xyz = vec3(u_xlat36) * u_xlat16_16.xyz;\n       
            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat8.xyz = u_xlat8.xyz / u_xlat6.xyz;\n       
            u_xlatb9.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat6.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat7;\n            hlslcc_movcTemp.x
            = (u_xlatb9.x) ? u_xlat7.x : u_xlat8.x;\n            hlslcc_movcTemp.y
            = (u_xlatb9.y) ? u_xlat7.y : u_xlat8.y;\n            hlslcc_movcTemp.z
            = (u_xlatb9.z) ? u_xlat7.z : u_xlat8.z;\n            u_xlat7 = hlslcc_movcTemp;\n       
            }\n        u_xlat36 = min(u_xlat7.y, u_xlat7.x);\n        u_xlat36 =
            min(u_xlat7.z, u_xlat36);\n        u_xlat7.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat6.xyz = u_xlat6.xyz * vec3(u_xlat36) + u_xlat7.xyz;\n    } else
            {\n        u_xlat6.xyz = u_xlat16_16.xyz;\n    }\n    u_xlat16_5.x =
            (-u_xlat3) * 0.699999988 + 1.70000005;\n    u_xlat16_5.x = u_xlat3 *
            u_xlat16_5.x;\n    u_xlat16_5.x = u_xlat16_5.x * 6.0;\n    u_xlat16_6
            = textureLod(unity_SpecCube0, u_xlat6.xyz, u_xlat16_5.x);\n    u_xlat16_17
            = u_xlat16_6.w + -1.0;\n    u_xlat16_17 = unity_SpecCube0_HDR.w * u_xlat16_17
            + 1.0;\n    u_xlat16_17 = u_xlat16_17 * unity_SpecCube0_HDR.x;\n    u_xlat16_10.xyz
            = u_xlat16_6.xyz * vec3(u_xlat16_17);\n    u_xlatb36 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb36){\n        u_xlatb36 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb36){\n            u_xlat36 = dot(u_xlat16_16.xyz, u_xlat16_16.xyz);\n           
            u_xlat36 = inversesqrt(u_xlat36);\n            u_xlat7.xyz = vec3(u_xlat36)
            * u_xlat16_16.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb11.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb11.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb11.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb11.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat36 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat36
            = min(u_xlat8.z, u_xlat36);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat36) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_16.xyz;\n        }\n        u_xlat16_7 = textureLod(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_5.x);\n        u_xlat16_16.x = u_xlat16_7.w + -1.0;\n       
            u_xlat16_16.x = unity_SpecCube1_HDR.w * u_xlat16_16.x + 1.0;\n       
            u_xlat16_16.x = u_xlat16_16.x * unity_SpecCube1_HDR.x;\n        u_xlat16_16.xyz
            = u_xlat16_7.xyz * u_xlat16_16.xxx;\n        u_xlat6.xyz = vec3(u_xlat16_17)
            * u_xlat16_6.xyz + (-u_xlat16_16.xyz);\n        u_xlat10.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat6.xyz + u_xlat16_16.xyz;\n        u_xlat16_10.xyz = u_xlat10.xyz;\n   
            }\n    u_xlat16_16.xyz = u_xlat16_4.xxx * u_xlat16_10.xyz;\n    u_xlat6.xyz
            = (-vs_TEXCOORD1.xyz) * u_xlat2.xxx + _WorldSpaceLightPos0.xyz;\n   
            u_xlat36 = dot(u_xlat6.xyz, u_xlat6.xyz);\n    u_xlat36 = max(u_xlat36,
            0.00100000005);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat6.xyz
            = vec3(u_xlat36) * u_xlat6.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, (-u_xlat14.xyz));\n   
            u_xlat2.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat2.x
            = clamp(u_xlat2.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat6.xyz);\n   
            u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat12 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat6.xyz);\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat16_5.x
            = u_xlat12 + u_xlat12;\n    u_xlat16_5.x = u_xlat12 * u_xlat16_5.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat3 + -0.5;\n    u_xlat16_17 = (-u_xlat2.x)
            + 1.0;\n    u_xlat16_29 = u_xlat16_17 * u_xlat16_17;\n    u_xlat16_29
            = u_xlat16_29 * u_xlat16_29;\n    u_xlat16_17 = u_xlat16_17 * u_xlat16_29;\n   
            u_xlat16_17 = u_xlat16_5.x * u_xlat16_17 + 1.0;\n    u_xlat16_29 = -abs(u_xlat36)
            + 1.0;\n    u_xlat16_41 = u_xlat16_29 * u_xlat16_29;\n    u_xlat16_41
            = u_xlat16_41 * u_xlat16_41;\n    u_xlat16_29 = u_xlat16_29 * u_xlat16_41;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat16_29 + 1.0;\n    u_xlat16_5.x =
            u_xlat16_5.x * u_xlat16_17;\n    u_xlat24 = u_xlat2.x * u_xlat16_5.x;\n   
            u_xlat14.x = u_xlat3 * u_xlat3;\n    u_xlat14.x = max(u_xlat14.x, 0.00200000009);\n   
            u_xlat26 = (-u_xlat14.x) + 1.0;\n    u_xlat38 = abs(u_xlat36) * u_xlat26
            + u_xlat14.x;\n    u_xlat26 = u_xlat2.x * u_xlat26 + u_xlat14.x;\n   
            u_xlat36 = abs(u_xlat36) * u_xlat26;\n    u_xlat36 = u_xlat2.x * u_xlat38
            + u_xlat36;\n    u_xlat36 = u_xlat36 + 9.99999975e-06;\n    u_xlat36
            = 0.5 / u_xlat36;\n    u_xlat26 = u_xlat14.x * u_xlat14.x;\n    u_xlat38
            = u_xlat0.x * u_xlat26 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat38 * u_xlat0.x
            + 1.0;\n    u_xlat26 = u_xlat26 * 0.318309873;\n    u_xlat0.x = u_xlat0.x
            * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat26 / u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat36;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n   
            u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat2.x * u_xlat0.x;\n    u_xlat36 = u_xlat14.x * u_xlat3;\n   
            u_xlat36 = (-u_xlat36) * 0.280000001 + 1.0;\n    u_xlat16_5.x = dot(_SpecColor.xyz,
            _SpecColor.xyz);\n    u_xlatb2 = u_xlat16_5.x!=0.0;\n    u_xlat2.x =
            u_xlatb2 ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat2.x;\n   
            u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_1 = u_xlat16_1 + _Glossiness;\n   
            u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n    u_xlat16_5.xyw = vec3(u_xlat24)
            * _LightColor0.xyz;\n    u_xlat16_5.xyw = u_xlat15.xyz * u_xlat16_4.xxx
            + u_xlat16_5.xyw;\n    u_xlat2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.x = (-u_xlat12) + 1.0;\n    u_xlat16_10.x = u_xlat16_4.x *
            u_xlat16_4.x;\n    u_xlat16_10.x = u_xlat16_10.x * u_xlat16_10.x;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_10.x;\n    u_xlat16_10.xyz = (-_SpecColor.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_10.xyz * u_xlat16_4.xxx
            + _SpecColor.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * u_xlat16_10.xyz;\n   
            u_xlat0.xyz = u_xlat16_13.xyz * u_xlat16_5.xyw + u_xlat0.xyz;\n    u_xlat16_13.xyz
            = u_xlat16_16.xyz * vec3(u_xlat36);\n    u_xlat16_4.xyz = vec3(u_xlat16_1)
            + (-_SpecColor.xyz);\n    u_xlat16_4.xyz = vec3(u_xlat16_29) * u_xlat16_4.xyz
            + _SpecColor.xyz;\n    u_xlat0.xyz = u_xlat16_13.xyz * u_xlat16_4.xyz
            + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying
            mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying
            highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            vec3 u_xlat16_2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat1.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n   
            u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx
            * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n   
            vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz
            = u_xlat16_2.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n   
            vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4
            unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _BumpScale;\nuniform \tfloat _GlossMapScale;\nuniform
            \tmediump float _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform
            lowp sampler2D _OcclusionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform
            lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3
            vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec4 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump float
            u_xlat16_2;\nmediump vec4 u_xlat16_3;\nmediump vec4 u_xlat16_4;\nvec3
            u_xlat5;\nbool u_xlatb5;\nvec3 u_xlat6;\nlowp vec4 u_xlat10_6;\nbool
            u_xlatb6;\nvec3 u_xlat7;\nlowp vec4 u_xlat10_7;\nvec3 u_xlat8;\nvec3
            u_xlat9;\nbvec3 u_xlatb9;\nvec3 u_xlat10;\nmediump vec3 u_xlat16_10;\nbvec3
            u_xlatb11;\nfloat u_xlat13;\nmediump vec3 u_xlat16_14;\nmediump vec3
            u_xlat16_15;\nmediump float u_xlat16_16;\nfloat u_xlat17;\nfloat u_xlat25;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_28;\nfloat u_xlat29;\nfloat
            u_xlat37;\nmediump float u_xlat16_39;\nfloat u_xlat41;\nlowp float u_xlat10_41;\nfloat
            u_xlat42;\nbool u_xlatb42;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap,
            vs_TEXCOORD0.xy);\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_2 = max(u_xlat10_0.y,
            u_xlat10_0.x);\n    u_xlat16_2 = max(u_xlat10_0.z, u_xlat16_2);\n   
            u_xlat16_2 = (-u_xlat16_2) + 1.0;\n    u_xlat16_14.xyz = u_xlat1.xyz
            * vec3(u_xlat16_2);\n    u_xlat10_1.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n   
            u_xlat16_3.xy = u_xlat10_1.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_27 = dot(u_xlat16_3.xy, u_xlat16_3.xy);\n    u_xlat16_27 = min(u_xlat16_27,
            1.0);\n    u_xlat16_27 = (-u_xlat16_27) + 1.0;\n    u_xlat16_27 = sqrt(u_xlat16_27);\n   
            u_xlat16_3.xy = u_xlat16_3.xy * vec2(_BumpScale);\n    u_xlat16_4.xyz
            = u_xlat16_3.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_3.xyw = vs_TEXCOORD2.xyz
            * u_xlat16_3.xxx + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = vs_TEXCOORD4.xyz
            * vec3(u_xlat16_27) + u_xlat16_3.xyw;\n    u_xlat1.x = dot(u_xlat16_3.xyz,
            u_xlat16_3.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz
            = u_xlat1.xxx * u_xlat16_3.xyz;\n    u_xlat37 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat37 = inversesqrt(u_xlat37);\n    u_xlat5.xyz
            = vec3(u_xlat37) * vs_TEXCOORD1.xyz;\n    u_xlat10_41 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.x = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_3.x = u_xlat10_41 * _OcclusionStrength + u_xlat16_3.x;\n   
            u_xlat41 = (-u_xlat10_0.w) * _GlossMapScale + 1.0;\n    u_xlat16_15.x
            = dot(u_xlat5.xyz, u_xlat1.xyz);\n    u_xlat16_15.x = u_xlat16_15.x +
            u_xlat16_15.x;\n    u_xlat16_15.xyz = u_xlat1.xyz * (-u_xlat16_15.xxx)
            + u_xlat5.xyz;\n    u_xlatb6 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb6){\n        u_xlat6.x = dot(u_xlat16_15.xyz, u_xlat16_15.xyz);\n       
            u_xlat6.x = inversesqrt(u_xlat6.x);\n        u_xlat6.xyz = u_xlat16_15.xyz
            * u_xlat6.xxx;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat8.xyz = u_xlat8.xyz / u_xlat6.xyz;\n       
            u_xlatb9.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat6.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat7;\n            hlslcc_movcTemp.x
            = (u_xlatb9.x) ? u_xlat7.x : u_xlat8.x;\n            hlslcc_movcTemp.y
            = (u_xlatb9.y) ? u_xlat7.y : u_xlat8.y;\n            hlslcc_movcTemp.z
            = (u_xlatb9.z) ? u_xlat7.z : u_xlat8.z;\n            u_xlat7 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat7.y, u_xlat7.x);\n        u_xlat42 =
            min(u_xlat7.z, u_xlat42);\n        u_xlat7.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat6.xyz = u_xlat6.xyz * vec3(u_xlat42) + u_xlat7.xyz;\n    } else
            {\n        u_xlat6.xyz = u_xlat16_15.xyz;\n    }\n    u_xlat16_4.x =
            (-u_xlat41) * 0.699999988 + 1.70000005;\n    u_xlat16_4.x = u_xlat16_4.x
            * u_xlat41;\n    u_xlat16_4.x = u_xlat16_4.x * 6.0;\n    u_xlat10_6 =
            textureCubeLodEXT(unity_SpecCube0, u_xlat6.xyz, u_xlat16_4.x);\n    u_xlat16_16
            = u_xlat10_6.w + -1.0;\n    u_xlat16_16 = unity_SpecCube0_HDR.w * u_xlat16_16
            + 1.0;\n    u_xlat16_16 = u_xlat16_16 * unity_SpecCube0_HDR.x;\n    u_xlat16_10.xyz
            = u_xlat10_6.xyz * vec3(u_xlat16_16);\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_15.xyz, u_xlat16_15.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = u_xlat16_15.xyz
            * vec3(u_xlat42);\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb11.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb11.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb11.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb11.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_15.xyz;\n        }\n        u_xlat10_7 = textureCubeLodEXT(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_4.x);\n        u_xlat16_15.x = u_xlat10_7.w + -1.0;\n       
            u_xlat16_15.x = unity_SpecCube1_HDR.w * u_xlat16_15.x + 1.0;\n       
            u_xlat16_15.x = u_xlat16_15.x * unity_SpecCube1_HDR.x;\n        u_xlat16_15.xyz
            = u_xlat10_7.xyz * u_xlat16_15.xxx;\n        u_xlat6.xyz = vec3(u_xlat16_16)
            * u_xlat10_6.xyz + (-u_xlat16_15.xyz);\n        u_xlat10.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat6.xyz + u_xlat16_15.xyz;\n        u_xlat16_10.xyz = u_xlat10.xyz;\n   
            }\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_10.xyz;\n    u_xlat6.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat37) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat37 = dot(u_xlat6.xyz, u_xlat6.xyz);\n    u_xlat37 = max(u_xlat37,
            0.00100000005);\n    u_xlat37 = inversesqrt(u_xlat37);\n    u_xlat6.xyz
            = vec3(u_xlat37) * u_xlat6.xyz;\n    u_xlat37 = dot(u_xlat1.xyz, (-u_xlat5.xyz));\n   
            u_xlat5.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat5.x
            = clamp(u_xlat5.x, 0.0, 1.0);\n    u_xlat1.x = dot(u_xlat1.xyz, u_xlat6.xyz);\n   
            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat6.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_39
            = u_xlat13 + u_xlat13;\n    u_xlat16_39 = u_xlat13 * u_xlat16_39;\n   
            u_xlat16_39 = u_xlat16_39 * u_xlat41 + -0.5;\n    u_xlat16_4.x = (-u_xlat5.x)
            + 1.0;\n    u_xlat16_16 = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_16
            = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_16;\n   
            u_xlat16_4.x = u_xlat16_39 * u_xlat16_4.x + 1.0;\n    u_xlat16_16 = -abs(u_xlat37)
            + 1.0;\n    u_xlat16_28 = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_28
            = u_xlat16_28 * u_xlat16_28;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_28;\n   
            u_xlat16_39 = u_xlat16_39 * u_xlat16_16 + 1.0;\n    u_xlat16_39 = u_xlat16_39
            * u_xlat16_4.x;\n    u_xlat25 = u_xlat5.x * u_xlat16_39;\n    u_xlat17
            = u_xlat41 * u_xlat41;\n    u_xlat17 = max(u_xlat17, 0.00200000009);\n   
            u_xlat29 = (-u_xlat17) + 1.0;\n    u_xlat6.x = abs(u_xlat37) * u_xlat29
            + u_xlat17;\n    u_xlat29 = u_xlat5.x * u_xlat29 + u_xlat17;\n    u_xlat37
            = abs(u_xlat37) * u_xlat29;\n    u_xlat37 = u_xlat5.x * u_xlat6.x + u_xlat37;\n   
            u_xlat37 = u_xlat37 + 9.99999975e-06;\n    u_xlat37 = 0.5 / u_xlat37;\n   
            u_xlat29 = u_xlat17 * u_xlat17;\n    u_xlat6.x = u_xlat1.x * u_xlat29
            + (-u_xlat1.x);\n    u_xlat1.x = u_xlat6.x * u_xlat1.x + 1.0;\n    u_xlat29
            = u_xlat29 * 0.318309873;\n    u_xlat1.x = u_xlat1.x * u_xlat1.x + 1.00000001e-07;\n   
            u_xlat1.x = u_xlat29 / u_xlat1.x;\n    u_xlat1.x = u_xlat1.x * u_xlat37;\n   
            u_xlat1.x = u_xlat1.x * 3.14159274;\n    u_xlat1.x = max(u_xlat1.x, 9.99999975e-05);\n   
            u_xlat1.x = sqrt(u_xlat1.x);\n    u_xlat1.x = u_xlat5.x * u_xlat1.x;\n   
            u_xlat37 = u_xlat17 * u_xlat41;\n    u_xlat37 = (-u_xlat37) * 0.280000001
            + 1.0;\n    u_xlat16_39 = dot(u_xlat10_0.xyz, u_xlat10_0.xyz);\n    u_xlatb5
            = u_xlat16_39!=0.0;\n    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);\n   
            u_xlat1.x = u_xlat1.x * u_xlat5.x;\n    u_xlat16_2 = (-u_xlat16_2) +
            1.0;\n    u_xlat16_2 = u_xlat10_0.w * _GlossMapScale + u_xlat16_2;\n   
            u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);\n    u_xlat16_4.xzw = vec3(u_xlat25)
            * _LightColor0.xyz;\n    u_xlat5.xyz = u_xlat1.xxx * _LightColor0.xyz;\n   
            u_xlat16_39 = (-u_xlat13) + 1.0;\n    u_xlat16_10.x = u_xlat16_39 * u_xlat16_39;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat16_10.x;\n    u_xlat16_39 = u_xlat16_39
            * u_xlat16_10.x;\n    u_xlat16_10.xyz = (-u_xlat10_0.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(u_xlat16_39)
            + u_xlat10_0.xyz;\n    u_xlat1.xyz = u_xlat5.xyz * u_xlat16_10.xyz;\n   
            u_xlat1.xyz = u_xlat16_14.xyz * u_xlat16_4.xzw + u_xlat1.xyz;\n    u_xlat16_14.xyz
            = u_xlat16_3.xyz * vec3(u_xlat37);\n    u_xlat16_3.xyz = (-u_xlat10_0.xyz)
            + vec3(u_xlat16_2);\n    u_xlat16_3.xyz = vec3(u_xlat16_16) * u_xlat16_3.xyz
            + u_xlat10_0.xyz;\n    u_xlat0.xyz = u_xlat16_14.xyz * u_xlat16_3.xyz
            + u_xlat1.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nin mediump vec4 in_TANGENT0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_2;\nfloat
            u_xlat9;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat1.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n   
            u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx
            * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n   
            vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz
            = u_xlat16_2.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n   
            vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform
            \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform
            \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform
            \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform
            \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform
            \tmediump float _BumpScale;\nuniform \tfloat _GlossMapScale;\nuniform
            \tmediump float _OcclusionStrength;\nUNITY_LOCATION(0) uniform mediump
            sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _SpecGlossMap;\nUNITY_LOCATION(2)
            uniform mediump sampler2D _BumpMap;\nUNITY_LOCATION(3) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(4) uniform mediump samplerCube
            unity_SpecCube0;\nUNITY_LOCATION(5) uniform mediump samplerCube unity_SpecCube1;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nin
            highp vec3 vs_TEXCOORD8;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec3 u_xlat1;\nmediump vec3 u_xlat16_1;\nmediump
            float u_xlat16_2;\nmediump vec4 u_xlat16_3;\nmediump vec4 u_xlat16_4;\nvec3
            u_xlat5;\nbool u_xlatb5;\nvec3 u_xlat6;\nmediump vec4 u_xlat16_6;\nbool
            u_xlatb6;\nvec3 u_xlat7;\nmediump vec4 u_xlat16_7;\nvec3 u_xlat8;\nvec3
            u_xlat9;\nbvec3 u_xlatb9;\nvec3 u_xlat10;\nmediump vec3 u_xlat16_10;\nbvec3
            u_xlatb11;\nfloat u_xlat13;\nmediump vec3 u_xlat16_14;\nmediump vec3
            u_xlat16_15;\nmediump float u_xlat16_16;\nfloat u_xlat17;\nfloat u_xlat25;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_28;\nfloat u_xlat29;\nfloat
            u_xlat37;\nmediump float u_xlat16_39;\nfloat u_xlat41;\nmediump float
            u_xlat16_41;\nfloat u_xlat42;\nbool u_xlatb42;\nvoid main()\n{\n    u_xlat16_0
            = texture(_SpecGlossMap, vs_TEXCOORD0.xy);\n    u_xlat16_1.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat16_1.xyz * _Color.xyz;\n   
            u_xlat16_2 = max(u_xlat16_0.y, u_xlat16_0.x);\n    u_xlat16_2 = max(u_xlat16_0.z,
            u_xlat16_2);\n    u_xlat16_2 = (-u_xlat16_2) + 1.0;\n    u_xlat16_14.xyz
            = u_xlat1.xyz * vec3(u_xlat16_2);\n    u_xlat16_1.xy = texture(_BumpMap,
            vs_TEXCOORD0.xy).yw;\n    u_xlat16_3.xy = u_xlat16_1.yx * vec2(2.0, 2.0)
            + vec2(-1.0, -1.0);\n    u_xlat16_27 = dot(u_xlat16_3.xy, u_xlat16_3.xy);\n   
            u_xlat16_27 = min(u_xlat16_27, 1.0);\n    u_xlat16_27 = (-u_xlat16_27)
            + 1.0;\n    u_xlat16_27 = sqrt(u_xlat16_27);\n    u_xlat16_3.xy = u_xlat16_3.xy
            * vec2(_BumpScale);\n    u_xlat16_4.xyz = u_xlat16_3.yyy * vs_TEXCOORD3.xyz;\n   
            u_xlat16_3.xyw = vs_TEXCOORD2.xyz * u_xlat16_3.xxx + u_xlat16_4.xyz;\n   
            u_xlat16_3.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_27) + u_xlat16_3.xyw;\n   
            u_xlat1.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n   
            u_xlat1.xyz = u_xlat1.xxx * u_xlat16_3.xyz;\n    u_xlat37 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat37 = inversesqrt(u_xlat37);\n    u_xlat5.xyz
            = vec3(u_xlat37) * vs_TEXCOORD1.xyz;\n    u_xlat16_41 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.x = (-_OcclusionStrength) + 1.0;\n   
            u_xlat16_3.x = u_xlat16_41 * _OcclusionStrength + u_xlat16_3.x;\n   
            u_xlat41 = (-u_xlat16_0.w) * _GlossMapScale + 1.0;\n    u_xlat16_15.x
            = dot(u_xlat5.xyz, u_xlat1.xyz);\n    u_xlat16_15.x = u_xlat16_15.x +
            u_xlat16_15.x;\n    u_xlat16_15.xyz = u_xlat1.xyz * (-u_xlat16_15.xxx)
            + u_xlat5.xyz;\n    u_xlatb6 = 0.0<unity_SpecCube0_ProbePosition.w;\n   
            if(u_xlatb6){\n        u_xlat6.x = dot(u_xlat16_15.xyz, u_xlat16_15.xyz);\n       
            u_xlat6.x = inversesqrt(u_xlat6.x);\n        u_xlat6.xyz = u_xlat16_15.xyz
            * u_xlat6.xxx;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n       
            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube0_BoxMin.xyz;\n        u_xlat8.xyz = u_xlat8.xyz / u_xlat6.xyz;\n       
            u_xlatb9.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat6.xyzx).xyz;\n       
            {\n            vec3 hlslcc_movcTemp = u_xlat7;\n            hlslcc_movcTemp.x
            = (u_xlatb9.x) ? u_xlat7.x : u_xlat8.x;\n            hlslcc_movcTemp.y
            = (u_xlatb9.y) ? u_xlat7.y : u_xlat8.y;\n            hlslcc_movcTemp.z
            = (u_xlatb9.z) ? u_xlat7.z : u_xlat8.z;\n            u_xlat7 = hlslcc_movcTemp;\n       
            }\n        u_xlat42 = min(u_xlat7.y, u_xlat7.x);\n        u_xlat42 =
            min(u_xlat7.z, u_xlat42);\n        u_xlat7.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n       
            u_xlat6.xyz = u_xlat6.xyz * vec3(u_xlat42) + u_xlat7.xyz;\n    } else
            {\n        u_xlat6.xyz = u_xlat16_15.xyz;\n    }\n    u_xlat16_4.x =
            (-u_xlat41) * 0.699999988 + 1.70000005;\n    u_xlat16_4.x = u_xlat16_4.x
            * u_xlat41;\n    u_xlat16_4.x = u_xlat16_4.x * 6.0;\n    u_xlat16_6 =
            textureLod(unity_SpecCube0, u_xlat6.xyz, u_xlat16_4.x);\n    u_xlat16_16
            = u_xlat16_6.w + -1.0;\n    u_xlat16_16 = unity_SpecCube0_HDR.w * u_xlat16_16
            + 1.0;\n    u_xlat16_16 = u_xlat16_16 * unity_SpecCube0_HDR.x;\n    u_xlat16_10.xyz
            = u_xlat16_6.xyz * vec3(u_xlat16_16);\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n   
            if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n       
            if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_15.xyz, u_xlat16_15.xyz);\n           
            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = u_xlat16_15.xyz
            * vec3(u_xlat42);\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n           
            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz)
            + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz
            / u_xlat7.xyz;\n            u_xlatb11.xyz = lessThan(vec4(0.0, 0.0, 0.0,
            0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp
            = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb11.x) ? u_xlat8.x
            : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb11.y) ? u_xlat8.y
            : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb11.z) ? u_xlat8.z
            : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n           
            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42
            = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz
            + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz
            * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz
            = u_xlat16_15.xyz;\n        }\n        u_xlat16_7 = textureLod(unity_SpecCube1,
            u_xlat7.xyz, u_xlat16_4.x);\n        u_xlat16_15.x = u_xlat16_7.w + -1.0;\n       
            u_xlat16_15.x = unity_SpecCube1_HDR.w * u_xlat16_15.x + 1.0;\n       
            u_xlat16_15.x = u_xlat16_15.x * unity_SpecCube1_HDR.x;\n        u_xlat16_15.xyz
            = u_xlat16_7.xyz * u_xlat16_15.xxx;\n        u_xlat6.xyz = vec3(u_xlat16_16)
            * u_xlat16_6.xyz + (-u_xlat16_15.xyz);\n        u_xlat10.xyz = unity_SpecCube0_BoxMin.www
            * u_xlat6.xyz + u_xlat16_15.xyz;\n        u_xlat16_10.xyz = u_xlat10.xyz;\n   
            }\n    u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_10.xyz;\n    u_xlat6.xyz
            = (-vs_TEXCOORD1.xyz) * vec3(u_xlat37) + _WorldSpaceLightPos0.xyz;\n   
            u_xlat37 = dot(u_xlat6.xyz, u_xlat6.xyz);\n    u_xlat37 = max(u_xlat37,
            0.00100000005);\n    u_xlat37 = inversesqrt(u_xlat37);\n    u_xlat6.xyz
            = vec3(u_xlat37) * u_xlat6.xyz;\n    u_xlat37 = dot(u_xlat1.xyz, (-u_xlat5.xyz));\n   
            u_xlat5.x = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat5.x
            = clamp(u_xlat5.x, 0.0, 1.0);\n    u_xlat1.x = dot(u_xlat1.xyz, u_xlat6.xyz);\n   
            u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz,
            u_xlat6.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_39
            = u_xlat13 + u_xlat13;\n    u_xlat16_39 = u_xlat13 * u_xlat16_39;\n   
            u_xlat16_39 = u_xlat16_39 * u_xlat41 + -0.5;\n    u_xlat16_4.x = (-u_xlat5.x)
            + 1.0;\n    u_xlat16_16 = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_16
            = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_16;\n   
            u_xlat16_4.x = u_xlat16_39 * u_xlat16_4.x + 1.0;\n    u_xlat16_16 = -abs(u_xlat37)
            + 1.0;\n    u_xlat16_28 = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_28
            = u_xlat16_28 * u_xlat16_28;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_28;\n   
            u_xlat16_39 = u_xlat16_39 * u_xlat16_16 + 1.0;\n    u_xlat16_39 = u_xlat16_39
            * u_xlat16_4.x;\n    u_xlat25 = u_xlat5.x * u_xlat16_39;\n    u_xlat17
            = u_xlat41 * u_xlat41;\n    u_xlat17 = max(u_xlat17, 0.00200000009);\n   
            u_xlat29 = (-u_xlat17) + 1.0;\n    u_xlat6.x = abs(u_xlat37) * u_xlat29
            + u_xlat17;\n    u_xlat29 = u_xlat5.x * u_xlat29 + u_xlat17;\n    u_xlat37
            = abs(u_xlat37) * u_xlat29;\n    u_xlat37 = u_xlat5.x * u_xlat6.x + u_xlat37;\n   
            u_xlat37 = u_xlat37 + 9.99999975e-06;\n    u_xlat37 = 0.5 / u_xlat37;\n   
            u_xlat29 = u_xlat17 * u_xlat17;\n    u_xlat6.x = u_xlat1.x * u_xlat29
            + (-u_xlat1.x);\n    u_xlat1.x = u_xlat6.x * u_xlat1.x + 1.0;\n    u_xlat29
            = u_xlat29 * 0.318309873;\n    u_xlat1.x = u_xlat1.x * u_xlat1.x + 1.00000001e-07;\n   
            u_xlat1.x = u_xlat29 / u_xlat1.x;\n    u_xlat1.x = u_xlat1.x * u_xlat37;\n   
            u_xlat1.x = u_xlat1.x * 3.14159274;\n    u_xlat1.x = max(u_xlat1.x, 9.99999975e-05);\n   
            u_xlat1.x = sqrt(u_xlat1.x);\n    u_xlat1.x = u_xlat5.x * u_xlat1.x;\n   
            u_xlat37 = u_xlat17 * u_xlat41;\n    u_xlat37 = (-u_xlat37) * 0.280000001
            + 1.0;\n    u_xlat16_39 = dot(u_xlat16_0.xyz, u_xlat16_0.xyz);\n    u_xlatb5
            = u_xlat16_39!=0.0;\n    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);\n   
            u_xlat1.x = u_xlat1.x * u_xlat5.x;\n    u_xlat16_2 = (-u_xlat16_2) +
            1.0;\n    u_xlat16_2 = u_xlat16_0.w * _GlossMapScale + u_xlat16_2;\n   
            u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);\n    u_xlat16_4.xzw = vec3(u_xlat25)
            * _LightColor0.xyz;\n    u_xlat5.xyz = u_xlat1.xxx * _LightColor0.xyz;\n   
            u_xlat16_39 = (-u_xlat13) + 1.0;\n    u_xlat16_10.x = u_xlat16_39 * u_xlat16_39;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat16_10.x;\n    u_xlat16_39 = u_xlat16_39
            * u_xlat16_10.x;\n    u_xlat16_10.xyz = (-u_xlat16_0.xyz) + vec3(1.0,
            1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(u_xlat16_39)
            + u_xlat16_0.xyz;\n    u_xlat1.xyz = u_xlat5.xyz * u_xlat16_10.xyz;\n   
            u_xlat1.xyz = u_xlat16_14.xyz * u_xlat16_4.xzw + u_xlat1.xyz;\n    u_xlat16_14.xyz
            = u_xlat16_3.xyz * vec3(u_xlat37);\n    u_xlat16_3.xyz = (-u_xlat16_0.xyz)
            + vec3(u_xlat16_2);\n    u_xlat16_3.xyz = vec3(u_xlat16_16) * u_xlat16_3.xyz
            + u_xlat16_0.xyz;\n    u_xlat0.xyz = u_xlat16_14.xyz * u_xlat16_3.xyz
            + u_xlat1.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRLIGHTMAP_COMBINED
        - DYNAMICLIGHTMAP_ON
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - INSTANCING_ON
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _DETAIL_MULX2
        - _EMISSION
        - _GLOSSYREFLECTIONS_OFF
        - _NORMALMAP
        - _PARALLAXMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECGLOSSMAP
        - _SPECULARHIGHLIGHTS_OFF
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _NORMALMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _SPECGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _PARALLAXMAP
          hasDiscard: 1
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 83
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _NORMALMAP
          - _SPECGLOSSMAP
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz
            = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat2.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat2.wwwx;\n    vs_TEXCOORD3 = u_xlat2.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat2.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat _Glossiness;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform
            highp sampler2D _LightTexture0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3
            vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec3
            u_xlat1;\nvec3 u_xlat2;\nlowp vec3 u_xlat10_2;\nvec3 u_xlat3;\nmediump
            vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump float u_xlat16_6;\nfloat
            u_xlat7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nmediump
            float u_xlat16_13;\nfloat u_xlat14;\nbool u_xlatb14;\nfloat u_xlat15;\nfloat
            u_xlat21;\nfloat u_xlat22;\nmediump float u_xlat16_26;\nvoid main()\n{\n   
            u_xlat0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n   
            u_xlat1.x = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z
            = vs_TEXCOORD4.w;\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz = u_xlat1.xyz * vec3(u_xlat21)
            + (-u_xlat0.xyz);\n    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n   
            u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat21 = max(u_xlat21,
            0.00100000005);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz
            = vec3(u_xlat21) * u_xlat2.xyz;\n    u_xlat21 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat3.xyz
            = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(u_xlat3.xyz,
            u_xlat2.xyz);\n    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat22
            = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat22 = clamp(u_xlat22, 0.0,
            1.0);\n    u_xlat1.x = dot(u_xlat3.xyz, u_xlat1.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat3.xyz, (-u_xlat0.xyz));\n   
            u_xlat7 = (-_Glossiness) + 1.0;\n    u_xlat14 = u_xlat7 * u_xlat7;\n   
            u_xlat14 = max(u_xlat14, 0.00200000009);\n    u_xlat8 = u_xlat14 * u_xlat14;\n   
            u_xlat15 = u_xlat21 * u_xlat8 + (-u_xlat21);\n    u_xlat21 = u_xlat15
            * u_xlat21 + 1.0;\n    u_xlat21 = u_xlat21 * u_xlat21 + 1.00000001e-07;\n   
            u_xlat8 = u_xlat8 * 0.318309873;\n    u_xlat21 = u_xlat8 / u_xlat21;\n   
            u_xlat8 = (-u_xlat14) + 1.0;\n    u_xlat15 = abs(u_xlat0.x) * u_xlat8
            + u_xlat14;\n    u_xlat14 = u_xlat1.x * u_xlat8 + u_xlat14;\n    u_xlat14
            = u_xlat14 * abs(u_xlat0.x);\n    u_xlat16_4.x = -abs(u_xlat0.x) + 1.0;\n   
            u_xlat0.x = u_xlat1.x * u_xlat15 + u_xlat14;\n    u_xlat0.x = u_xlat0.x
            + 9.99999975e-06;\n    u_xlat0.x = 0.5 / u_xlat0.x;\n    u_xlat0.x =
            u_xlat21 * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x
            = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat16_11.x = dot(_SpecColor.xyz,
            _SpecColor.xyz);\n    u_xlatb14 = u_xlat16_11.x!=0.0;\n    u_xlat14 =
            u_xlatb14 ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat14 * u_xlat0.x;\n   
            u_xlat2.xyz = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat2.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat14 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat14 = texture2D(_LightTexture0,
            vec2(u_xlat14)).x;\n    u_xlat16_11.xyz = vec3(u_xlat14) * _LightColor0.xyz;\n   
            u_xlat0.xzw = u_xlat0.xxx * u_xlat16_11.xyz;\n    u_xlat16_5.x = (-u_xlat22)
            + 1.0;\n    u_xlat16_12.x = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_12.x
            = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_12.x;\n   
            u_xlat16_12.xyz = (-_SpecColor.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz
            = u_xlat16_12.xyz * u_xlat16_5.xxx + _SpecColor.xyz;\n    u_xlat0.xzw
            = u_xlat0.xzw * u_xlat16_5.xyz;\n    u_xlat16_5.x = max(_SpecColor.y,
            _SpecColor.x);\n    u_xlat16_5.x = max(u_xlat16_5.x, _SpecColor.z);\n   
            u_xlat16_5.x = (-u_xlat16_5.x) + 1.0;\n    u_xlat10_2.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n   
            u_xlat16_5.xyz = u_xlat16_5.xxx * u_xlat2.xyz;\n    u_xlat16_26 = u_xlat16_4.x
            * u_xlat16_4.x;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_26;\n    u_xlat16_26 = u_xlat22 + u_xlat22;\n   
            u_xlat16_26 = u_xlat22 * u_xlat16_26;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat7 + -0.5;\n    u_xlat16_4.x = u_xlat16_26 * u_xlat16_4.x + 1.0;\n   
            u_xlat16_6 = (-u_xlat1.x) + 1.0;\n    u_xlat16_13 = u_xlat16_6 * u_xlat16_6;\n   
            u_xlat16_13 = u_xlat16_13 * u_xlat16_13;\n    u_xlat16_6 = u_xlat16_6
            * u_xlat16_13;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_6 + 1.0;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_26;\n    u_xlat7 = u_xlat1.x *
            u_xlat16_4.x;\n    u_xlat16_4.xyz = vec3(u_xlat7) * u_xlat16_11.xyz;\n   
            u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_4.xyz + u_xlat0.xzw;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nin highp vec4 in_POSITION0;\nin
            mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2
            in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4
            vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec3 vs_TEXCOORD6;\nout
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz
            = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat2.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat2.wwwx;\n    vs_TEXCOORD3 = u_xlat2.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat2.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat
            _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform highp
            sampler2D _LightTexture0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4
            vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin
            highp vec4 vs_TEXCOORD4;\nin highp vec3 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nvec3 u_xlat1;\nvec3
            u_xlat2;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump
            vec3 u_xlat16_5;\nmediump float u_xlat16_6;\nfloat u_xlat7;\nfloat u_xlat8;\nmediump
            vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nmediump float u_xlat16_13;\nfloat
            u_xlat14;\nbool u_xlatb14;\nfloat u_xlat15;\nfloat u_xlat21;\nfloat u_xlat22;\nmediump
            float u_xlat16_26;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD1.xyz;\n    u_xlat1.x = vs_TEXCOORD2.w;\n   
            u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat21
            = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = u_xlat1.xyz * vec3(u_xlat21) + (-u_xlat0.xyz);\n    u_xlat1.xyz
            = vec3(u_xlat21) * u_xlat1.xyz;\n    u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat21 = max(u_xlat21, 0.00100000005);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = vec3(u_xlat21) * u_xlat2.xyz;\n    u_xlat21 = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat3.xyz
            = vec3(u_xlat21) * vs_TEXCOORD4.xyz;\n    u_xlat21 = dot(u_xlat3.xyz,
            u_xlat2.xyz);\n    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);\n    u_xlat22
            = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat22 = clamp(u_xlat22, 0.0,
            1.0);\n    u_xlat1.x = dot(u_xlat3.xyz, u_xlat1.xyz);\n    u_xlat1.x
            = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat3.xyz, (-u_xlat0.xyz));\n   
            u_xlat7 = (-_Glossiness) + 1.0;\n    u_xlat14 = u_xlat7 * u_xlat7;\n   
            u_xlat14 = max(u_xlat14, 0.00200000009);\n    u_xlat8 = u_xlat14 * u_xlat14;\n   
            u_xlat15 = u_xlat21 * u_xlat8 + (-u_xlat21);\n    u_xlat21 = u_xlat15
            * u_xlat21 + 1.0;\n    u_xlat21 = u_xlat21 * u_xlat21 + 1.00000001e-07;\n   
            u_xlat8 = u_xlat8 * 0.318309873;\n    u_xlat21 = u_xlat8 / u_xlat21;\n   
            u_xlat8 = (-u_xlat14) + 1.0;\n    u_xlat15 = abs(u_xlat0.x) * u_xlat8
            + u_xlat14;\n    u_xlat14 = u_xlat1.x * u_xlat8 + u_xlat14;\n    u_xlat14
            = u_xlat14 * abs(u_xlat0.x);\n    u_xlat16_4.x = -abs(u_xlat0.x) + 1.0;\n   
            u_xlat0.x = u_xlat1.x * u_xlat15 + u_xlat14;\n    u_xlat0.x = u_xlat0.x
            + 9.99999975e-06;\n    u_xlat0.x = 0.5 / u_xlat0.x;\n    u_xlat0.x =
            u_xlat21 * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x
            = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n   
            u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat16_11.x = dot(_SpecColor.xyz,
            _SpecColor.xyz);\n    u_xlatb14 = u_xlat16_11.x!=0.0;\n    u_xlat14 =
            u_xlatb14 ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat14 * u_xlat0.x;\n   
            u_xlat2.xyz = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = u_xlat2.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat14 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat14 = texture(_LightTexture0,
            vec2(u_xlat14)).x;\n    u_xlat16_11.xyz = vec3(u_xlat14) * _LightColor0.xyz;\n   
            u_xlat0.xzw = u_xlat0.xxx * u_xlat16_11.xyz;\n    u_xlat16_5.x = (-u_xlat22)
            + 1.0;\n    u_xlat16_12.x = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_12.x
            = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_12.x;\n   
            u_xlat16_12.xyz = (-_SpecColor.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_5.xyz
            = u_xlat16_12.xyz * u_xlat16_5.xxx + _SpecColor.xyz;\n    u_xlat0.xzw
            = u_xlat0.xzw * u_xlat16_5.xyz;\n    u_xlat16_5.x = max(_SpecColor.y,
            _SpecColor.x);\n    u_xlat16_5.x = max(u_xlat16_5.x, _SpecColor.z);\n   
            u_xlat16_5.x = (-u_xlat16_5.x) + 1.0;\n    u_xlat16_2.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n   
            u_xlat16_5.xyz = u_xlat16_5.xxx * u_xlat2.xyz;\n    u_xlat16_26 = u_xlat16_4.x
            * u_xlat16_4.x;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_4.x
            = u_xlat16_4.x * u_xlat16_26;\n    u_xlat16_26 = u_xlat22 + u_xlat22;\n   
            u_xlat16_26 = u_xlat22 * u_xlat16_26;\n    u_xlat16_26 = u_xlat16_26
            * u_xlat7 + -0.5;\n    u_xlat16_4.x = u_xlat16_26 * u_xlat16_4.x + 1.0;\n   
            u_xlat16_6 = (-u_xlat1.x) + 1.0;\n    u_xlat16_13 = u_xlat16_6 * u_xlat16_6;\n   
            u_xlat16_13 = u_xlat16_13 * u_xlat16_13;\n    u_xlat16_6 = u_xlat16_6
            * u_xlat16_13;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_6 + 1.0;\n   
            u_xlat16_4.x = u_xlat16_4.x * u_xlat16_26;\n    u_xlat7 = u_xlat1.x *
            u_xlat16_4.x;\n    u_xlat16_4.xyz = vec3(u_xlat7) * u_xlat16_11.xyz;\n   
            u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_4.xyz + u_xlat0.xzw;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute
            mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3
            vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat1.xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz
            + u_xlat1.xyz;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12
            = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    u_xlat2.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www
            + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD2.w = u_xlat2.x;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx
            * u_xlat0.zxy;\n    u_xlat16_3.xyz = u_xlat0.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n   
            vs_TEXCOORD4.xyz = u_xlat0.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz
            = u_xlat16_3.xyz;\n    vs_TEXCOORD3.w = u_xlat2.y;\n    vs_TEXCOORD4.w
            = u_xlat2.z;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _BumpScale;\nuniform \tfloat _GlossMapScale;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _SpecGlossMap;\nuniform
            lowp sampler2D _BumpMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp
            vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4
            vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3
            u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nlowp vec4
            u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nbool u_xlatb3;\nvec3
            u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat7;\nmediump
            vec3 u_xlat16_9;\nfloat u_xlat10;\nfloat u_xlat14;\nmediump float u_xlat16_15;\nmediump
            float u_xlat16_16;\nfloat u_xlat17;\nfloat u_xlat21;\nmediump float u_xlat16_23;\nfloat
            u_xlat24;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n   
            u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_15 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy =
            u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_15 = min(u_xlat16_15,
            1.0);\n    u_xlat16_15 = (-u_xlat16_15) + 1.0;\n    u_xlat16_15 = sqrt(u_xlat16_15);\n   
            u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw
            = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz
            = vs_TEXCOORD4.xyz * vec3(u_xlat16_15) + u_xlat16_1.xyw;\n    u_xlat0.x
            = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xyz;\n    u_xlat21 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat3.x
            = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n   
            u_xlat4.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat21) + u_xlat3.xyz;\n   
            u_xlat5.xyz = vec3(u_xlat21) * vs_TEXCOORD1.xyz;\n    u_xlat21 = dot(u_xlat0.xyz,
            (-u_xlat5.xyz));\n    u_xlat24 = dot(u_xlat4.xyz, u_xlat4.xyz);\n   
            u_xlat24 = max(u_xlat24, 0.00100000005);\n    u_xlat24 = inversesqrt(u_xlat24);\n   
            u_xlat4.xyz = vec3(u_xlat24) * u_xlat4.xyz;\n    u_xlat24 = dot(u_xlat0.xyz,
            u_xlat4.xyz);\n    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat0.x
            = dot(u_xlat0.xyz, u_xlat3.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat7 = dot(u_xlat3.xyz, u_xlat4.xyz);\n    u_xlat7 = clamp(u_xlat7,
            0.0, 1.0);\n    u_xlat10_1 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy);\n   
            u_xlat14 = (-u_xlat10_1.w) * _GlossMapScale + 1.0;\n    u_xlat3.x = u_xlat14
            * u_xlat14;\n    u_xlat3.x = max(u_xlat3.x, 0.00200000009);\n    u_xlat10
            = u_xlat3.x * u_xlat3.x;\n    u_xlat17 = u_xlat24 * u_xlat10 + (-u_xlat24);\n   
            u_xlat17 = u_xlat17 * u_xlat24 + 1.0;\n    u_xlat17 = u_xlat17 * u_xlat17
            + 1.00000001e-07;\n    u_xlat10 = u_xlat10 * 0.318309873;\n    u_xlat10
            = u_xlat10 / u_xlat17;\n    u_xlat17 = (-u_xlat3.x) + 1.0;\n    u_xlat24
            = abs(u_xlat21) * u_xlat17 + u_xlat3.x;\n    u_xlat3.x = u_xlat0.x *
            u_xlat17 + u_xlat3.x;\n    u_xlat3.x = abs(u_xlat21) * u_xlat3.x;\n   
            u_xlat16_2.x = -abs(u_xlat21) + 1.0;\n    u_xlat21 = u_xlat0.x * u_xlat24
            + u_xlat3.x;\n    u_xlat21 = u_xlat21 + 9.99999975e-06;\n    u_xlat21
            = 0.5 / u_xlat21;\n    u_xlat21 = u_xlat10 * u_xlat21;\n    u_xlat21
            = u_xlat21 * 3.14159274;\n    u_xlat21 = max(u_xlat21, 9.99999975e-05);\n   
            u_xlat21 = sqrt(u_xlat21);\n    u_xlat21 = u_xlat0.x * u_xlat21;\n   
            u_xlat16_9.x = dot(u_xlat10_1.xyz, u_xlat10_1.xyz);\n    u_xlatb3 = u_xlat16_9.x!=0.0;\n   
            u_xlat3.x = u_xlatb3 ? 1.0 : float(0.0);\n    u_xlat21 = u_xlat21 * u_xlat3.x;\n   
            u_xlat3.xyz = vec3(u_xlat21) * _LightColor0.xyz;\n    u_xlat16_9.x =
            (-u_xlat7) + 1.0;\n    u_xlat16_16 = u_xlat16_9.x * u_xlat16_9.x;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_9.x = u_xlat16_9.x
            * u_xlat16_16;\n    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_9.xyz = u_xlat16_6.xyz * u_xlat16_9.xxx + u_xlat10_1.xyz;\n   
            u_xlat3.xyz = u_xlat16_9.xyz * u_xlat3.xyz;\n    u_xlat16_9.x = u_xlat16_2.x
            * u_xlat16_2.x;\n    u_xlat16_9.x = u_xlat16_9.x * u_xlat16_9.x;\n   
            u_xlat16_2.x = u_xlat16_2.x * u_xlat16_9.x;\n    u_xlat16_9.x = u_xlat7
            + u_xlat7;\n    u_xlat16_9.x = u_xlat7 * u_xlat16_9.x;\n    u_xlat16_9.x
            = u_xlat16_9.x * u_xlat14 + -0.5;\n    u_xlat16_2.x = u_xlat16_9.x *
            u_xlat16_2.x + 1.0;\n    u_xlat16_16 = (-u_xlat0.x) + 1.0;\n    u_xlat16_23
            = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_23 = u_xlat16_23 * u_xlat16_23;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_23;\n    u_xlat16_9.x = u_xlat16_9.x
            * u_xlat16_16 + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * u_xlat16_9.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat16_2.x;\n    u_xlat16_2.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat16_23 = max(u_xlat10_1.y, u_xlat10_1.x);\n   
            u_xlat16_23 = max(u_xlat10_1.z, u_xlat16_23);\n    u_xlat16_23 = (-u_xlat16_23)
            + 1.0;\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_23)
            * u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_2.xyz + u_xlat3.xyz;\n   
            SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nin mediump vec4
            in_TANGENT0;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4
            vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nmediump vec3
            u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat1.xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz
            + u_xlat1.xyz;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12
            = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    u_xlat2.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www
            + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n   
            vs_TEXCOORD2.w = u_xlat2.x;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx
            * u_xlat0.zxy;\n    u_xlat16_3.xyz = u_xlat0.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n   
            vs_TEXCOORD4.xyz = u_xlat0.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz
            = u_xlat16_3.xyz;\n    vs_TEXCOORD3.w = u_xlat2.y;\n    vs_TEXCOORD4.w
            = u_xlat2.z;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform
            \tfloat _GlossMapScale;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _SpecGlossMap;\nUNITY_LOCATION(2)
            uniform mediump sampler2D _BumpMap;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nbool u_xlatb3;\nvec3
            u_xlat4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat7;\nmediump
            vec3 u_xlat16_9;\nfloat u_xlat10;\nfloat u_xlat14;\nmediump float u_xlat16_15;\nmediump
            float u_xlat16_16;\nfloat u_xlat17;\nfloat u_xlat21;\nmediump float u_xlat16_23;\nfloat
            u_xlat24;\nvoid main()\n{\n    u_xlat16_0.xy = texture(_BumpMap, vs_TEXCOORD0.xy).yw;\n   
            u_xlat16_1.xy = u_xlat16_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_15 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy =
            u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_15 = min(u_xlat16_15,
            1.0);\n    u_xlat16_15 = (-u_xlat16_15) + 1.0;\n    u_xlat16_15 = sqrt(u_xlat16_15);\n   
            u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw
            = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz
            = vs_TEXCOORD4.xyz * vec3(u_xlat16_15) + u_xlat16_1.xyw;\n    u_xlat0.x
            = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xyz;\n    u_xlat21 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat3.x
            = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n   
            u_xlat4.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat21) + u_xlat3.xyz;\n   
            u_xlat5.xyz = vec3(u_xlat21) * vs_TEXCOORD1.xyz;\n    u_xlat21 = dot(u_xlat0.xyz,
            (-u_xlat5.xyz));\n    u_xlat24 = dot(u_xlat4.xyz, u_xlat4.xyz);\n   
            u_xlat24 = max(u_xlat24, 0.00100000005);\n    u_xlat24 = inversesqrt(u_xlat24);\n   
            u_xlat4.xyz = vec3(u_xlat24) * u_xlat4.xyz;\n    u_xlat24 = dot(u_xlat0.xyz,
            u_xlat4.xyz);\n    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat0.x
            = dot(u_xlat0.xyz, u_xlat3.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat7 = dot(u_xlat3.xyz, u_xlat4.xyz);\n    u_xlat7 = clamp(u_xlat7,
            0.0, 1.0);\n    u_xlat16_1 = texture(_SpecGlossMap, vs_TEXCOORD0.xy);\n   
            u_xlat14 = (-u_xlat16_1.w) * _GlossMapScale + 1.0;\n    u_xlat3.x = u_xlat14
            * u_xlat14;\n    u_xlat3.x = max(u_xlat3.x, 0.00200000009);\n    u_xlat10
            = u_xlat3.x * u_xlat3.x;\n    u_xlat17 = u_xlat24 * u_xlat10 + (-u_xlat24);\n   
            u_xlat17 = u_xlat17 * u_xlat24 + 1.0;\n    u_xlat17 = u_xlat17 * u_xlat17
            + 1.00000001e-07;\n    u_xlat10 = u_xlat10 * 0.318309873;\n    u_xlat10
            = u_xlat10 / u_xlat17;\n    u_xlat17 = (-u_xlat3.x) + 1.0;\n    u_xlat24
            = abs(u_xlat21) * u_xlat17 + u_xlat3.x;\n    u_xlat3.x = u_xlat0.x *
            u_xlat17 + u_xlat3.x;\n    u_xlat3.x = abs(u_xlat21) * u_xlat3.x;\n   
            u_xlat16_2.x = -abs(u_xlat21) + 1.0;\n    u_xlat21 = u_xlat0.x * u_xlat24
            + u_xlat3.x;\n    u_xlat21 = u_xlat21 + 9.99999975e-06;\n    u_xlat21
            = 0.5 / u_xlat21;\n    u_xlat21 = u_xlat10 * u_xlat21;\n    u_xlat21
            = u_xlat21 * 3.14159274;\n    u_xlat21 = max(u_xlat21, 9.99999975e-05);\n   
            u_xlat21 = sqrt(u_xlat21);\n    u_xlat21 = u_xlat0.x * u_xlat21;\n   
            u_xlat16_9.x = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlatb3 = u_xlat16_9.x!=0.0;\n   
            u_xlat3.x = u_xlatb3 ? 1.0 : float(0.0);\n    u_xlat21 = u_xlat21 * u_xlat3.x;\n   
            u_xlat3.xyz = vec3(u_xlat21) * _LightColor0.xyz;\n    u_xlat16_9.x =
            (-u_xlat7) + 1.0;\n    u_xlat16_16 = u_xlat16_9.x * u_xlat16_9.x;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_9.x = u_xlat16_9.x
            * u_xlat16_16;\n    u_xlat16_6.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0,
            1.0);\n    u_xlat16_9.xyz = u_xlat16_6.xyz * u_xlat16_9.xxx + u_xlat16_1.xyz;\n   
            u_xlat3.xyz = u_xlat16_9.xyz * u_xlat3.xyz;\n    u_xlat16_9.x = u_xlat16_2.x
            * u_xlat16_2.x;\n    u_xlat16_9.x = u_xlat16_9.x * u_xlat16_9.x;\n   
            u_xlat16_2.x = u_xlat16_2.x * u_xlat16_9.x;\n    u_xlat16_9.x = u_xlat7
            + u_xlat7;\n    u_xlat16_9.x = u_xlat7 * u_xlat16_9.x;\n    u_xlat16_9.x
            = u_xlat16_9.x * u_xlat14 + -0.5;\n    u_xlat16_2.x = u_xlat16_9.x *
            u_xlat16_2.x + 1.0;\n    u_xlat16_16 = (-u_xlat0.x) + 1.0;\n    u_xlat16_23
            = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_23 = u_xlat16_23 * u_xlat16_23;\n   
            u_xlat16_16 = u_xlat16_16 * u_xlat16_23;\n    u_xlat16_9.x = u_xlat16_9.x
            * u_xlat16_16 + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * u_xlat16_9.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat16_2.x;\n    u_xlat16_2.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat16_23 = max(u_xlat16_1.y, u_xlat16_1.x);\n   
            u_xlat16_23 = max(u_xlat16_1.z, u_xlat16_23);\n    u_xlat16_23 = (-u_xlat16_23)
            + 1.0;\n    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_23)
            * u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_2.xyz + u_xlat3.xyz;\n   
            SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat _Glossiness;\nuniform
            lowp sampler2D _MainTex;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp
            vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4
            vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3
            u_xlat0;\nvec3 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nlowp vec3 u_xlat10_2;\nvec3
            u_xlat3;\nmediump float u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat
            u_xlat6;\nfloat u_xlat7;\nmediump vec3 u_xlat16_10;\nmediump float u_xlat16_11;\nfloat
            u_xlat12;\nfloat u_xlat13;\nmediump float u_xlat16_16;\nmediump float
            u_xlat16_17;\nfloat u_xlat18;\nfloat u_xlat19;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.x
            = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n   
            u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat18) + u_xlat1.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat18) * vs_TEXCOORD1.xyz;\n    u_xlat18 = dot(u_xlat0.xyz,
            (-u_xlat3.xyz));\n    u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat19 = max(u_xlat19, 0.00100000005);\n    u_xlat19 = inversesqrt(u_xlat19);\n   
            u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;\n    u_xlat19 = dot(u_xlat0.xyz,
            u_xlat2.xyz);\n    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);\n    u_xlat0.x
            = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat6 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat6 = clamp(u_xlat6,
            0.0, 1.0);\n    u_xlat12 = (-_Glossiness) + 1.0;\n    u_xlat1.x = u_xlat12
            * u_xlat12;\n    u_xlat1.x = max(u_xlat1.x, 0.00200000009);\n    u_xlat7
            = u_xlat1.x * u_xlat1.x;\n    u_xlat13 = u_xlat19 * u_xlat7 + (-u_xlat19);\n   
            u_xlat13 = u_xlat13 * u_xlat19 + 1.0;\n    u_xlat13 = u_xlat13 * u_xlat13
            + 1.00000001e-07;\n    u_xlat7 = u_xlat7 * 0.318309873;\n    u_xlat7
            = u_xlat7 / u_xlat13;\n    u_xlat13 = (-u_xlat1.x) + 1.0;\n    u_xlat19
            = abs(u_xlat18) * u_xlat13 + u_xlat1.x;\n    u_xlat1.x = u_xlat0.x *
            u_xlat13 + u_xlat1.x;\n    u_xlat1.x = abs(u_xlat18) * u_xlat1.x;\n   
            u_xlat16_4 = -abs(u_xlat18) + 1.0;\n    u_xlat18 = u_xlat0.x * u_xlat19
            + u_xlat1.x;\n    u_xlat18 = u_xlat18 + 9.99999975e-06;\n    u_xlat18
            = 0.5 / u_xlat18;\n    u_xlat18 = u_xlat7 * u_xlat18;\n    u_xlat18 =
            u_xlat18 * 3.14159274;\n    u_xlat18 = max(u_xlat18, 9.99999975e-05);\n   
            u_xlat18 = sqrt(u_xlat18);\n    u_xlat18 = u_xlat0.x * u_xlat18;\n   
            u_xlat16_10.x = dot(_SpecColor.xyz, _SpecColor.xyz);\n    u_xlatb1 =
            u_xlat16_10.x!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat18 = u_xlat18 * u_xlat1.x;\n    u_xlat1.xyz = vec3(u_xlat18) *
            _LightColor0.xyz;\n    u_xlat16_10.x = (-u_xlat6) + 1.0;\n    u_xlat16_16
            = u_xlat16_10.x * u_xlat16_10.x;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_16;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat16_16;\n    u_xlat16_5.xyz = (-_SpecColor.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_5.xyz * u_xlat16_10.xxx
            + _SpecColor.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_10.x = max(_SpecColor.y, _SpecColor.x);\n    u_xlat16_10.x =
            max(u_xlat16_10.x, _SpecColor.z);\n    u_xlat16_10.x = (-u_xlat16_10.x)
            + 1.0;\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_10.xyz = u_xlat16_10.xxx
            * u_xlat2.xyz;\n    u_xlat16_5.x = u_xlat16_4 * u_xlat16_4;\n    u_xlat16_5.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_4 = u_xlat16_4 * u_xlat16_5.x;\n   
            u_xlat16_5.x = u_xlat6 + u_xlat6;\n    u_xlat16_5.x = u_xlat6 * u_xlat16_5.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat12 + -0.5;\n    u_xlat16_4 = u_xlat16_5.x
            * u_xlat16_4 + 1.0;\n    u_xlat16_11 = (-u_xlat0.x) + 1.0;\n    u_xlat16_17
            = u_xlat16_11 * u_xlat16_11;\n    u_xlat16_17 = u_xlat16_17 * u_xlat16_17;\n   
            u_xlat16_11 = u_xlat16_11 * u_xlat16_17;\n    u_xlat16_5.x = u_xlat16_5.x
            * u_xlat16_11 + 1.0;\n    u_xlat16_4 = u_xlat16_4 * u_xlat16_5.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat16_4;\n    u_xlat16_5.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat0.xyz = u_xlat16_10.xyz * u_xlat16_5.xyz
            + u_xlat1.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz
            = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec3 u_xlat1;\nbool
            u_xlatb1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nmediump
            float u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat u_xlat6;\nfloat u_xlat7;\nmediump
            vec3 u_xlat16_10;\nmediump float u_xlat16_11;\nfloat u_xlat12;\nfloat
            u_xlat13;\nmediump float u_xlat16_16;\nmediump float u_xlat16_17;\nfloat
            u_xlat18;\nfloat u_xlat19;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(vs_TEXCOORD1.xyz,
            vs_TEXCOORD1.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.x
            = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n   
            u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat18) + u_xlat1.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat18) * vs_TEXCOORD1.xyz;\n    u_xlat18 = dot(u_xlat0.xyz,
            (-u_xlat3.xyz));\n    u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat19 = max(u_xlat19, 0.00100000005);\n    u_xlat19 = inversesqrt(u_xlat19);\n   
            u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;\n    u_xlat19 = dot(u_xlat0.xyz,
            u_xlat2.xyz);\n    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);\n    u_xlat0.x
            = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0,
            1.0);\n    u_xlat6 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat6 = clamp(u_xlat6,
            0.0, 1.0);\n    u_xlat12 = (-_Glossiness) + 1.0;\n    u_xlat1.x = u_xlat12
            * u_xlat12;\n    u_xlat1.x = max(u_xlat1.x, 0.00200000009);\n    u_xlat7
            = u_xlat1.x * u_xlat1.x;\n    u_xlat13 = u_xlat19 * u_xlat7 + (-u_xlat19);\n   
            u_xlat13 = u_xlat13 * u_xlat19 + 1.0;\n    u_xlat13 = u_xlat13 * u_xlat13
            + 1.00000001e-07;\n    u_xlat7 = u_xlat7 * 0.318309873;\n    u_xlat7
            = u_xlat7 / u_xlat13;\n    u_xlat13 = (-u_xlat1.x) + 1.0;\n    u_xlat19
            = abs(u_xlat18) * u_xlat13 + u_xlat1.x;\n    u_xlat1.x = u_xlat0.x *
            u_xlat13 + u_xlat1.x;\n    u_xlat1.x = abs(u_xlat18) * u_xlat1.x;\n   
            u_xlat16_4 = -abs(u_xlat18) + 1.0;\n    u_xlat18 = u_xlat0.x * u_xlat19
            + u_xlat1.x;\n    u_xlat18 = u_xlat18 + 9.99999975e-06;\n    u_xlat18
            = 0.5 / u_xlat18;\n    u_xlat18 = u_xlat7 * u_xlat18;\n    u_xlat18 =
            u_xlat18 * 3.14159274;\n    u_xlat18 = max(u_xlat18, 9.99999975e-05);\n   
            u_xlat18 = sqrt(u_xlat18);\n    u_xlat18 = u_xlat0.x * u_xlat18;\n   
            u_xlat16_10.x = dot(_SpecColor.xyz, _SpecColor.xyz);\n    u_xlatb1 =
            u_xlat16_10.x!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n   
            u_xlat18 = u_xlat18 * u_xlat1.x;\n    u_xlat1.xyz = vec3(u_xlat18) *
            _LightColor0.xyz;\n    u_xlat16_10.x = (-u_xlat6) + 1.0;\n    u_xlat16_16
            = u_xlat16_10.x * u_xlat16_10.x;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_16;\n   
            u_xlat16_10.x = u_xlat16_10.x * u_xlat16_16;\n    u_xlat16_5.xyz = (-_SpecColor.xyz)
            + vec3(1.0, 1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_5.xyz * u_xlat16_10.xxx
            + _SpecColor.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat16_10.xyz;\n   
            u_xlat16_10.x = max(_SpecColor.y, _SpecColor.x);\n    u_xlat16_10.x =
            max(u_xlat16_10.x, _SpecColor.z);\n    u_xlat16_10.x = (-u_xlat16_10.x)
            + 1.0;\n    u_xlat16_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat2.xyz = u_xlat16_2.xyz * _Color.xyz;\n    u_xlat16_10.xyz = u_xlat16_10.xxx
            * u_xlat2.xyz;\n    u_xlat16_5.x = u_xlat16_4 * u_xlat16_4;\n    u_xlat16_5.x
            = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_4 = u_xlat16_4 * u_xlat16_5.x;\n   
            u_xlat16_5.x = u_xlat6 + u_xlat6;\n    u_xlat16_5.x = u_xlat6 * u_xlat16_5.x;\n   
            u_xlat16_5.x = u_xlat16_5.x * u_xlat12 + -0.5;\n    u_xlat16_4 = u_xlat16_5.x
            * u_xlat16_4 + 1.0;\n    u_xlat16_11 = (-u_xlat0.x) + 1.0;\n    u_xlat16_17
            = u_xlat16_11 * u_xlat16_11;\n    u_xlat16_17 = u_xlat16_17 * u_xlat16_17;\n   
            u_xlat16_11 = u_xlat16_11 * u_xlat16_17;\n    u_xlat16_5.x = u_xlat16_5.x
            * u_xlat16_11 + 1.0;\n    u_xlat16_4 = u_xlat16_4 * u_xlat16_5.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat16_4;\n    u_xlat16_5.xyz = u_xlat0.xxx
            * _LightColor0.xyz;\n    u_xlat0.xyz = u_xlat16_10.xyz * u_xlat16_5.xyz
            + u_xlat1.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute
            highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat16;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz
            = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat2.xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz
            + u_xlat2.xyz;\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16
            = inversesqrt(u_xlat16);\n    u_xlat2.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat2.xyz;\n    u_xlat3.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www
            + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n   
            vs_TEXCOORD2.w = u_xlat3.x;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n   
            u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    u_xlat16_4.xyz = u_xlat2.yzx
            * u_xlat1.zxy;\n    u_xlat16_4.xyz = u_xlat1.yzx * u_xlat2.zxy + (-u_xlat16_4.xyz);\n   
            vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat1.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat16_4.xyz = u_xlat1.xxx * u_xlat16_4.xyz;\n    vs_TEXCOORD3.xyz
            = u_xlat16_4.xyz;\n    vs_TEXCOORD3.w = u_xlat3.y;\n    vs_TEXCOORD4.w
            = u_xlat3.z;\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _BumpScale;\nuniform \tfloat _GlossMapScale;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform
            highp sampler2D _LightTexture0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3
            vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump
            vec3 u_xlat16_2;\nvec3 u_xlat3;\nbool u_xlatb3;\nvec3 u_xlat4;\nvec3
            u_xlat5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat7;\nmediump vec3 u_xlat16_9;\nvec3
            u_xlat10;\nmediump vec3 u_xlat16_13;\nfloat u_xlat14;\nmediump float
            u_xlat16_15;\nfloat u_xlat17;\nmediump float u_xlat16_20;\nfloat u_xlat21;\nmediump
            float u_xlat16_23;\nfloat u_xlat24;\nvoid main()\n{\n    u_xlat10_0.xy
            = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_15 = dot(u_xlat16_1.xy,
            u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n   
            u_xlat16_15 = min(u_xlat16_15, 1.0);\n    u_xlat16_15 = (-u_xlat16_15)
            + 1.0;\n    u_xlat16_15 = sqrt(u_xlat16_15);\n    u_xlat16_2.xyz = u_xlat16_1.yyy
            * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx
            + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_15)
            + u_xlat16_1.xyw;\n    u_xlat0.x = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            u_xlat16_1.xyz;\n    u_xlat21 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat3.xyz = vec3(u_xlat21) *
            vs_TEXCOORD1.xyz;\n    u_xlat4.x = vs_TEXCOORD2.w;\n    u_xlat4.y = vs_TEXCOORD3.w;\n   
            u_xlat4.z = vs_TEXCOORD4.w;\n    u_xlat21 = dot(u_xlat4.xyz, u_xlat4.xyz);\n   
            u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat5.xyz = u_xlat4.xyz * vec3(u_xlat21)
            + (-u_xlat3.xyz);\n    u_xlat3.x = dot(u_xlat0.xyz, (-u_xlat3.xyz));\n   
            u_xlat10.xyz = vec3(u_xlat21) * u_xlat4.xyz;\n    u_xlat21 = dot(u_xlat5.xyz,
            u_xlat5.xyz);\n    u_xlat21 = max(u_xlat21, 0.00100000005);\n    u_xlat21
            = inversesqrt(u_xlat21);\n    u_xlat4.xyz = vec3(u_xlat21) * u_xlat5.xyz;\n   
            u_xlat21 = dot(u_xlat0.xyz, u_xlat4.xyz);\n    u_xlat21 = clamp(u_xlat21,
            0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat10.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat7 = dot(u_xlat10.xyz, u_xlat4.xyz);\n   
            u_xlat7 = clamp(u_xlat7, 0.0, 1.0);\n    u_xlat10_1 = texture2D(_SpecGlossMap,
            vs_TEXCOORD0.xy);\n    u_xlat14 = (-u_xlat10_1.w) * _GlossMapScale +
            1.0;\n    u_xlat10.x = u_xlat14 * u_xlat14;\n    u_xlat10.x = max(u_xlat10.x,
            0.00200000009);\n    u_xlat17 = u_xlat10.x * u_xlat10.x;\n    u_xlat24
            = u_xlat21 * u_xlat17 + (-u_xlat21);\n    u_xlat21 = u_xlat24 * u_xlat21
            + 1.0;\n    u_xlat21 = u_xlat21 * u_xlat21 + 1.00000001e-07;\n    u_xlat17
            = u_xlat17 * 0.318309873;\n    u_xlat21 = u_xlat17 / u_xlat21;\n    u_xlat17
            = (-u_xlat10.x) + 1.0;\n    u_xlat24 = abs(u_xlat3.x) * u_xlat17 + u_xlat10.x;\n   
            u_xlat10.x = u_xlat0.x * u_xlat17 + u_xlat10.x;\n    u_xlat10.x = u_xlat10.x
            * abs(u_xlat3.x);\n    u_xlat16_2.x = -abs(u_xlat3.x) + 1.0;\n    u_xlat3.x
            = u_xlat0.x * u_xlat24 + u_xlat10.x;\n    u_xlat3.x = u_xlat3.x + 9.99999975e-06;\n   
            u_xlat3.x = 0.5 / u_xlat3.x;\n    u_xlat21 = u_xlat21 * u_xlat3.x;\n   
            u_xlat21 = u_xlat21 * 3.14159274;\n    u_xlat21 = max(u_xlat21, 9.99999975e-05);\n   
            u_xlat21 = sqrt(u_xlat21);\n    u_xlat21 = u_xlat0.x * u_xlat21;\n   
            u_xlat16_9.x = dot(u_xlat10_1.xyz, u_xlat10_1.xyz);\n    u_xlatb3 = u_xlat16_9.x!=0.0;\n   
            u_xlat3.x = u_xlatb3 ? 1.0 : float(0.0);\n    u_xlat21 = u_xlat21 * u_xlat3.x;\n   
            u_xlat3.xyz = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = u_xlat3.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat3.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat3.x = texture2D(_LightTexture0,
            u_xlat3.xx).x;\n    u_xlat16_9.xyz = u_xlat3.xxx * _LightColor0.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat21) * u_xlat16_9.xyz;\n    u_xlat16_6.x = (-u_xlat7)
            + 1.0;\n    u_xlat16_13.x = u_xlat16_6.x * u_xlat16_6.x;\n    u_xlat16_13.x
            = u_xlat16_13.x * u_xlat16_13.x;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_13.x;\n   
            u_xlat16_13.xyz = (-u_xlat10_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_6.xyz
            = u_xlat16_13.xyz * u_xlat16_6.xxx + u_xlat10_1.xyz;\n    u_xlat3.xyz
            = u_xlat3.xyz * u_xlat16_6.xyz;\n    u_xlat16_6.x = u_xlat16_2.x * u_xlat16_2.x;\n   
            u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;\n    u_xlat16_2.x = u_xlat16_2.x
            * u_xlat16_6.x;\n    u_xlat16_6.x = u_xlat7 + u_xlat7;\n    u_xlat16_6.x
            = u_xlat7 * u_xlat16_6.x;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat14
            + -0.5;\n    u_xlat16_2.x = u_xlat16_6.x * u_xlat16_2.x + 1.0;\n    u_xlat16_13.x
            = (-u_xlat0.x) + 1.0;\n    u_xlat16_20 = u_xlat16_13.x * u_xlat16_13.x;\n   
            u_xlat16_20 = u_xlat16_20 * u_xlat16_20;\n    u_xlat16_13.x = u_xlat16_13.x
            * u_xlat16_20;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_13.x + 1.0;\n   
            u_xlat16_2.x = u_xlat16_2.x * u_xlat16_6.x;\n    u_xlat0.x = u_xlat0.x
            * u_xlat16_2.x;\n    u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_9.xyz;\n   
            u_xlat16_23 = max(u_xlat10_1.y, u_xlat10_1.x);\n    u_xlat16_23 = max(u_xlat10_1.z,
            u_xlat16_23);\n    u_xlat16_23 = (-u_xlat16_23) + 1.0;\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz
            * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_23) * u_xlat0.xyz;\n   
            u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_2.xyz + u_xlat3.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2
            in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nin mediump vec4 in_TANGENT0;\nout
            highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout
            highp vec3 vs_TEXCOORD5;\nout highp vec3 vs_TEXCOORD6;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat16;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    vs_TEXCOORD1.xyz = u_xlat1.xyz
            + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz
            = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat2.xyz
            = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat2.xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz
            + u_xlat2.xyz;\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16
            = inversesqrt(u_xlat16);\n    u_xlat2.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat2.xyz;\n    u_xlat3.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www
            + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n   
            vs_TEXCOORD2.w = u_xlat3.x;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n   
            u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    u_xlat16_4.xyz = u_xlat2.yzx
            * u_xlat1.zxy;\n    u_xlat16_4.xyz = u_xlat1.yzx * u_xlat2.zxy + (-u_xlat16_4.xyz);\n   
            vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat1.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat16_4.xyz = u_xlat1.xxx * u_xlat16_4.xyz;\n    vs_TEXCOORD3.xyz
            = u_xlat16_4.xyz;\n    vs_TEXCOORD3.w = u_xlat3.y;\n    vs_TEXCOORD4.w
            = u_xlat3.z;\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform
            \tfloat _GlossMapScale;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _SpecGlossMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _BumpMap;\nUNITY_LOCATION(3) uniform highp sampler2D _LightTexture0;\nin
            highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4
            vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nin
            highp vec3 vs_TEXCOORD5;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nvec3 u_xlat3;\nbool u_xlatb3;\nvec3 u_xlat4;\nvec3
            u_xlat5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat7;\nmediump vec3 u_xlat16_9;\nvec3
            u_xlat10;\nmediump vec3 u_xlat16_13;\nfloat u_xlat14;\nmediump float
            u_xlat16_15;\nfloat u_xlat17;\nmediump float u_xlat16_20;\nfloat u_xlat21;\nmediump
            float u_xlat16_23;\nfloat u_xlat24;\nvoid main()\n{\n    u_xlat16_0.xy
            = texture(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat16_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_15 = dot(u_xlat16_1.xy,
            u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n   
            u_xlat16_15 = min(u_xlat16_15, 1.0);\n    u_xlat16_15 = (-u_xlat16_15)
            + 1.0;\n    u_xlat16_15 = sqrt(u_xlat16_15);\n    u_xlat16_2.xyz = u_xlat16_1.yyy
            * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx
            + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_15)
            + u_xlat16_1.xyw;\n    u_xlat0.x = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx *
            u_xlat16_1.xyz;\n    u_xlat21 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n   
            u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat3.xyz = vec3(u_xlat21) *
            vs_TEXCOORD1.xyz;\n    u_xlat4.x = vs_TEXCOORD2.w;\n    u_xlat4.y = vs_TEXCOORD3.w;\n   
            u_xlat4.z = vs_TEXCOORD4.w;\n    u_xlat21 = dot(u_xlat4.xyz, u_xlat4.xyz);\n   
            u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat5.xyz = u_xlat4.xyz * vec3(u_xlat21)
            + (-u_xlat3.xyz);\n    u_xlat3.x = dot(u_xlat0.xyz, (-u_xlat3.xyz));\n   
            u_xlat10.xyz = vec3(u_xlat21) * u_xlat4.xyz;\n    u_xlat21 = dot(u_xlat5.xyz,
            u_xlat5.xyz);\n    u_xlat21 = max(u_xlat21, 0.00100000005);\n    u_xlat21
            = inversesqrt(u_xlat21);\n    u_xlat4.xyz = vec3(u_xlat21) * u_xlat5.xyz;\n   
            u_xlat21 = dot(u_xlat0.xyz, u_xlat4.xyz);\n    u_xlat21 = clamp(u_xlat21,
            0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat10.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat7 = dot(u_xlat10.xyz, u_xlat4.xyz);\n   
            u_xlat7 = clamp(u_xlat7, 0.0, 1.0);\n    u_xlat16_1 = texture(_SpecGlossMap,
            vs_TEXCOORD0.xy);\n    u_xlat14 = (-u_xlat16_1.w) * _GlossMapScale +
            1.0;\n    u_xlat10.x = u_xlat14 * u_xlat14;\n    u_xlat10.x = max(u_xlat10.x,
            0.00200000009);\n    u_xlat17 = u_xlat10.x * u_xlat10.x;\n    u_xlat24
            = u_xlat21 * u_xlat17 + (-u_xlat21);\n    u_xlat21 = u_xlat24 * u_xlat21
            + 1.0;\n    u_xlat21 = u_xlat21 * u_xlat21 + 1.00000001e-07;\n    u_xlat17
            = u_xlat17 * 0.318309873;\n    u_xlat21 = u_xlat17 / u_xlat21;\n    u_xlat17
            = (-u_xlat10.x) + 1.0;\n    u_xlat24 = abs(u_xlat3.x) * u_xlat17 + u_xlat10.x;\n   
            u_xlat10.x = u_xlat0.x * u_xlat17 + u_xlat10.x;\n    u_xlat10.x = u_xlat10.x
            * abs(u_xlat3.x);\n    u_xlat16_2.x = -abs(u_xlat3.x) + 1.0;\n    u_xlat3.x
            = u_xlat0.x * u_xlat24 + u_xlat10.x;\n    u_xlat3.x = u_xlat3.x + 9.99999975e-06;\n   
            u_xlat3.x = 0.5 / u_xlat3.x;\n    u_xlat21 = u_xlat21 * u_xlat3.x;\n   
            u_xlat21 = u_xlat21 * 3.14159274;\n    u_xlat21 = max(u_xlat21, 9.99999975e-05);\n   
            u_xlat21 = sqrt(u_xlat21);\n    u_xlat21 = u_xlat0.x * u_xlat21;\n   
            u_xlat16_9.x = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlatb3 = u_xlat16_9.x!=0.0;\n   
            u_xlat3.x = u_xlatb3 ? 1.0 : float(0.0);\n    u_xlat21 = u_xlat21 * u_xlat3.x;\n   
            u_xlat3.xyz = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx
            + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat3.xyz;\n    u_xlat3.xyz = u_xlat3.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat3.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat3.x = texture(_LightTexture0,
            u_xlat3.xx).x;\n    u_xlat16_9.xyz = u_xlat3.xxx * _LightColor0.xyz;\n   
            u_xlat3.xyz = vec3(u_xlat21) * u_xlat16_9.xyz;\n    u_xlat16_6.x = (-u_xlat7)
            + 1.0;\n    u_xlat16_13.x = u_xlat16_6.x * u_xlat16_6.x;\n    u_xlat16_13.x
            = u_xlat16_13.x * u_xlat16_13.x;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_13.x;\n   
            u_xlat16_13.xyz = (-u_xlat16_1.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_6.xyz
            = u_xlat16_13.xyz * u_xlat16_6.xxx + u_xlat16_1.xyz;\n    u_xlat3.xyz
            = u_xlat3.xyz * u_xlat16_6.xyz;\n    u_xlat16_6.x = u_xlat16_2.x * u_xlat16_2.x;\n   
            u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;\n    u_xlat16_2.x = u_xlat16_2.x
            * u_xlat16_6.x;\n    u_xlat16_6.x = u_xlat7 + u_xlat7;\n    u_xlat16_6.x
            = u_xlat7 * u_xlat16_6.x;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat14
            + -0.5;\n    u_xlat16_2.x = u_xlat16_6.x * u_xlat16_2.x + 1.0;\n    u_xlat16_13.x
            = (-u_xlat0.x) + 1.0;\n    u_xlat16_20 = u_xlat16_13.x * u_xlat16_13.x;\n   
            u_xlat16_20 = u_xlat16_20 * u_xlat16_20;\n    u_xlat16_13.x = u_xlat16_13.x
            * u_xlat16_20;\n    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_13.x + 1.0;\n   
            u_xlat16_2.x = u_xlat16_2.x * u_xlat16_6.x;\n    u_xlat0.x = u_xlat0.x
            * u_xlat16_2.x;\n    u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_9.xyz;\n   
            u_xlat16_23 = max(u_xlat16_1.y, u_xlat16_1.x);\n    u_xlat16_23 = max(u_xlat16_1.z,
            u_xlat16_23);\n    u_xlat16_23 = (-u_xlat16_23) + 1.0;\n    u_xlat16_0.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz
            * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat16_23) * u_xlat0.xyz;\n   
            u_xlat0.xyz = u_xlat16_6.xyz * u_xlat16_2.xyz + u_xlat3.xyz;\n    SV_Target0.xyz
            = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 0
          Keywords:
          - POINT
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - LIGHTMAP_SHADOW_MIXING
        - POINT
        - POINT_COOKIE
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - SHADOWS_SOFT
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _DETAIL_MULX2
        - _NORMALMAP
        - _PARALLAXMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECGLOSSMAP
        - _SPECULARHIGHLIGHTS_OFF
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - _NORMALMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _SPECGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _PARALLAXMAP
          hasDiscard: 1
        - Keywords:
          - POINT
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - SPOT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SOFT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 47
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - POINT
          - _NORMALMAP
          - _SPECGLOSSMAP
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 0
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords:
        - INSTANCING_ON
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _PARALLAXMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECGLOSSMAP
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - INSTANCING_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _SPECGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _PARALLAXMAP
          hasDiscard: 1
        - Keywords:
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SHADOWS_CUBE
          hasDiscard: 0
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 0
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: PerformanceChecks
        Value: False
      - Key: RenderType
        Value: Opaque
    - Index: 1
      Passes:
      - Shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump float u_xlat16_27;\nmediump
            float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness))
            + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n   
            u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat16_9.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n    u_xlat16_9.x
            = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz = u_xlat2.xyz * (-u_xlat16_9.xxx)
            + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat16_9.xyz, u_xlat16_1);\n    u_xlat16_3.x = u_xlat10_1.w + -1.0;\n   
            u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x
            = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_1.xyz
            * u_xlat16_3.xxx;\n    u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_3.xyz = u_xlat10_0.xxx * u_xlat16_3.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n    u_xlat16 = clamp(u_xlat16,
            0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat4.xyz =
            u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_6.xyz = u_xlat0.xxx * _SpecColor.xyz;\n   
            u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat0.x = u_xlat16_27 * u_xlat16_27;\n   
            u_xlat0.x = u_xlat16_27 * u_xlat0.x;\n    u_xlat0.x = u_xlat16_27 * u_xlat0.x;\n   
            u_xlat16_27 = (-_SpecColor.x) + 1.0;\n    u_xlat16_29 = (-u_xlat16_27)
            + 1.0;\n    u_xlat16_29 = u_xlat16_29 + _Glossiness;\n    u_xlat16_29
            = clamp(u_xlat16_29, 0.0, 1.0);\n    u_xlat16_7.xyz = vec3(u_xlat16_29)
            + (-_SpecColor.xyz);\n    u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz
            + _SpecColor.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n   
            u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz
            = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = u_xlat0.xyz * vec3(u_xlat16_27)
            + u_xlat16_6.xyz;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3
            u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat16;\nmediump float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid
            main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n   
            u_xlat16_1.x = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat16_1.x = u_xlat16_1.x * 6.0;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat16_9.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n    u_xlat16_9.x
            = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz = u_xlat2.xyz * (-u_xlat16_9.xxx)
            + vs_TEXCOORD1.xyz;\n    u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_9.xyz,
            u_xlat16_1.x);\n    u_xlat16_3.x = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x
            = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x
            * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xxx;\n   
            u_xlat16_0.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz
            = u_xlat16_0.xxx * u_xlat16_3.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n    u_xlat16 = clamp(u_xlat16,
            0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat4.xyz =
            u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_6.xyz = u_xlat0.xxx * _SpecColor.xyz;\n   
            u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat0.x = u_xlat16_27 * u_xlat16_27;\n   
            u_xlat0.x = u_xlat16_27 * u_xlat0.x;\n    u_xlat0.x = u_xlat16_27 * u_xlat0.x;\n   
            u_xlat16_27 = (-_SpecColor.x) + 1.0;\n    u_xlat16_29 = (-u_xlat16_27)
            + 1.0;\n    u_xlat16_29 = u_xlat16_29 + _Glossiness;\n    u_xlat16_29
            = clamp(u_xlat16_29, 0.0, 1.0);\n    u_xlat16_7.xyz = vec3(u_xlat16_29)
            + (-_SpecColor.xyz);\n    u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz
            + _SpecColor.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n   
            u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = u_xlat0.xyz * vec3(u_xlat16_27)
            + u_xlat16_6.xyz;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute
            mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3
            vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_TANGENT0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) *
            u_xlat0.xyz;\n    vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx
            * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n   
            u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_2.xyz;\n   
            vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat16_2.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_2.x =
            u_xlat1.x * u_xlat1.x + (-u_xlat16_2.x);\n    u_xlat16_0 = u_xlat1.yzzx
            * u_xlat1.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n   
            u_xlat1.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_3.y
            = dot(unity_SHAg, u_xlat1);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat1);\n   
            u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz
            = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_2.xyz);\n   
            u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat1.xyz = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform
            \tfloat _GlossMapScale;\nuniform lowp sampler2D _MainTex;\nuniform lowp
            sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp
            sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nlowp
            vec4 u_xlat10_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3
            u_xlat7;\nlowp vec3 u_xlat10_7;\nmediump float u_xlat16_15;\nmediump
            float u_xlat16_22;\nmediump float u_xlat16_24;\nvoid main()\n{\n    u_xlat10_0.xy
            = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_15 = dot(u_xlat16_1.xy,
            u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n   
            u_xlat16_15 = min(u_xlat16_15, 1.0);\n    u_xlat16_15 = (-u_xlat16_15)
            + 1.0;\n    u_xlat16_15 = sqrt(u_xlat16_15);\n    u_xlat16_2.xyz = u_xlat16_1.yyy
            * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx
            + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_15)
            + u_xlat16_1.xyw;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n   
            u_xlat7.x = u_xlat0.x;\n    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n   
            u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat0.xzw = u_xlat16_1.xyz
            * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat0.xzw,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat16_22 = (-u_xlat7.x) +
            1.0;\n    u_xlat7.x = u_xlat16_22 * u_xlat16_22;\n    u_xlat7.x = u_xlat16_22
            * u_xlat7.x;\n    u_xlat7.x = u_xlat16_22 * u_xlat7.x;\n    u_xlat10_2
            = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy);\n    u_xlat16_22 = (-u_xlat10_2.x)
            + 1.0;\n    u_xlat16_3.x = (-u_xlat16_22) + 1.0;\n    u_xlat16_3.x =
            u_xlat10_2.w * _GlossMapScale + u_xlat16_3.x;\n    u_xlat16_3.x = clamp(u_xlat16_3.x,
            0.0, 1.0);\n    u_xlat16_3.xyz = (-u_xlat10_2.xyz) + u_xlat16_3.xxx;\n   
            u_xlat16_3.xyz = u_xlat7.xxx * u_xlat16_3.xyz + u_xlat10_2.xyz;\n   
            u_xlat16_24 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_24
            = u_xlat16_24 + u_xlat16_24;\n    u_xlat16_4.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_24))
            + vs_TEXCOORD1.xyz;\n    u_xlat7.x = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat7.xxx
            * _LightColor0.xyz;\n    u_xlat0.z = (-u_xlat10_2.w) * _GlossMapScale
            + 1.0;\n    u_xlat16_24 = (-u_xlat0.z) * 0.699999988 + 1.70000005;\n   
            u_xlat16_24 = u_xlat0.z * u_xlat16_24;\n    u_xlat0.x = texture2D(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_24 =
            u_xlat16_24 * 6.0;\n    u_xlat10_4 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat16_4.xyz, u_xlat16_24);\n    u_xlat16_24 = u_xlat10_4.w + -1.0;\n   
            u_xlat16_24 = unity_SpecCube0_HDR.w * u_xlat16_24 + 1.0;\n    u_xlat16_24
            = u_xlat16_24 * unity_SpecCube0_HDR.x;\n    u_xlat16_5.xyz = u_xlat10_4.xyz
            * vec3(u_xlat16_24);\n    u_xlat10_7.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_5.xyz = u_xlat10_7.xxx * u_xlat16_5.xyz;\n    u_xlat16_6.xyz
            = u_xlat10_7.xxx * vs_TEXCOORD5.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz
            * u_xlat16_5.xyz;\n    u_xlat10_7.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat7.xyz = u_xlat10_7.xyz * _Color.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat16_22)
            * u_xlat7.xyz;\n    u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_5.xyz = u_xlat0.xxx * u_xlat10_2.xyz
            + u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz
            + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nin mediump vec4
            in_TANGENT0;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4
            vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout
            highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_TANGENT0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) *
            u_xlat0.xyz;\n    vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w
            = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx
            * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n   
            u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_2.xyz
            = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_2.xyz;\n   
            vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat16_2.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_2.x =
            u_xlat1.x * u_xlat1.x + (-u_xlat16_2.x);\n    u_xlat16_0 = u_xlat1.yzzx
            * u_xlat1.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n   
            u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb,
            u_xlat16_0);\n    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n   
            u_xlat1.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_3.y
            = dot(unity_SHAg, u_xlat1);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat1);\n   
            u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz
            = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_2.xyz);\n   
            u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n   
            u_xlat1.xyz = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform
            \tfloat _GlossMapScale;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _SpecGlossMap;\nUNITY_LOCATION(2)
            uniform mediump sampler2D _BumpMap;\nUNITY_LOCATION(3) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(4) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(5)
            uniform mediump samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec2 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec4 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3
            u_xlat7;\nmediump vec3 u_xlat16_7;\nmediump float u_xlat16_15;\nmediump
            float u_xlat16_22;\nmediump float u_xlat16_24;\nvoid main()\n{\n    u_xlat16_0.xy
            = texture(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat16_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_15 = dot(u_xlat16_1.xy,
            u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n   
            u_xlat16_15 = min(u_xlat16_15, 1.0);\n    u_xlat16_15 = (-u_xlat16_15)
            + 1.0;\n    u_xlat16_15 = sqrt(u_xlat16_15);\n    u_xlat16_2.xyz = u_xlat16_1.yyy
            * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx
            + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_15)
            + u_xlat16_1.xyw;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n   
            u_xlat7.x = u_xlat0.x;\n    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n   
            u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat0.xzw = u_xlat16_1.xyz
            * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat0.xzw,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat16_22 = (-u_xlat7.x) +
            1.0;\n    u_xlat7.x = u_xlat16_22 * u_xlat16_22;\n    u_xlat7.x = u_xlat16_22
            * u_xlat7.x;\n    u_xlat7.x = u_xlat16_22 * u_xlat7.x;\n    u_xlat16_2
            = texture(_SpecGlossMap, vs_TEXCOORD0.xy);\n    u_xlat16_22 = (-u_xlat16_2.x)
            + 1.0;\n    u_xlat16_3.x = (-u_xlat16_22) + 1.0;\n    u_xlat16_3.x =
            u_xlat16_2.w * _GlossMapScale + u_xlat16_3.x;\n    u_xlat16_3.x = clamp(u_xlat16_3.x,
            0.0, 1.0);\n    u_xlat16_3.xyz = (-u_xlat16_2.xyz) + u_xlat16_3.xxx;\n   
            u_xlat16_3.xyz = u_xlat7.xxx * u_xlat16_3.xyz + u_xlat16_2.xyz;\n   
            u_xlat16_24 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_24
            = u_xlat16_24 + u_xlat16_24;\n    u_xlat16_4.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_24))
            + vs_TEXCOORD1.xyz;\n    u_xlat7.x = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat7.xxx
            * _LightColor0.xyz;\n    u_xlat0.z = (-u_xlat16_2.w) * _GlossMapScale
            + 1.0;\n    u_xlat16_24 = (-u_xlat0.z) * 0.699999988 + 1.70000005;\n   
            u_xlat16_24 = u_xlat0.z * u_xlat16_24;\n    u_xlat0.x = texture(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_24 =
            u_xlat16_24 * 6.0;\n    u_xlat16_4 = textureLod(unity_SpecCube0, u_xlat16_4.xyz,
            u_xlat16_24);\n    u_xlat16_24 = u_xlat16_4.w + -1.0;\n    u_xlat16_24
            = unity_SpecCube0_HDR.w * u_xlat16_24 + 1.0;\n    u_xlat16_24 = u_xlat16_24
            * unity_SpecCube0_HDR.x;\n    u_xlat16_5.xyz = u_xlat16_4.xyz * vec3(u_xlat16_24);\n   
            u_xlat16_7.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_5.xyz
            = u_xlat16_7.xxx * u_xlat16_5.xyz;\n    u_xlat16_6.xyz = u_xlat16_7.xxx
            * vs_TEXCOORD5.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz;\n   
            u_xlat16_7.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat7.xyz
            = u_xlat16_7.xyz * _Color.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat16_22)
            * u_xlat7.xyz;\n    u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_5.xyz = u_xlat0.xxx * u_xlat16_2.xyz
            + u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz
            + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying
            highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            float u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3
            u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3 u_xlat8;\nlowp vec3
            u_xlat10_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump float
            u_xlat16_27;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n   
            u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1
            = textureCubeLodEXT(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1);\n   
            u_xlat16_3.x = u_xlat10_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx;\n    u_xlat10_0 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;\n   
            u_xlat16_4.xyz = vec3(u_xlat10_0) * vs_TEXCOORD5.xyz;\n    u_xlat0.x
            = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n   
            u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat5.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8.x
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8.x = u_xlat16_27 * u_xlat8.x;\n   
            u_xlat8.x = u_xlat16_27 * u_xlat8.x;\n    u_xlat16_27 = (-_SpecColor.x)
            + 1.0;\n    u_xlat16_28 = (-u_xlat16_27) + 1.0;\n    u_xlat16_28 = u_xlat16_28
            + _Glossiness;\n    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);\n   
            u_xlat16_7.xyz = vec3(u_xlat16_28) + (-_SpecColor.xyz);\n    u_xlat16_7.xyz
            = u_xlat8.xxx * u_xlat16_7.xyz + _SpecColor.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat10_8.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat8.xyz = u_xlat10_8.xyz * _Color.xyz;\n   
            u_xlat16_7.xyz = vec3(u_xlat16_27) * u_xlat8.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_7.xyz + u_xlat16_3.xyz;\n    u_xlat16_4.xyz
            = u_xlat0.xxx * _SpecColor.xyz + u_xlat16_7.xyz;\n    SV_Target0.xyz
            = u_xlat16_4.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout mediump vec4 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump
            vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w
            = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n   
            u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x *
            u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n   
            u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz
            = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n   
            u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg,
            u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz
            = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz
            = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz
            = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump float u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3
            u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3
            u_xlat8;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1
            = textureLod(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1.x);\n    u_xlat16_3.x
            = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x
            + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xxx;\n    u_xlat16_0 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat16_0) * u_xlat16_3.xyz;\n   
            u_xlat16_4.xyz = vec3(u_xlat16_0) * vs_TEXCOORD5.xyz;\n    u_xlat0.x
            = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n   
            u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat5.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8.x
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8.x = u_xlat16_27 * u_xlat8.x;\n   
            u_xlat8.x = u_xlat16_27 * u_xlat8.x;\n    u_xlat16_27 = (-_SpecColor.x)
            + 1.0;\n    u_xlat16_28 = (-u_xlat16_27) + 1.0;\n    u_xlat16_28 = u_xlat16_28
            + _Glossiness;\n    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);\n   
            u_xlat16_7.xyz = vec3(u_xlat16_28) + (-_SpecColor.xyz);\n    u_xlat16_7.xyz
            = u_xlat8.xxx * u_xlat16_7.xyz + _SpecColor.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat16_8.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat8.xyz = u_xlat16_8.xyz * _Color.xyz;\n   
            u_xlat16_7.xyz = vec3(u_xlat16_27) * u_xlat8.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_7.xyz + u_xlat16_3.xyz;\n    u_xlat16_4.xyz
            = u_xlat0.xxx * _SpecColor.xyz + u_xlat16_7.xyz;\n    SV_Target0.xyz
            = u_xlat16_4.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying
            mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying
            highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            vec3 u_xlat16_2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_TANGENT0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat1.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n   
            u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx
            * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n   
            vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz
            = u_xlat16_2.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n   
            vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform
            \tfloat _GlossMapScale;\nuniform lowp sampler2D _MainTex;\nuniform lowp
            sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp
            sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nmediump vec3
            u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nfloat
            u_xlat11;\nlowp float u_xlat10_11;\nmediump float u_xlat16_17;\nfloat
            u_xlat24;\nmediump float u_xlat16_25;\nmediump float u_xlat16_28;\nvoid
            main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n   
            u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_17 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy =
            u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_17 = min(u_xlat16_17,
            1.0);\n    u_xlat16_17 = (-u_xlat16_17) + 1.0;\n    u_xlat16_17 = sqrt(u_xlat16_17);\n   
            u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw
            = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz
            = vs_TEXCOORD4.xyz * vec3(u_xlat16_17) + u_xlat16_1.xyw;\n    u_xlat16_25
            = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_25 = u_xlat16_25
            + u_xlat16_25;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_25))
            + vs_TEXCOORD1.xyz;\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy);\n   
            u_xlat3.z = (-u_xlat10_0.w) * _GlossMapScale + 1.0;\n    u_xlat16_25
            = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_25 = u_xlat16_25
            * u_xlat3.z;\n    u_xlat16_25 = u_xlat16_25 * 6.0;\n    u_xlat10_2 =
            textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_25);\n   
            u_xlat16_25 = u_xlat10_2.w + -1.0;\n    u_xlat16_25 = unity_SpecCube0_HDR.w
            * u_xlat16_25 + 1.0;\n    u_xlat16_25 = u_xlat16_25 * unity_SpecCube0_HDR.x;\n   
            u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_25);\n    u_xlat10_11
            = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz =
            vec3(u_xlat10_11) * u_xlat16_4.xyz;\n    u_xlat16_25 = (-u_xlat10_0.x)
            + 1.0;\n    u_xlat16_28 = (-u_xlat16_25) + 1.0;\n    u_xlat16_28 = u_xlat10_0.w
            * _GlossMapScale + u_xlat16_28;\n    u_xlat16_28 = clamp(u_xlat16_28,
            0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat10_0.xyz) + vec3(u_xlat16_28);\n   
            u_xlat24 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat11 =
            u_xlat24;\n    u_xlat11 = clamp(u_xlat11, 0.0, 1.0);\n    u_xlat24 =
            u_xlat24 + u_xlat24;\n    u_xlat6.xyz = u_xlat16_1.xyz * (-vec3(u_xlat24))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat24 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat16_1.xyz = vec3(u_xlat24)
            * _LightColor0.xyz;\n    u_xlat24 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat24 = u_xlat24 * u_xlat24;\n    u_xlat3.x = u_xlat24 * u_xlat24;\n   
            u_xlat24 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat24
            = u_xlat24 * 16.0;\n    u_xlat16_7.xyz = u_xlat10_0.xyz * vec3(u_xlat24);\n   
            u_xlat16_28 = (-u_xlat11) + 1.0;\n    u_xlat24 = u_xlat16_28 * u_xlat16_28;\n   
            u_xlat24 = u_xlat16_28 * u_xlat24;\n    u_xlat24 = u_xlat16_28 * u_xlat24;\n   
            u_xlat16_5.xyz = vec3(u_xlat24) * u_xlat16_5.xyz + u_xlat10_0.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz
            * _Color.xyz;\n    u_xlat16_5.xyz = u_xlat0.xyz * vec3(u_xlat16_25) +
            u_xlat16_7.xyz;\n    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz
            + u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nin mediump vec4 in_TANGENT0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_2;\nfloat
            u_xlat9;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_TANGENT0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat1.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n   
            u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx
            * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n   
            vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz
            = u_xlat16_2.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n   
            vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform
            \tfloat _GlossMapScale;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _SpecGlossMap;\nUNITY_LOCATION(2)
            uniform mediump sampler2D _BumpMap;\nUNITY_LOCATION(3) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(4) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(5)
            uniform mediump samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nvec3 u_xlat3;\nmediump vec3
            u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nfloat
            u_xlat11;\nmediump float u_xlat16_11;\nmediump float u_xlat16_17;\nfloat
            u_xlat24;\nmediump float u_xlat16_25;\nmediump float u_xlat16_28;\nvoid
            main()\n{\n    u_xlat16_0.xy = texture(_BumpMap, vs_TEXCOORD0.xy).yw;\n   
            u_xlat16_1.xy = u_xlat16_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_17 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy =
            u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_17 = min(u_xlat16_17,
            1.0);\n    u_xlat16_17 = (-u_xlat16_17) + 1.0;\n    u_xlat16_17 = sqrt(u_xlat16_17);\n   
            u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw
            = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz
            = vs_TEXCOORD4.xyz * vec3(u_xlat16_17) + u_xlat16_1.xyw;\n    u_xlat16_25
            = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_25 = u_xlat16_25
            + u_xlat16_25;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_25))
            + vs_TEXCOORD1.xyz;\n    u_xlat16_0 = texture(_SpecGlossMap, vs_TEXCOORD0.xy);\n   
            u_xlat3.z = (-u_xlat16_0.w) * _GlossMapScale + 1.0;\n    u_xlat16_25
            = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_25 = u_xlat16_25
            * u_xlat3.z;\n    u_xlat16_25 = u_xlat16_25 * 6.0;\n    u_xlat16_2 =
            textureLod(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_25);\n    u_xlat16_25
            = u_xlat16_2.w + -1.0;\n    u_xlat16_25 = unity_SpecCube0_HDR.w * u_xlat16_25
            + 1.0;\n    u_xlat16_25 = u_xlat16_25 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz
            = u_xlat16_2.xyz * vec3(u_xlat16_25);\n    u_xlat16_11 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat16_11) * u_xlat16_4.xyz;\n   
            u_xlat16_25 = (-u_xlat16_0.x) + 1.0;\n    u_xlat16_28 = (-u_xlat16_25)
            + 1.0;\n    u_xlat16_28 = u_xlat16_0.w * _GlossMapScale + u_xlat16_28;\n   
            u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_0.xyz)
            + vec3(u_xlat16_28);\n    u_xlat24 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n   
            u_xlat11 = u_xlat24;\n    u_xlat11 = clamp(u_xlat11, 0.0, 1.0);\n   
            u_xlat24 = u_xlat24 + u_xlat24;\n    u_xlat6.xyz = u_xlat16_1.xyz * (-vec3(u_xlat24))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat24 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat16_1.xyz = vec3(u_xlat24)
            * _LightColor0.xyz;\n    u_xlat24 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat24 = u_xlat24 * u_xlat24;\n    u_xlat3.x = u_xlat24 * u_xlat24;\n   
            u_xlat24 = texture(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat24 =
            u_xlat24 * 16.0;\n    u_xlat16_7.xyz = u_xlat16_0.xyz * vec3(u_xlat24);\n   
            u_xlat16_28 = (-u_xlat11) + 1.0;\n    u_xlat24 = u_xlat16_28 * u_xlat16_28;\n   
            u_xlat24 = u_xlat16_28 * u_xlat24;\n    u_xlat24 = u_xlat16_28 * u_xlat24;\n   
            u_xlat16_5.xyz = vec3(u_xlat24) * u_xlat16_5.xyz + u_xlat16_0.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat16_0.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz
            * _Color.xyz;\n    u_xlat16_5.xyz = u_xlat0.xyz * vec3(u_xlat16_25) +
            u_xlat16_7.xyz;\n    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz
            + u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0
            = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp
            vec4 u_xlat10_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump
            vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump float u_xlat16_27;\nmediump
            float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness))
            + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n   
            u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat16_9.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n    u_xlat16_9.x
            = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz = u_xlat2.xyz * (-u_xlat16_9.xxx)
            + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat16_9.xyz, u_xlat16_1);\n    u_xlat16_3.x = u_xlat10_1.w + -1.0;\n   
            u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x
            = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_1.xyz
            * u_xlat16_3.xxx;\n    u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_3.xyz = u_xlat10_0.xxx * u_xlat16_3.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n    u_xlat16 = clamp(u_xlat16,
            0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat4.xyz =
            u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_6.xyz = u_xlat0.xxx * _SpecColor.xyz;\n   
            u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat0.x = u_xlat16_27 * u_xlat16_27;\n   
            u_xlat0.x = u_xlat16_27 * u_xlat0.x;\n    u_xlat0.x = u_xlat16_27 * u_xlat0.x;\n   
            u_xlat16_27 = (-_SpecColor.x) + 1.0;\n    u_xlat16_29 = (-u_xlat16_27)
            + 1.0;\n    u_xlat16_29 = u_xlat16_29 + _Glossiness;\n    u_xlat16_29
            = clamp(u_xlat16_29, 0.0, 1.0);\n    u_xlat16_7.xyz = vec3(u_xlat16_29)
            + (-_SpecColor.xyz);\n    u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz
            + _SpecColor.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n   
            u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz
            = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = u_xlat0.xyz * vec3(u_xlat16_27)
            + u_xlat16_6.xyz;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0,
            0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w =
            0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3
            u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_9;\nfloat
            u_xlat16;\nmediump float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid
            main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n   
            u_xlat16_1.x = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1.x
            = u_xlat0.x * u_xlat16_1.x;\n    u_xlat16_1.x = u_xlat16_1.x * 6.0;\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat16_9.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n    u_xlat16_9.x
            = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz = u_xlat2.xyz * (-u_xlat16_9.xxx)
            + vs_TEXCOORD1.xyz;\n    u_xlat16_1 = textureLod(unity_SpecCube0, u_xlat16_9.xyz,
            u_xlat16_1.x);\n    u_xlat16_3.x = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x
            = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x
            * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xxx;\n   
            u_xlat16_0.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz
            = u_xlat16_0.xxx * u_xlat16_3.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz),
            u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n    u_xlat16 = clamp(u_xlat16,
            0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat4.xyz =
            u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x =
            dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_6.xyz = u_xlat0.xxx * _SpecColor.xyz;\n   
            u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat0.x = u_xlat16_27 * u_xlat16_27;\n   
            u_xlat0.x = u_xlat16_27 * u_xlat0.x;\n    u_xlat0.x = u_xlat16_27 * u_xlat0.x;\n   
            u_xlat16_27 = (-_SpecColor.x) + 1.0;\n    u_xlat16_29 = (-u_xlat16_27)
            + 1.0;\n    u_xlat16_29 = u_xlat16_29 + _Glossiness;\n    u_xlat16_29
            = clamp(u_xlat16_29, 0.0, 1.0);\n    u_xlat16_7.xyz = vec3(u_xlat16_29)
            + (-_SpecColor.xyz);\n    u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz
            + _SpecColor.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n   
            u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_6.xyz = u_xlat0.xyz * vec3(u_xlat16_27)
            + u_xlat16_6.xyz;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying
            mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying
            highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec3 u_xlat16_3;\nvec4
            u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    u_xlat1.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat1.xyz = vec3(u_xlat21) *
            u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2.w
            = 0.0;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = vec3(u_xlat21) * u_xlat2.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx
            * u_xlat2.zxy;\n    u_xlat16_3.xyz = u_xlat2.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n   
            u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_3.xyz
            = vec3(u_xlat21) * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_3.xyz;\n   
            vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD4.xyz
            = u_xlat2.xyz;\n    u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n   
            u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat4 = u_xlat2.yyyy
            * u_xlat3;\n    u_xlat3 = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat1 *
            u_xlat1 + u_xlat3;\n    u_xlat1 = u_xlat1 * u_xlat2.xxxx + u_xlat4;\n   
            u_xlat4 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz
            = u_xlat0.xyz;\n    u_xlat0 = u_xlat4 * u_xlat2.zzzz + u_xlat1;\n   
            u_xlat1 = u_xlat4 * u_xlat4 + u_xlat3;\n    u_xlat1 = max(u_xlat1, vec4(9.99999997e-07,
            9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat1);\n   
            u_xlat1 = u_xlat1 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat1 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat1;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat1 * u_xlat0;\n    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_5.x = u_xlat2.x *
            u_xlat2.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat2.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat2);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_5.xyz);\n    u_xlat2.xyz
            = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat2.xyz
            = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat2.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform
            \tfloat _GlossMapScale;\nuniform lowp sampler2D _MainTex;\nuniform lowp
            sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp
            sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nlowp
            vec4 u_xlat10_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3
            u_xlat7;\nlowp vec3 u_xlat10_7;\nmediump float u_xlat16_15;\nmediump
            float u_xlat16_22;\nmediump float u_xlat16_24;\nvoid main()\n{\n    u_xlat10_0.xy
            = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_15 = dot(u_xlat16_1.xy,
            u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n   
            u_xlat16_15 = min(u_xlat16_15, 1.0);\n    u_xlat16_15 = (-u_xlat16_15)
            + 1.0;\n    u_xlat16_15 = sqrt(u_xlat16_15);\n    u_xlat16_2.xyz = u_xlat16_1.yyy
            * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx
            + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_15)
            + u_xlat16_1.xyw;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n   
            u_xlat7.x = u_xlat0.x;\n    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n   
            u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat0.xzw = u_xlat16_1.xyz
            * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat0.xzw,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat16_22 = (-u_xlat7.x) +
            1.0;\n    u_xlat7.x = u_xlat16_22 * u_xlat16_22;\n    u_xlat7.x = u_xlat16_22
            * u_xlat7.x;\n    u_xlat7.x = u_xlat16_22 * u_xlat7.x;\n    u_xlat10_2
            = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy);\n    u_xlat16_22 = (-u_xlat10_2.x)
            + 1.0;\n    u_xlat16_3.x = (-u_xlat16_22) + 1.0;\n    u_xlat16_3.x =
            u_xlat10_2.w * _GlossMapScale + u_xlat16_3.x;\n    u_xlat16_3.x = clamp(u_xlat16_3.x,
            0.0, 1.0);\n    u_xlat16_3.xyz = (-u_xlat10_2.xyz) + u_xlat16_3.xxx;\n   
            u_xlat16_3.xyz = u_xlat7.xxx * u_xlat16_3.xyz + u_xlat10_2.xyz;\n   
            u_xlat16_24 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_24
            = u_xlat16_24 + u_xlat16_24;\n    u_xlat16_4.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_24))
            + vs_TEXCOORD1.xyz;\n    u_xlat7.x = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat7.xxx
            * _LightColor0.xyz;\n    u_xlat0.z = (-u_xlat10_2.w) * _GlossMapScale
            + 1.0;\n    u_xlat16_24 = (-u_xlat0.z) * 0.699999988 + 1.70000005;\n   
            u_xlat16_24 = u_xlat0.z * u_xlat16_24;\n    u_xlat0.x = texture2D(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_24 =
            u_xlat16_24 * 6.0;\n    u_xlat10_4 = textureCubeLodEXT(unity_SpecCube0,
            u_xlat16_4.xyz, u_xlat16_24);\n    u_xlat16_24 = u_xlat10_4.w + -1.0;\n   
            u_xlat16_24 = unity_SpecCube0_HDR.w * u_xlat16_24 + 1.0;\n    u_xlat16_24
            = u_xlat16_24 * unity_SpecCube0_HDR.x;\n    u_xlat16_5.xyz = u_xlat10_4.xyz
            * vec3(u_xlat16_24);\n    u_xlat10_7.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n   
            u_xlat16_5.xyz = u_xlat10_7.xxx * u_xlat16_5.xyz;\n    u_xlat16_6.xyz
            = u_xlat10_7.xxx * vs_TEXCOORD5.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz
            * u_xlat16_5.xyz;\n    u_xlat10_7.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat7.xyz = u_xlat10_7.xyz * _Color.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat16_22)
            * u_xlat7.xyz;\n    u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_5.xyz = u_xlat0.xxx * u_xlat10_2.xyz
            + u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz
            + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nin mediump vec4 in_TANGENT0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4
            u_xlat2;\nvec4 u_xlat3;\nmediump vec3 u_xlat16_3;\nvec4 u_xlat4;\nmediump
            vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    u_xlat1.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat1.xyz = vec3(u_xlat21) *
            u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2.w
            = 0.0;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat2.xyz = vec3(u_xlat21) * u_xlat2.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx
            * u_xlat2.zxy;\n    u_xlat16_3.xyz = u_xlat2.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n   
            u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_3.xyz
            = vec3(u_xlat21) * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_3.xyz;\n   
            vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD4.xyz
            = u_xlat2.xyz;\n    u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n   
            u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat4 = u_xlat2.yyyy
            * u_xlat3;\n    u_xlat3 = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat1 *
            u_xlat1 + u_xlat3;\n    u_xlat1 = u_xlat1 * u_xlat2.xxxx + u_xlat4;\n   
            u_xlat4 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz
            = u_xlat0.xyz;\n    u_xlat0 = u_xlat4 * u_xlat2.zzzz + u_xlat1;\n   
            u_xlat1 = u_xlat4 * u_xlat4 + u_xlat3;\n    u_xlat1 = max(u_xlat1, vec4(9.99999997e-07,
            9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat1);\n   
            u_xlat1 = u_xlat1 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat1 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat1;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat1 * u_xlat0;\n    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_5.x = u_xlat2.x *
            u_xlat2.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat2.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat2);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_5.xyz);\n    u_xlat2.xyz
            = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat2.xyz
            = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat2.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform
            \tfloat _GlossMapScale;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _SpecGlossMap;\nUNITY_LOCATION(2)
            uniform mediump sampler2D _BumpMap;\nUNITY_LOCATION(3) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(4) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(5)
            uniform mediump samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec2 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump
            vec4 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3
            u_xlat7;\nmediump vec3 u_xlat16_7;\nmediump float u_xlat16_15;\nmediump
            float u_xlat16_22;\nmediump float u_xlat16_24;\nvoid main()\n{\n    u_xlat16_0.xy
            = texture(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat16_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_15 = dot(u_xlat16_1.xy,
            u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n   
            u_xlat16_15 = min(u_xlat16_15, 1.0);\n    u_xlat16_15 = (-u_xlat16_15)
            + 1.0;\n    u_xlat16_15 = sqrt(u_xlat16_15);\n    u_xlat16_2.xyz = u_xlat16_1.yyy
            * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx
            + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_15)
            + u_xlat16_1.xyw;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n   
            u_xlat7.x = u_xlat0.x;\n    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n   
            u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat0.xzw = u_xlat16_1.xyz
            * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat0.xzw,
            _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat16_22 = (-u_xlat7.x) +
            1.0;\n    u_xlat7.x = u_xlat16_22 * u_xlat16_22;\n    u_xlat7.x = u_xlat16_22
            * u_xlat7.x;\n    u_xlat7.x = u_xlat16_22 * u_xlat7.x;\n    u_xlat16_2
            = texture(_SpecGlossMap, vs_TEXCOORD0.xy);\n    u_xlat16_22 = (-u_xlat16_2.x)
            + 1.0;\n    u_xlat16_3.x = (-u_xlat16_22) + 1.0;\n    u_xlat16_3.x =
            u_xlat16_2.w * _GlossMapScale + u_xlat16_3.x;\n    u_xlat16_3.x = clamp(u_xlat16_3.x,
            0.0, 1.0);\n    u_xlat16_3.xyz = (-u_xlat16_2.xyz) + u_xlat16_3.xxx;\n   
            u_xlat16_3.xyz = u_xlat7.xxx * u_xlat16_3.xyz + u_xlat16_2.xyz;\n   
            u_xlat16_24 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_24
            = u_xlat16_24 + u_xlat16_24;\n    u_xlat16_4.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_24))
            + vs_TEXCOORD1.xyz;\n    u_xlat7.x = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat7.xxx
            * _LightColor0.xyz;\n    u_xlat0.z = (-u_xlat16_2.w) * _GlossMapScale
            + 1.0;\n    u_xlat16_24 = (-u_xlat0.z) * 0.699999988 + 1.70000005;\n   
            u_xlat16_24 = u_xlat0.z * u_xlat16_24;\n    u_xlat0.x = texture(unity_NHxRoughness,
            u_xlat0.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_24 =
            u_xlat16_24 * 6.0;\n    u_xlat16_4 = textureLod(unity_SpecCube0, u_xlat16_4.xyz,
            u_xlat16_24);\n    u_xlat16_24 = u_xlat16_4.w + -1.0;\n    u_xlat16_24
            = unity_SpecCube0_HDR.w * u_xlat16_24 + 1.0;\n    u_xlat16_24 = u_xlat16_24
            * unity_SpecCube0_HDR.x;\n    u_xlat16_5.xyz = u_xlat16_4.xyz * vec3(u_xlat16_24);\n   
            u_xlat16_7.x = texture(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_5.xyz
            = u_xlat16_7.xxx * u_xlat16_5.xyz;\n    u_xlat16_6.xyz = u_xlat16_7.xxx
            * vs_TEXCOORD5.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz;\n   
            u_xlat16_7.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat7.xyz
            = u_xlat16_7.xyz * _Color.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat16_22)
            * u_xlat7.xyz;\n    u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz
            + u_xlat16_3.xyz;\n    u_xlat16_5.xyz = u_xlat0.xxx * u_xlat16_2.xyz
            + u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz
            + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform
            \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform
            \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform
            \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform
            \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform
            \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4
            vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4
            u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat
            u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat
            _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D
            _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump
            vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp
            float u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3
            u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump
            vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3 u_xlat8;\nlowp vec3
            u_xlat10_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump float
            u_xlat16_27;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n   
            u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1
            = textureCubeLodEXT(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1);\n   
            u_xlat16_3.x = u_xlat10_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w
            * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx;\n    u_xlat10_0 = texture2D(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;\n   
            u_xlat16_4.xyz = vec3(u_xlat10_0) * vs_TEXCOORD5.xyz;\n    u_xlat0.x
            = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n   
            u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat5.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8.x
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8.x = u_xlat16_27 * u_xlat8.x;\n   
            u_xlat8.x = u_xlat16_27 * u_xlat8.x;\n    u_xlat16_27 = (-_SpecColor.x)
            + 1.0;\n    u_xlat16_28 = (-u_xlat16_27) + 1.0;\n    u_xlat16_28 = u_xlat16_28
            + _Glossiness;\n    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);\n   
            u_xlat16_7.xyz = vec3(u_xlat16_28) + (-_SpecColor.xyz);\n    u_xlat16_7.xyz
            = u_xlat8.xxx * u_xlat16_7.xyz + _SpecColor.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat10_8.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat8.xyz = u_xlat10_8.xyz * _Color.xyz;\n   
            u_xlat16_7.xyz = vec3(u_xlat16_27) * u_xlat8.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_7.xyz + u_xlat16_3.xyz;\n    u_xlat16_4.xyz
            = u_xlat0.xxx * _SpecColor.xyz + u_xlat16_7.xyz;\n    SV_Target0.xyz
            = u_xlat16_4.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform
            \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform
            \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform
            \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform
            \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform
            \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform
            \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4
            u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump
            vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 =
            vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n   
            vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n   
            u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n   
            u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy)
            + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3
            = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n   
            u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz)
            + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0
            = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4
            + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07,
            9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n   
            u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n   
            u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0
            * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n   
            u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n   
            u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n   
            u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n   
            u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x *
            u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n   
            u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg,
            u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz
            = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n   
            u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg,
            u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz
            = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz,
            vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz
            = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz
            = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995,
            1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n   
            u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz
            = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7
            = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform mediump sampler2D _OcclusionMap;\nUNITY_LOCATION(2) uniform highp
            sampler2D unity_NHxRoughness;\nUNITY_LOCATION(3) uniform mediump samplerCube
            unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD4;\nin mediump vec4 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump float u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3
            u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3
            u_xlat8;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump
            float u_xlat16_27;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat0.xw
            = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1.x = (-u_xlat0.x)
            * 0.699999988 + 1.70000005;\n    u_xlat16_1.x = u_xlat0.x * u_xlat16_1.x;\n   
            u_xlat16_1.x = u_xlat16_1.x * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz,
            u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz
            = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat16_1
            = textureLod(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1.x);\n    u_xlat16_3.x
            = u_xlat16_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x
            + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n   
            u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xxx;\n    u_xlat16_0 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat16_0) * u_xlat16_3.xyz;\n   
            u_xlat16_4.xyz = vec3(u_xlat16_0) * vs_TEXCOORD5.xyz;\n    u_xlat0.x
            = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n   
            u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n   
            u_xlat5.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x
            = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8.x
            = u_xlat16_27 * u_xlat16_27;\n    u_xlat8.x = u_xlat16_27 * u_xlat8.x;\n   
            u_xlat8.x = u_xlat16_27 * u_xlat8.x;\n    u_xlat16_27 = (-_SpecColor.x)
            + 1.0;\n    u_xlat16_28 = (-u_xlat16_27) + 1.0;\n    u_xlat16_28 = u_xlat16_28
            + _Glossiness;\n    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);\n   
            u_xlat16_7.xyz = vec3(u_xlat16_28) + (-_SpecColor.xyz);\n    u_xlat16_7.xyz
            = u_xlat8.xxx * u_xlat16_7.xyz + _SpecColor.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat16_8.xyz = texture(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat8.xyz = u_xlat16_8.xyz * _Color.xyz;\n   
            u_xlat16_7.xyz = vec3(u_xlat16_27) * u_xlat8.xyz;\n    u_xlat16_3.xyz
            = u_xlat16_4.xyz * u_xlat16_7.xyz + u_xlat16_3.xyz;\n    u_xlat16_4.xyz
            = u_xlat0.xxx * _SpecColor.xyz + u_xlat16_7.xyz;\n    SV_Target0.xyz
            = u_xlat16_4.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    SV_Target0.w
            = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp
            vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4
            vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying
            mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying
            highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump
            vec3 u_xlat16_2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_TANGENT0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat1.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n   
            u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx
            * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n   
            vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz
            = u_xlat16_2.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n   
            vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define
            texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define
            texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define
            textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump
            vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform
            \tfloat _GlossMapScale;\nuniform lowp sampler2D _MainTex;\nuniform lowp
            sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp
            sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform
            lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0
            gl_FragData[0]\nvec3 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump
            vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nmediump vec3
            u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nfloat
            u_xlat11;\nlowp float u_xlat10_11;\nmediump float u_xlat16_17;\nfloat
            u_xlat24;\nmediump float u_xlat16_25;\nmediump float u_xlat16_28;\nvoid
            main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n   
            u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_17 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy =
            u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_17 = min(u_xlat16_17,
            1.0);\n    u_xlat16_17 = (-u_xlat16_17) + 1.0;\n    u_xlat16_17 = sqrt(u_xlat16_17);\n   
            u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw
            = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz
            = vs_TEXCOORD4.xyz * vec3(u_xlat16_17) + u_xlat16_1.xyw;\n    u_xlat16_25
            = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_25 = u_xlat16_25
            + u_xlat16_25;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_25))
            + vs_TEXCOORD1.xyz;\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy);\n   
            u_xlat3.z = (-u_xlat10_0.w) * _GlossMapScale + 1.0;\n    u_xlat16_25
            = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_25 = u_xlat16_25
            * u_xlat3.z;\n    u_xlat16_25 = u_xlat16_25 * 6.0;\n    u_xlat10_2 =
            textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_25);\n   
            u_xlat16_25 = u_xlat10_2.w + -1.0;\n    u_xlat16_25 = unity_SpecCube0_HDR.w
            * u_xlat16_25 + 1.0;\n    u_xlat16_25 = u_xlat16_25 * unity_SpecCube0_HDR.x;\n   
            u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_25);\n    u_xlat10_11
            = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz =
            vec3(u_xlat10_11) * u_xlat16_4.xyz;\n    u_xlat16_25 = (-u_xlat10_0.x)
            + 1.0;\n    u_xlat16_28 = (-u_xlat16_25) + 1.0;\n    u_xlat16_28 = u_xlat10_0.w
            * _GlossMapScale + u_xlat16_28;\n    u_xlat16_28 = clamp(u_xlat16_28,
            0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat10_0.xyz) + vec3(u_xlat16_28);\n   
            u_xlat24 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat11 =
            u_xlat24;\n    u_xlat11 = clamp(u_xlat11, 0.0, 1.0);\n    u_xlat24 =
            u_xlat24 + u_xlat24;\n    u_xlat6.xyz = u_xlat16_1.xyz * (-vec3(u_xlat24))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat24 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat16_1.xyz = vec3(u_xlat24)
            * _LightColor0.xyz;\n    u_xlat24 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat24 = u_xlat24 * u_xlat24;\n    u_xlat3.x = u_xlat24 * u_xlat24;\n   
            u_xlat24 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat24
            = u_xlat24 * 16.0;\n    u_xlat16_7.xyz = u_xlat10_0.xyz * vec3(u_xlat24);\n   
            u_xlat16_28 = (-u_xlat11) + 1.0;\n    u_xlat24 = u_xlat16_28 * u_xlat16_28;\n   
            u_xlat24 = u_xlat16_28 * u_xlat24;\n    u_xlat24 = u_xlat16_28 * u_xlat24;\n   
            u_xlat16_5.xyz = vec3(u_xlat24) * u_xlat16_5.xyz + u_xlat10_0.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat10_0.xyz
            = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz
            * _Color.xyz;\n    u_xlat16_5.xyz = u_xlat0.xyz * vec3(u_xlat16_25) +
            u_xlat16_7.xyz;\n    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz
            + u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nin mediump vec4 in_TANGENT0;\nout highp vec4
            vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout
            highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout mediump vec4
            vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nout highp vec3 vs_TEXCOORD8;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_2;\nfloat
            u_xlat9;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx
            * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz
            * in_TANGENT0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n   
            u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n   
            vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat1.x
            = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n   
            u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx
            * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n   
            vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz
            = u_xlat16_2.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n   
            vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n#ifdef GL_EXT_shader_texture_lod\n#extension
            GL_EXT_shader_texture_lod : enable\n#endif\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform
            \tfloat _GlossMapScale;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _SpecGlossMap;\nUNITY_LOCATION(2)
            uniform mediump sampler2D _BumpMap;\nUNITY_LOCATION(3) uniform mediump
            sampler2D _OcclusionMap;\nUNITY_LOCATION(4) uniform highp sampler2D unity_NHxRoughness;\nUNITY_LOCATION(5)
            uniform mediump samplerCube unity_SpecCube0;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nvec3 u_xlat3;\nmediump vec3
            u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nfloat
            u_xlat11;\nmediump float u_xlat16_11;\nmediump float u_xlat16_17;\nfloat
            u_xlat24;\nmediump float u_xlat16_25;\nmediump float u_xlat16_28;\nvoid
            main()\n{\n    u_xlat16_0.xy = texture(_BumpMap, vs_TEXCOORD0.xy).yw;\n   
            u_xlat16_1.xy = u_xlat16_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_17 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy =
            u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_17 = min(u_xlat16_17,
            1.0);\n    u_xlat16_17 = (-u_xlat16_17) + 1.0;\n    u_xlat16_17 = sqrt(u_xlat16_17);\n   
            u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw
            = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz
            = vs_TEXCOORD4.xyz * vec3(u_xlat16_17) + u_xlat16_1.xyw;\n    u_xlat16_25
            = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_25 = u_xlat16_25
            + u_xlat16_25;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_25))
            + vs_TEXCOORD1.xyz;\n    u_xlat16_0 = texture(_SpecGlossMap, vs_TEXCOORD0.xy);\n   
            u_xlat3.z = (-u_xlat16_0.w) * _GlossMapScale + 1.0;\n    u_xlat16_25
            = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_25 = u_xlat16_25
            * u_xlat3.z;\n    u_xlat16_25 = u_xlat16_25 * 6.0;\n    u_xlat16_2 =
            textureLod(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_25);\n    u_xlat16_25
            = u_xlat16_2.w + -1.0;\n    u_xlat16_25 = unity_SpecCube0_HDR.w * u_xlat16_25
            + 1.0;\n    u_xlat16_25 = u_xlat16_25 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz
            = u_xlat16_2.xyz * vec3(u_xlat16_25);\n    u_xlat16_11 = texture(_OcclusionMap,
            vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat16_11) * u_xlat16_4.xyz;\n   
            u_xlat16_25 = (-u_xlat16_0.x) + 1.0;\n    u_xlat16_28 = (-u_xlat16_25)
            + 1.0;\n    u_xlat16_28 = u_xlat16_0.w * _GlossMapScale + u_xlat16_28;\n   
            u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);\n    u_xlat16_5.xyz = (-u_xlat16_0.xyz)
            + vec3(u_xlat16_28);\n    u_xlat24 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n   
            u_xlat11 = u_xlat24;\n    u_xlat11 = clamp(u_xlat11, 0.0, 1.0);\n   
            u_xlat24 = u_xlat24 + u_xlat24;\n    u_xlat6.xyz = u_xlat16_1.xyz * (-vec3(u_xlat24))
            + (-vs_TEXCOORD1.xyz);\n    u_xlat24 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat16_1.xyz = vec3(u_xlat24)
            * _LightColor0.xyz;\n    u_xlat24 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n   
            u_xlat24 = u_xlat24 * u_xlat24;\n    u_xlat3.x = u_xlat24 * u_xlat24;\n   
            u_xlat24 = texture(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat24 =
            u_xlat24 * 16.0;\n    u_xlat16_7.xyz = u_xlat16_0.xyz * vec3(u_xlat24);\n   
            u_xlat16_28 = (-u_xlat11) + 1.0;\n    u_xlat24 = u_xlat16_28 * u_xlat16_28;\n   
            u_xlat24 = u_xlat16_28 * u_xlat24;\n    u_xlat24 = u_xlat16_28 * u_xlat24;\n   
            u_xlat16_5.xyz = vec3(u_xlat24) * u_xlat16_5.xyz + u_xlat16_0.xyz;\n   
            u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    u_xlat16_0.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat16_0.xyz
            * _Color.xyz;\n    u_xlat16_5.xyz = u_xlat0.xyz * vec3(u_xlat16_25) +
            u_xlat16_7.xyz;\n    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz
            + u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDBASE
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - LIGHTMAP_ON
        - LIGHTMAP_SHADOW_MIXING
        - LIGHTPROBE_SH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - VERTEXLIGHT_ON
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _DETAIL_MULX2
        - _EMISSION
        - _GLOSSYREFLECTIONS_OFF
        - _NORMALMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECGLOSSMAP
        - _SPECULARHIGHLIGHTS_OFF
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - _NORMALMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _SPECGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - LIGHTMAP_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTPROBE_SH
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          - LIGHTPROBE_SH
          hasDiscard: 0
        KeywordsMinimalCardinality: 34
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - LIGHTPROBE_SH
          - VERTEXLIGHT_ON
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 4
          passId: 0
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _NORMALMAP
          - _SPECGLOSSMAP
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 1
        SerializedObjectId: 0
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDBASE
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w
            = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www +
            _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x
            = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n   
            u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat _Glossiness;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform
            highp sampler2D _LightTexture0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3
            u_xlat0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nvec3 u_xlat5;\nlowp vec3 u_xlat10_5;\nfloat u_xlat15;\nmediump
            float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz,
            vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz
            = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot((-vs_TEXCOORD1.xyz),
            u_xlat0.xyz);\n    u_xlat15 = u_xlat15 + u_xlat15;\n    u_xlat1.xyz =
            u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n    u_xlat2.x
            = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n   
            u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz,
            u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat5.x
            = u_xlat15 * u_xlat15;\n    u_xlat1.x = u_xlat5.x * u_xlat5.x;\n    u_xlat1.y
            = (-_Glossiness) + 1.0;\n    u_xlat5.x = texture2D(unity_NHxRoughness,
            u_xlat1.xy).x;\n    u_xlat5.x = u_xlat5.x * 16.0;\n    u_xlat16_3.xyz
            = u_xlat5.xxx * _SpecColor.xyz;\n    u_xlat10_5.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat5.xyz = u_xlat10_5.xyz * _Color.xyz;\n   
            u_xlat16_18 = (-_SpecColor.x) + 1.0;\n    u_xlat16_3.xyz = u_xlat5.xyz
            * vec3(u_xlat16_18) + u_xlat16_3.xyz;\n    u_xlat5.xyz = vs_TEXCOORD5.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * vs_TEXCOORD5.xxx + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat5.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat5.x = texture2D(_LightTexture0,
            u_xlat5.xx).x;\n    u_xlat16_4.xyz = u_xlat5.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    SV_Target0.xyz =
            u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nin highp vec4 in_POSITION0;\nin
            mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin highp vec2
            in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4
            vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec3 vs_TEXCOORD6;\nout
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w
            = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www +
            _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x
            = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n   
            u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat
            _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform highp
            sampler2D _LightTexture0;\nUNITY_LOCATION(2) uniform highp sampler2D
            unity_NHxRoughness;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin
            highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin highp vec4
            vs_TEXCOORD4;\nin highp vec3 vs_TEXCOORD5;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump
            vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3
            u_xlat16_5;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat15 = u_xlat15
            + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z
            = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat5.x = u_xlat15 * u_xlat15;\n    u_xlat1.x = u_xlat5.x
            * u_xlat5.x;\n    u_xlat1.y = (-_Glossiness) + 1.0;\n    u_xlat5.x =
            texture(unity_NHxRoughness, u_xlat1.xy).x;\n    u_xlat5.x = u_xlat5.x
            * 16.0;\n    u_xlat16_3.xyz = u_xlat5.xxx * _SpecColor.xyz;\n    u_xlat16_5.xyz
            = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat5.xyz = u_xlat16_5.xyz
            * _Color.xyz;\n    u_xlat16_18 = (-_SpecColor.x) + 1.0;\n    u_xlat16_3.xyz
            = u_xlat5.xyz * vec3(u_xlat16_18) + u_xlat16_3.xyz;\n    u_xlat5.xyz
            = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat5.xyz
            = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx + u_xlat5.xyz;\n   
            u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD5.zzz
            + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat5.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat5.x = texture(_LightTexture0,
            u_xlat5.xx).x;\n    u_xlat16_4.xyz = u_xlat5.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    SV_Target0.xyz =
            u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - POINT
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute
            highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute
            highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute
            mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying
            highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp
            vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3
            vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool
            u_xlatb0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nfloat
            u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    vs_TEXCOORD1.w
            = 0.0;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) *
            u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    u_xlat2.xyz =
            (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = u_xlat2.x;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx
            * u_xlat0.zxy;\n    u_xlat16_3.xyz = u_xlat0.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n   
            vs_TEXCOORD4.xyz = u_xlat0.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz
            = u_xlat16_3.xyz;\n    vs_TEXCOORD3.w = u_xlat2.y;\n    vs_TEXCOORD4.w
            = u_xlat2.z;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _BumpScale;\nuniform \tfloat _GlossMapScale;\nuniform
            lowp sampler2D _MainTex;\nuniform lowp sampler2D _SpecGlossMap;\nuniform
            lowp sampler2D _BumpMap;\nuniform highp sampler2D unity_NHxRoughness;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp
            vec4 u_xlat10_2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat5;\nmediump
            float u_xlat16_11;\nmediump float u_xlat16_16;\nvoid main()\n{\n    u_xlat10_0.xy
            = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_11 = dot(u_xlat16_1.xy,
            u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n   
            u_xlat16_11 = min(u_xlat16_11, 1.0);\n    u_xlat16_11 = (-u_xlat16_11)
            + 1.0;\n    u_xlat16_11 = sqrt(u_xlat16_11);\n    u_xlat16_2.xyz = u_xlat16_1.yyy
            * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx
            + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_11)
            + u_xlat16_1.xyw;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n   
            u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat0.xyz = u_xlat16_1.xyz
            * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n   
            u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat0.x
            = dot(u_xlat0.xyz, u_xlat3.xyz);\n    u_xlat5 = dot(u_xlat16_1.xyz, u_xlat3.xyz);\n   
            u_xlat5 = clamp(u_xlat5, 0.0, 1.0);\n    u_xlat16_1.xyz = vec3(u_xlat5)
            * _LightColor0.xyz;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat10_2 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy);\n   
            u_xlat0.y = (-u_xlat10_2.w) * _GlossMapScale + 1.0;\n    u_xlat0.x =
            texture2D(unity_NHxRoughness, u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x
            * 16.0;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * u_xlat0.xxx;\n    u_xlat16_16
            = (-u_xlat10_2.x) + 1.0;\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * vec3(u_xlat16_16) + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nin highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin
            highp vec2 in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nin mediump vec4
            in_TANGENT0;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout
            highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4
            vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4 vs_TEXCOORD7;\nvec4
            u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nmediump vec3
            u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy
            * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0]
            * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2]
            * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n   
            u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0
            = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    vs_TEXCOORD1.w
            = 0.0;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n   
            u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) *
            u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    u_xlat2.xyz =
            (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = u_xlat2.x;\n   
            u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n   
            u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx
            * u_xlat0.zxy;\n    u_xlat16_3.xyz = u_xlat0.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n   
            vs_TEXCOORD4.xyz = u_xlat0.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz
            = u_xlat16_3.xyz;\n    vs_TEXCOORD3.w = u_xlat2.y;\n    vs_TEXCOORD4.w
            = u_xlat2.z;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform
            \tfloat _GlossMapScale;\nUNITY_LOCATION(0) uniform mediump sampler2D
            _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _SpecGlossMap;\nUNITY_LOCATION(2)
            uniform mediump sampler2D _BumpMap;\nUNITY_LOCATION(3) uniform highp
            sampler2D unity_NHxRoughness;\nin highp vec4 vs_TEXCOORD0;\nin highp
            vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin
            highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec3
            u_xlat0;\nmediump vec3 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nmediump
            vec4 u_xlat16_2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat5;\nmediump
            float u_xlat16_11;\nmediump float u_xlat16_16;\nvoid main()\n{\n    u_xlat16_0.xy
            = texture(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat16_0.yx
            * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_11 = dot(u_xlat16_1.xy,
            u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n   
            u_xlat16_11 = min(u_xlat16_11, 1.0);\n    u_xlat16_11 = (-u_xlat16_11)
            + 1.0;\n    u_xlat16_11 = sqrt(u_xlat16_11);\n    u_xlat16_2.xyz = u_xlat16_1.yyy
            * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx
            + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_11)
            + u_xlat16_1.xyw;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n   
            u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat0.xyz = u_xlat16_1.xyz
            * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n   
            u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat0.x
            = dot(u_xlat0.xyz, u_xlat3.xyz);\n    u_xlat5 = dot(u_xlat16_1.xyz, u_xlat3.xyz);\n   
            u_xlat5 = clamp(u_xlat5, 0.0, 1.0);\n    u_xlat16_1.xyz = vec3(u_xlat5)
            * _LightColor0.xyz;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x
            = u_xlat0.x * u_xlat0.x;\n    u_xlat16_2 = texture(_SpecGlossMap, vs_TEXCOORD0.xy);\n   
            u_xlat0.y = (-u_xlat16_2.w) * _GlossMapScale + 1.0;\n    u_xlat0.x =
            texture(unity_NHxRoughness, u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x
            * 16.0;\n    u_xlat16_4.xyz = u_xlat16_2.xyz * u_xlat0.xxx;\n    u_xlat16_16
            = (-u_xlat16_2.x) + 1.0;\n    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * vec3(u_xlat16_16) + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz
            * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump
            vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp
            vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying
            highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp
            vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat
            u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat _Glossiness;\nuniform
            lowp sampler2D _MainTex;\nuniform highp sampler2D unity_NHxRoughness;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp
            vec3 u_xlat10_0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump
            vec3 u_xlat16_4;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n   
            u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x =
            inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n   
            u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat15 = u_xlat15
            + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z
            = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n   
            u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x,
            0.0, 1.0);\n    u_xlat16_3.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat0.x = u_xlat15 * u_xlat15;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n   
            u_xlat0.y = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness,
            u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_4.xyz
            = u_xlat0.xxx * _SpecColor.xyz;\n    u_xlat10_0.xyz = texture2D(_MainTex,
            vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz * _Color.xyz;\n   
            u_xlat16_18 = (-_SpecColor.x) + 1.0;\n    u_xlat16_4.xyz = u_xlat0.xyz
            * vec3(u_xlat16_18) + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz
            * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nin highp
            vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2 in_TEXCOORD0;\nin
            highp vec2 in_TEXCOORD1;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout
            highp vec4 vs_TEXCOORD4;\nout highp vec3 vs_TEXCOORD5;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy
            = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw
            = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n   
            vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n   
            u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w =
            0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n   
            vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2
            = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n   
            u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n   
            u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n   
            u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n   
            vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0,
            0.0, 0.0, 0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Color;\nuniform \tfloat
            _Glossiness;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1)
            uniform highp sampler2D unity_NHxRoughness;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nlayout(location = 0) out
            mediump vec4 SV_Target0;\nvec3 u_xlat0;\nmediump vec3 u_xlat16_0;\nvec3
            u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nfloat
            u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x
            = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n   
            u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot((-vs_TEXCOORD1.xyz),
            u_xlat0.xyz);\n    u_xlat15 = u_xlat15 + u_xlat15;\n    u_xlat1.xyz =
            u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n    u_xlat2.x
            = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n   
            u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz,
            u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3.xyz
            = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat0.x = u_xlat15 * u_xlat15;\n   
            u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = (-_Glossiness) +
            1.0;\n    u_xlat0.x = texture(unity_NHxRoughness, u_xlat0.xy).x;\n   
            u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_4.xyz = u_xlat0.xxx * _SpecColor.xyz;\n   
            u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat0.xyz
            = u_xlat16_0.xyz * _Color.xyz;\n    u_xlat16_18 = (-_SpecColor.x) + 1.0;\n   
            u_xlat16_4.xyz = u_xlat0.xyz * vec3(u_xlat16_18) + u_xlat16_4.xyz;\n   
            SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w =
            1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - DIRECTIONAL
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform
            \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform
            \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute
            mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute
            highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying
            highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4
            u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat16;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n    vs_TEXCOORD1.w
            = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www +
            _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x
            = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n   
            u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD2.w = u_xlat1.x;\n   
            u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat2.xyz = u_xlat1.xxx *
            u_xlat2.xyz;\n    vs_TEXCOORD2.xyz = u_xlat2.xyz;\n    u_xlat3.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat1.x = dot(u_xlat3.xyz,
            u_xlat3.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat3.xyz
            = u_xlat1.xxx * u_xlat3.xyz;\n    u_xlat16_4.xyz = u_xlat2.yzx * u_xlat3.zxy;\n   
            u_xlat16_4.xyz = u_xlat3.yzx * u_xlat2.zxy + (-u_xlat16_4.xyz);\n   
            vs_TEXCOORD4.xyz = u_xlat3.xyz;\n    u_xlat1.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat16_4.xyz = u_xlat1.xxx * u_xlat16_4.xyz;\n    vs_TEXCOORD3.xyz
            = u_xlat16_4.xyz;\n    vs_TEXCOORD3.w = u_xlat1.y;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4
            _Color;\nuniform \tmediump float _BumpScale;\nuniform \tfloat _GlossMapScale;\nuniform
            \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform
            lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform
            highp sampler2D _LightTexture0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying
            highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp
            vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4
            vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4
            u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nlowp vec4
            u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nfloat
            u_xlat5;\nmediump float u_xlat16_11;\nmediump float u_xlat16_17;\nvoid
            main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n   
            u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_11 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy =
            u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_11 = min(u_xlat16_11,
            1.0);\n    u_xlat16_11 = (-u_xlat16_11) + 1.0;\n    u_xlat16_11 = sqrt(u_xlat16_11);\n   
            u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw
            = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz
            = vs_TEXCOORD4.xyz * vec3(u_xlat16_11) + u_xlat16_1.xyw;\n    u_xlat0.x
            = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat0.x = u_xlat0.x
            + u_xlat0.x;\n    u_xlat0.xyz = u_xlat16_1.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z
            = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);\n   
            u_xlat5 = dot(u_xlat16_1.xyz, u_xlat3.xyz);\n    u_xlat5 = clamp(u_xlat5,
            0.0, 1.0);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat3.x = u_xlat0.x
            * u_xlat0.x;\n    u_xlat10_1 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy);\n   
            u_xlat3.y = (-u_xlat10_1.w) * _GlossMapScale + 1.0;\n    u_xlat0.x =
            texture2D(unity_NHxRoughness, u_xlat3.xy).x;\n    u_xlat0.x = u_xlat0.x
            * 16.0;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat0.xxx;\n    u_xlat16_17
            = (-u_xlat10_1.x) + 1.0;\n    u_xlat10_0.xzw = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat0.xzw = u_xlat10_0.xzw * _Color.xyz;\n    u_xlat16_2.xyz = u_xlat0.xzw
            * vec3(u_xlat16_17) + u_xlat16_2.xyz;\n    u_xlat0.xzw = vs_TEXCOORD5.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat0.xzw = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * vs_TEXCOORD5.xxx + u_xlat0.xzw;\n    u_xlat0.xzw = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat0.xzw;\n    u_xlat0.xzw = u_xlat0.xzw + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat0.x = dot(u_xlat0.xzw, u_xlat0.xzw);\n    u_xlat0.x = texture2D(_LightTexture0,
            u_xlat0.xx).x;\n    u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.xyz = vec3(u_xlat5) * u_xlat16_4.xyz;\n    SV_Target0.xyz
            = u_xlat16_2.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - POINT
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform
            \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump
            float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nin
            highp vec4 in_POSITION0;\nin mediump vec3 in_NORMAL0;\nin highp vec2
            in_TEXCOORD0;\nin highp vec2 in_TEXCOORD1;\nin mediump vec4 in_TANGENT0;\nout
            highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4
            vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout highp vec4 vs_TEXCOORD4;\nout
            highp vec3 vs_TEXCOORD5;\nout highp vec3 vs_TEXCOORD6;\nout highp vec4
            vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nvec3
            u_xlat3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat16;\nvoid main()\n{\n   
            u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0
            = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n   
            u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2
            = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position
            = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1
            = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy :
            in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy
            + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy
            + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx
            + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz
            * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n   
            u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n   
            vs_TEXCOORD1.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n    vs_TEXCOORD1.w
            = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www +
            _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x
            = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n   
            u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD2.w = u_xlat1.x;\n   
            u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n   
            u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx
            + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz
            * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n   
            u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat2.xyz = u_xlat1.xxx *
            u_xlat2.xyz;\n    vs_TEXCOORD2.xyz = u_xlat2.xyz;\n    u_xlat3.x = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(in_NORMAL0.xyz,
            hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat1.x = dot(u_xlat3.xyz,
            u_xlat3.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat3.xyz
            = u_xlat1.xxx * u_xlat3.xyz;\n    u_xlat16_4.xyz = u_xlat2.yzx * u_xlat3.zxy;\n   
            u_xlat16_4.xyz = u_xlat3.yzx * u_xlat2.zxy + (-u_xlat16_4.xyz);\n   
            vs_TEXCOORD4.xyz = u_xlat3.xyz;\n    u_xlat1.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n   
            u_xlat16_4.xyz = u_xlat1.xxx * u_xlat16_4.xyz;\n    vs_TEXCOORD3.xyz
            = u_xlat16_4.xyz;\n    vs_TEXCOORD3.w = u_xlat1.y;\n    vs_TEXCOORD4.w
            = u_xlat1.z;\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n   
            u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx +
            u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz
            * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0,
            0.0);\n    return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _LightColor0;\nuniform
            \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform
            \tfloat _GlossMapScale;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump
            sampler2D _SpecGlossMap;\nUNITY_LOCATION(2) uniform mediump sampler2D
            _BumpMap;\nUNITY_LOCATION(3) uniform highp sampler2D _LightTexture0;\nUNITY_LOCATION(4)
            uniform highp sampler2D unity_NHxRoughness;\nin highp vec4 vs_TEXCOORD0;\nin
            highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4
            vs_TEXCOORD3;\nin highp vec4 vs_TEXCOORD4;\nin highp vec3 vs_TEXCOORD5;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nmediump vec3
            u_xlat16_4;\nfloat u_xlat5;\nmediump float u_xlat16_11;\nmediump float
            u_xlat16_17;\nvoid main()\n{\n    u_xlat16_0.xy = texture(_BumpMap, vs_TEXCOORD0.xy).yw;\n   
            u_xlat16_1.xy = u_xlat16_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n   
            u_xlat16_11 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy =
            u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_11 = min(u_xlat16_11,
            1.0);\n    u_xlat16_11 = (-u_xlat16_11) + 1.0;\n    u_xlat16_11 = sqrt(u_xlat16_11);\n   
            u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw
            = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz
            = vs_TEXCOORD4.xyz * vec3(u_xlat16_11) + u_xlat16_1.xyw;\n    u_xlat0.x
            = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat0.x = u_xlat0.x
            + u_xlat0.x;\n    u_xlat0.xyz = u_xlat16_1.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n   
            u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z
            = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);\n   
            u_xlat5 = dot(u_xlat16_1.xyz, u_xlat3.xyz);\n    u_xlat5 = clamp(u_xlat5,
            0.0, 1.0);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat3.x = u_xlat0.x
            * u_xlat0.x;\n    u_xlat16_1 = texture(_SpecGlossMap, vs_TEXCOORD0.xy);\n   
            u_xlat3.y = (-u_xlat16_1.w) * _GlossMapScale + 1.0;\n    u_xlat0.x =
            texture(unity_NHxRoughness, u_xlat3.xy).x;\n    u_xlat0.x = u_xlat0.x
            * 16.0;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * u_xlat0.xxx;\n    u_xlat16_17
            = (-u_xlat16_1.x) + 1.0;\n    u_xlat16_0.xzw = texture(_MainTex, vs_TEXCOORD0.xy).xyz;\n   
            u_xlat0.xzw = u_xlat16_0.xzw * _Color.xyz;\n    u_xlat16_2.xyz = u_xlat0.xzw
            * vec3(u_xlat16_17) + u_xlat16_2.xyz;\n    u_xlat0.xzw = vs_TEXCOORD5.yyy
            * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat0.xzw = hlslcc_mtx4x4unity_WorldToLight[0].xyz
            * vs_TEXCOORD5.xxx + u_xlat0.xzw;\n    u_xlat0.xzw = hlslcc_mtx4x4unity_WorldToLight[2].xyz
            * vs_TEXCOORD5.zzz + u_xlat0.xzw;\n    u_xlat0.xzw = u_xlat0.xzw + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n   
            u_xlat0.x = dot(u_xlat0.xzw, u_xlat0.xzw);\n    u_xlat0.x = texture(_LightTexture0,
            u_xlat0.xx).x;\n    u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n   
            u_xlat16_4.xyz = vec3(u_xlat5) * u_xlat16_4.xyz;\n    SV_Target0.xyz
            = u_xlat16_2.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 1
          SubShaderIndex: 1
          Keywords:
          - POINT
          - _NORMALMAP
          - _SPECGLOSSMAP
          Tags:
          - Key: LIGHTMODE
            Value: FORWARDADD
          - Key: PerformanceChecks
            Value: False
          - Key: RenderType
            Value: Opaque
          - Key: SHADOWSUPPORT
            Value: true
        DefinedKeywords:
        - DIRECTIONAL
        - DIRECTIONAL_COOKIE
        - FOG_EXP
        - FOG_EXP2
        - FOG_LINEAR
        - LIGHTMAP_SHADOW_MIXING
        - POINT
        - POINT_COOKIE
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - SHADOWS_SCREEN
        - SHADOWS_SHADOWMASK
        - SPOT
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _DETAIL_MULX2
        - _NORMALMAP
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECGLOSSMAP
        - _SPECULARHIGHLIGHTS_OFF
        - __
        - _
        KeywordGroups:
        - Keywords:
          - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
          hasDiscard: 1
        - Keywords:
          - _
          - _NORMALMAP
          hasDiscard: 1
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _SPECGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - POINT
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          hasDiscard: 0
        - Keywords:
          - SPOT
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - SPOT
          - SHADOWS_DEPTH
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - DIRECTIONAL_COOKIE
          - SHADOWS_SCREEN
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          hasDiscard: 0
        - Keywords:
          - POINT_COOKIE
          - SHADOWS_CUBE
          - SHADOWS_SHADOWMASK
          - LIGHTMAP_SHADOW_MIXING
          hasDiscard: 0
        KeywordsMinimalCardinality: 35
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - POINT
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - DIRECTIONAL
        - shaderCompilerPlatform: 5
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - POINT
          - _NORMALMAP
          - _SPECGLOSSMAP
        - shaderCompilerPlatform: 9
          shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
          passType: 5
          passId: 1
          subShaderIndex: 1
          upToDate: 0
          keywords:
          - POINT
          - _NORMALMAP
          - _SPECGLOSSMAP
        CompilationErrors: []
        HasDepthReader: 0
        Id: 1
        SubShaderIndex: 1
        SerializedObjectId: 1
        Tags:
        - Key: LIGHTMODE
          Value: FORWARDADD
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      - Shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants: []
        DefinedKeywords:
        - SHADOWS_CUBE
        - SHADOWS_DEPTH
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - _ALPHABLEND_ON
        - _ALPHAPREMULTIPLY_ON
        - _ALPHATEST_ON
        - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
        - _SPECGLOSSMAP
        - _
        KeywordGroups:
        - Keywords:
          - _
          - _ALPHATEST_ON
          - _ALPHABLEND_ON
          - _ALPHAPREMULTIPLY_ON
          hasDiscard: 1
        - Keywords:
          - _
          - _SPECGLOSSMAP
          hasDiscard: 1
        - Keywords:
          - SHADOWS_DEPTH
          hasDiscard: 0
        - Keywords:
          - SHADOWS_CUBE
          hasDiscard: 0
        KeywordsMinimalCardinality: 2
        ContainsInvalidVariant: 0
        VariantStructures: []
        CompilationErrors: []
        HasDepthReader: 0
        Id: 2
        SubShaderIndex: 1
        SerializedObjectId: 2
        Tags:
        - Key: LIGHTMODE
          Value: SHADOWCASTER
        - Key: PerformanceChecks
          Value: False
        - Key: RenderType
          Value: Opaque
        - Key: SHADOWSUPPORT
          Value: true
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: PerformanceChecks
        Value: False
      - Key: RenderType
        Value: Opaque
    Shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - DIRECTIONAL
    - DIRLIGHTMAP_COMBINED
    - FOG_EXP
    - FOG_EXP2
    - FOG_LINEAR
    - LIGHTMAP_ON
    - LIGHTPROBE_SH
    - SHADOWS_SCREEN
    - SHADOWS_SHADOWMASK
    - VERTEXLIGHT_ON
    - _ALPHABLEND_ON
    - _ALPHAPREMULTIPLY_ON
    - _ALPHATEST_ON
    - _EMISSION
    - _GLOSSYREFLECTIONS_OFF
    - _NORMALMAP
    - _PARALLAXMAP
    - _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A
    - _SPECGLOSSMAP
    - _SPECULARHIGHLIGHTS_OFF
    - DIRECTIONAL_COOKIE
    - POINT
    - POINT_COOKIE
    - SHADOWS_DEPTH
    - SPOT
    - DYNAMICLIGHTMAP_ON
    - INSTANCING_ON
    - LIGHTMAP_SHADOW_MIXING
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _DETAIL_MULX2
    - __
    - _
    - SHADOWS_CUBE
    - SHADOWS_SOFT
    fallbackShader: {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - POINT
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - LIGHTPROBE_SH
      - VERTEXLIGHT_ON
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 4
      passId: 0
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - POINT
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - DIRECTIONAL
    - shaderCompilerPlatform: 5
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - POINT
      - _NORMALMAP
      - _SPECGLOSSMAP
    - shaderCompilerPlatform: 9
      shader: {fileID: 45, guid: 0000000000000000f000000000000000, type: 0}
      passType: 5
      passId: 1
      subShaderIndex: 1
      upToDate: 0
      keywords:
      - POINT
      - _NORMALMAP
      - _SPECGLOSSMAP
  - ParsedSubShaders:
    - Index: 0
      Passes:
      - Shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
        ShaderVariants:
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform
            \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nlowp vec4 u_xlat10_1;\nfloat unity_roundEven(float x) { float
            y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2
            unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x);
            a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4
            unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid
            main()\n{\n    u_xlat16_0.x = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x
            = unity_roundEven(u_xlat16_0.x);\n    u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n   
            u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1
            + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0
            = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nin highp
            vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvoid
            main()\n{\n    u_xlat16_0.x = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x
            = roundEven(u_xlat16_0.x);\n    u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n   
            u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1
            + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0
            = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords: []
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform
            \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform lowp sampler2D
            _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define
            SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nlowp vec4 u_xlat10_1;\nmediump float u_xlat16_2;\nbool u_xlatb3;\nfloat
            unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x ==
            0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x
            = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3
            unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a)
            { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z);
            a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat16_0.x
            = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x = unity_roundEven(u_xlat16_0.x);\n   
            u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n    u_xlat10_1 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1 + _TextureSampleAdd;\n   
            u_xlat16_2 = u_xlat16_0.w * u_xlat1.w + -0.00100000005;\n    u_xlatb3
            = u_xlat16_2<0.0;\n    if(u_xlatb3){discard;}\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nin highp
            vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nUNITY_LOCATION(0)
            uniform mediump sampler2D _MainTex;\nin mediump vec4 vs_COLOR0;\nin highp
            vec2 vs_TEXCOORD0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4
            u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump
            float u_xlat16_2;\nbool u_xlatb3;\nvoid main()\n{\n    u_xlat16_0.x =
            vs_COLOR0.w * 255.0;\n    u_xlat16_0.x = roundEven(u_xlat16_0.x);\n   
            u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n    u_xlat16_1 = texture(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat16_1 + _TextureSampleAdd;\n   
            u_xlat16_2 = u_xlat16_0.w * u_xlat1.w + -0.00100000005;\n    u_xlatb3
            = u_xlat16_2<0.0;\n    if(u_xlatb3){discard;}\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n   
            SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform
            \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump float
            u_xlat16_1;\nvec4 u_xlat2;\nlowp vec4 u_xlat10_2;\nmediump float u_xlat16_4;\nfloat
            unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x ==
            0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x
            = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3
            unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a)
            { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z);
            a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.xy
            = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n   
            u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy,
            0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat16_4 =
            vs_COLOR0.w * 255.0;\n    u_xlat16_4 = unity_roundEven(u_xlat16_4);\n   
            u_xlat16_0.w = u_xlat16_4 * 0.00392156886;\n    u_xlat10_2 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat2 = u_xlat10_2 + _TextureSampleAdd;\n   
            u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0 = u_xlat16_0 * u_xlat2;\n   
            u_xlat16_1 = u_xlat16_1 * u_xlat0.w;\n    SV_Target0.xyz = u_xlat0.xyz
            * vec3(u_xlat16_1);\n    SV_Target0.w = u_xlat16_1;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nin highp
            vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump
            float u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump float
            u_xlat16_4;\nvoid main()\n{\n    u_xlat0.xy = (-_ClipRect.xy) + _ClipRect.zw;\n   
            u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xy
            * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n   
            u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat16_4 = vs_COLOR0.w * 255.0;\n   
            u_xlat16_4 = roundEven(u_xlat16_4);\n    u_xlat16_0.w = u_xlat16_4 *
            0.00392156886;\n    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat2 = u_xlat16_2 + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat2;\n    u_xlat16_1 = u_xlat16_1 * u_xlat0.w;\n   
            SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat16_1);\n    SV_Target0.w =
            u_xlat16_1;\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 5
          NoShaderVariant: 0
          VertexProgram: "\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform
            \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform
            \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform
            \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform
            \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute
            highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump
            vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4
            vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4
            u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n   
            precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision
            highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4
            _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying
            highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0
            gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nlowp
            vec4 u_xlat10_1;\nbool u_xlatb1;\nmediump float u_xlat16_2;\nmediump
            float u_xlat16_5;\nfloat unity_roundEven(float x) { float y = floor(x
            + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2
            a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a;
            }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y);
            a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a)
            { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z);
            a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat16_0.x
            = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x = unity_roundEven(u_xlat16_0.x);\n   
            u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n    u_xlat10_1 = texture2D(_MainTex,
            vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1 + _TextureSampleAdd;\n   
            u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0 = u_xlat16_0 * u_xlat1;\n   
            u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat1.xy = u_xlat1.xy
            + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy * vs_TEXCOORD2.zw;\n   
            u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n    u_xlat16_2 = u_xlat1.y
            * u_xlat1.x;\n    u_xlat16_5 = u_xlat0.w * u_xlat16_2 + -0.00100000005;\n   
            u_xlat16_2 = u_xlat0.w * u_xlat16_2;\n    SV_Target0.xyz = u_xlat0.xyz
            * vec3(u_xlat16_2);\n    SV_Target0.w = u_xlat16_2;\n    u_xlatb1 = u_xlat16_5<0.0;\n   
            if(u_xlatb1){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        - ShaderCompilerPlatform: 9
          NoShaderVariant: 0
          VertexProgram: "\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS
            0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define
            UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION
            0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location
            = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define
            UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform
            \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform
            \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform
            \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform
            \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nin highp
            vec4 in_POSITION0;\nin highp vec4 in_COLOR0;\nin highp vec2 in_TEXCOORD0;\nout
            mediump vec4 vs_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout highp vec4
            vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid
            main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n   
            u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n   
            u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1
            = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0]
            * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2]
            * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3]
            * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 =
            in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy =
            in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1
            = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n   
            u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx
            + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy
            = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n   
            vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect,
            vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10,
            2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0,
            2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n   
            return;\n}\n\n"
          FragmentProgram: "\n#version 300 es\n\nprecision highp float;\nprecision
            highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define
            UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define
            UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define
            UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding
            = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x)
            layout(std140)\n#endif\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform
            \tvec4 _ClipRect;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin
            mediump vec4 vs_COLOR0;\nin highp vec2 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD2;\nlayout(location
            = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4
            u_xlat1;\nmediump vec4 u_xlat16_1;\nbool u_xlatb1;\nmediump float u_xlat16_2;\nmediump
            float u_xlat16_5;\nvoid main()\n{\n    u_xlat16_0.x = vs_COLOR0.w * 255.0;\n   
            u_xlat16_0.x = roundEven(u_xlat16_0.x);\n    u_xlat16_0.w = u_xlat16_0.x
            * 0.00392156886;\n    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);\n   
            u_xlat1 = u_xlat16_1 + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n   
            u_xlat0 = u_xlat16_0 * u_xlat1;\n    u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n   
            u_xlat1.xy = u_xlat1.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy
            * vs_TEXCOORD2.zw;\n    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n   
            u_xlat16_2 = u_xlat1.y * u_xlat1.x;\n    u_xlat16_5 = u_xlat0.w * u_xlat16_2
            + -0.00100000005;\n    u_xlat16_2 = u_xlat0.w * u_xlat16_2;\n    SV_Target0.xyz
            = u_xlat0.xyz * vec3(u_xlat16_2);\n    SV_Target0.w = u_xlat16_2;\n   
            u_xlatb1 = u_xlat16_5<0.0;\n    if(u_xlatb1){discard;}\n    return;\n}\n\n"
          LOD: 0
          readDepth: 0
          PassId: 0
          SubShaderIndex: 0
          Keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
          Tags:
          - Key: CanUseSpriteAtlas
            Value: true
          - Key: IGNOREPROJECTOR
            Value: true
          - Key: PreviewType
            Value: Plane
          - Key: QUEUE
            Value: Transparent
          - Key: RenderType
            Value: Transparent
        DefinedKeywords:
        - STEREO_CUBEMAP_RENDER_ON
        - STEREO_INSTANCING_ON
        - STEREO_MULTIVIEW_ON
        - UNITY_SINGLE_PASS_STEREO
        - UNITY_UI_ALPHACLIP
        - UNITY_UI_CLIP_RECT
        - _
        KeywordGroups:
        - Keywords:
          - _
          - UNITY_UI_CLIP_RECT
          hasDiscard: 1
        - Keywords:
          - _
          - UNITY_UI_ALPHACLIP
          hasDiscard: 1
        KeywordsMinimalCardinality: 0
        ContainsInvalidVariant: 0
        VariantStructures:
        - shaderCompilerPlatform: 5
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 9
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords: []
        - shaderCompilerPlatform: 5
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 9
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
        - shaderCompilerPlatform: 5
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 9
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 5
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
        - shaderCompilerPlatform: 9
          shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
          passType: 0
          passId: 0
          subShaderIndex: 0
          upToDate: 0
          keywords:
          - UNITY_UI_ALPHACLIP
          - UNITY_UI_CLIP_RECT
        CompilationErrors: []
        HasDepthReader: 0
        Id: 0
        SubShaderIndex: 0
        SerializedObjectId: 0
        Tags:
        - Key: CanUseSpriteAtlas
          Value: true
        - Key: IGNOREPROJECTOR
          Value: true
        - Key: PreviewType
          Value: Plane
        - Key: QUEUE
          Value: Transparent
        - Key: RenderType
          Value: Transparent
        UsePass:
          shader: 
          pass: 
        GrabPassTextureName: 
        PlatformMask: -1
      Shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      Tags:
      - Key: CanUseSpriteAtlas
        Value: true
      - Key: IGNOREPROJECTOR
        Value: true
      - Key: PreviewType
        Value: Plane
      - Key: QUEUE
        Value: Transparent
      - Key: RenderType
        Value: Transparent
    Shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
    ShaderPath: Resources/unity_builtin_extra
    ShaderDefinedKeywords:
    - UNITY_UI_ALPHACLIP
    - UNITY_UI_CLIP_RECT
    - STEREO_CUBEMAP_RENDER_ON
    - STEREO_INSTANCING_ON
    - STEREO_MULTIVIEW_ON
    - UNITY_SINGLE_PASS_STEREO
    - _
    fallbackShader: {fileID: 0}
    CompilationErrors: []
    Variants:
    - shaderCompilerPlatform: 5
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 9
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords: []
    - shaderCompilerPlatform: 5
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 9
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
    - shaderCompilerPlatform: 5
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 9
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 5
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
      - UNITY_UI_CLIP_RECT
    - shaderCompilerPlatform: 9
      shader: {fileID: 10770, guid: 0000000000000000f000000000000000, type: 0}
      passType: 0
      passId: 0
      subShaderIndex: 0
      upToDate: 0
      keywords:
      - UNITY_UI_ALPHACLIP
      - UNITY_UI_CLIP_RECT
  _modifiedShaders: []
  invalidShaders: 0
  _sceneLightData:
    PointLightCount: 0
    SpotLightCount: 0
    DirectionalLightCount: 0
    LightmapOn: 0
    DirlightmapCombined: 0
    DirectionalCookieExists: 0
    PointCookieExists: 0
    SpotCookieExists: 0
    AddiitonalLightsKeywordRequired: 0
